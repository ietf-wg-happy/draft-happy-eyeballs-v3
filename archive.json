{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-10-16T01:44:59.717669+00:00",
  "repo": "ietf-wg-happy/draft-happy-eyeballs-v3",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    },
    {
      "name": "discuss",
      "description": "",
      "color": "F1585F"
    },
    {
      "name": "charter",
      "description": "",
      "color": "fbca04"
    },
    {
      "name": "ietf-123",
      "description": "Issues discussed at IETF 123",
      "color": "3f4843"
    },
    {
      "name": "editorial",
      "description": "Editorial issues",
      "color": "87fa46"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "I_kwDOKH7CuM5uzFi6",
      "title": "Retransmissions and next connection attempt timing",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/1",
      "state": "OPEN",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Should the first SYN retransmission and next connection attempt happen at the same time?\r\ni.e. If we attempt to connect to address A, should retransmitting to address A happen at the same time as attempting to connect to address B (the next address in the list)?\r\n\r\nIf we have packet loss in the network, that would probably exacerbate the problem. Maybe we should use packet pacing or some kind of delay between them?",
      "createdAt": "2023-08-21T08:37:04Z",
      "updatedAt": "2025-07-24T09:02:11Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Interesting point! It may be good to discuss some jitter. It is already described as approximate, but that doesn't avoid the problem you bring up.\r\n\r\n> Note that this algorithm should only try to approximate the time of the first SYN retransmission\r\n\r\nOne challenge is, of course, that the layer doing happy eyeballs may not directly know when the SYN retransmission will occur.",
          "createdAt": "2023-08-21T15:19:29Z",
          "updatedAt": "2023-08-21T15:19:29Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "The rationale behind that choice was that both of them are sent when we believe the first SYN (or the corresponding SYN-ACK) to have been lost. We could tweak that logic to avoid having the new SYN and old SYN retransmission to go out to close to one another, but then we have to pick which goes first and an amount to delay the second one. I think sending the old SYN retransmission first makes the most sense, but I'm not sure how to come up with the delay.",
          "createdAt": "2023-08-21T19:36:08Z",
          "updatedAt": "2023-08-21T19:36:08Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "I was testing our implementation currently, and I see that we send out the happy eyeballs race attempt well ahead of the SYN retransmission currently \u2014 so it's the opposite of the delay that @DavidSchinazi mentioned here. Something to look deeper into.",
          "createdAt": "2023-09-05T22:21:50Z",
          "updatedAt": "2023-09-05T22:21:50Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "body": "IETF 123: \n- All of this is best effort (you may not have control over the retransmissions, or even know the timing of them)\n- Would be good to do some measurement\n- A recommendation is maybe okay, but no need to guarantee",
          "createdAt": "2025-07-24T09:02:11Z",
          "updatedAt": "2025-07-24T09:02:11Z"
        }
      ]
    },
    {
      "number": 2,
      "id": "I_kwDOKH7CuM5uzFzm",
      "title": "Sorting algorithm with SVCB/HTTPS RR",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/2",
      "state": "CLOSED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nidhijaju"
      ],
      "labels": [],
      "body": "We should add text about the sorting algorithm incorporating SVCB/HTTPS RR.\r\n\r\nOne option (that an existing implementation has already been using) is to prefer addresses received in hints or resolved via service names on SVCB/HTTPS records over direct A and AAAA responses, and sort the SVCB/HTTPS derived addresses based on their priority.",
      "createdAt": "2023-08-21T08:37:31Z",
      "updatedAt": "2023-10-18T23:36:35Z",
      "closedAt": "2023-10-18T23:36:35Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Right. I think the hints in SVCB should be the same as the A/AAAA derived from SVCB, but our implementation does prefer any SVCB-based (hint or query) address over the \"plain\" A/AAAA answers.",
          "createdAt": "2023-08-21T15:20:34Z",
          "updatedAt": "2023-08-21T15:20:34Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "+1 we should specify how to do this - that way all clients will have the same preference, allowing servers to rely on it.",
          "createdAt": "2023-08-21T19:37:21Z",
          "updatedAt": "2023-08-21T19:37:21Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "(This ends up updating the current section 5)",
          "createdAt": "2023-09-05T22:09:57Z",
          "updatedAt": "2023-09-05T22:09:57Z"
        }
      ]
    },
    {
      "number": 3,
      "id": "I_kwDOKH7CuM5u3cMM",
      "title": "Specify when and how to request SVCB/HTTP RRs",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/3",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "discuss"
      ],
      "body": "My initial proposal here is:\r\n\r\n- Request HTTPS records for any case where the port is 443 or 80, or the URL has a scheme of http:// or https://\r\n- Request the HTTPS record in parallel with A and AAAA",
      "createdAt": "2023-08-21T19:44:13Z",
      "updatedAt": "2025-07-05T04:14:35Z",
      "closedAt": "2025-07-05T04:14:35Z",
      "comments": [
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "> * Request HTTPS records for any case where the port is 443 or 80\r\n\r\nThis part I'm not convinced about. It's possible to run non-HTTP(S) protocols on those ports\r\n\r\n> or the URL has a scheme of http:// or https://\r\n\r\nThis part I agree with. Though I'd phrase it as \"application will use HTTP(S)\" instead of mentioning the URL - semantically you can create an HTTP connection without having an URL in mind.\r\n\r\n> * Request the HTTPS record in parallel with A and AAAA\r\n\r\nDefinitely agree\r\n",
          "createdAt": "2023-08-21T19:49:13Z",
          "updatedAt": "2023-08-21T19:49:13Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "(This ends up updating the current section 4)",
          "createdAt": "2023-09-05T22:10:12Z",
          "updatedAt": "2023-09-05T22:10:12Z"
        },
        {
          "author": "bashi",
          "authorAssociation": "COLLABORATOR",
          "body": "> This part I agree with. Though I'd phrase it as \"application will use HTTP(S)\" instead of mentioning the URL - semantically you can create an HTTP connection without having an URL in mind.\r\n\r\n\"application will use HTTP(S) or WebSocket\" (`ws://` and `wss://`) ?",
          "createdAt": "2023-09-13T06:58:29Z",
          "updatedAt": "2023-09-13T06:58:29Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, web socket too",
          "createdAt": "2023-09-13T14:25:43Z",
          "updatedAt": "2023-09-13T14:25:43Z"
        },
        {
          "author": "ericorth",
          "authorAssociation": "NONE",
          "body": "For context, Chrome queries HTTPS whenever the request reaches our DNS stack tagged with a scheme of \"http\", \"https\", \"ws\", or \"wss\" (but websocket requests are typically internally converted to http/https-schemed URLs before the request gets there anyway).  Some requests, e.g. for proxy servers, never have their scheme tagged with the request to the DNS stack and never query HTTPS.  I keep meaning to fix that some day.",
          "createdAt": "2023-10-31T18:22:21Z",
          "updatedAt": "2023-10-31T18:22:21Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "I_kwDOKH7CuM5u3cU1",
      "title": "Describe impact of SVCB on resolution delay",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/4",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Our implementation currently does:\r\n\r\n- Have the 50ms default \"Resolution Delay\u201d timer apply to waiting for both AAAA and HTTPS/SVCB",
      "createdAt": "2023-08-21T19:44:39Z",
      "updatedAt": "2023-10-10T17:45:43Z",
      "closedAt": "2023-10-10T17:45:43Z",
      "comments": [
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "Sounds reasonable",
          "createdAt": "2023-08-21T19:52:33Z",
          "updatedAt": "2023-08-21T19:52:33Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDOKH7CuM5u3cnG",
      "title": "Discuss impact of ALPN",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/5",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "bashi"
      ],
      "labels": [],
      "body": "SVCB contains ALPN information, which can change what protocols can be attempted (learning that H3/QUIC is supported, for example). We should consider how much of this to discuss in happy eyeballs.",
      "createdAt": "2023-08-21T19:45:40Z",
      "updatedAt": "2023-10-18T23:39:31Z",
      "closedAt": "2023-10-18T23:39:31Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Note that this can impact the current section 6 on connection attempts",
          "createdAt": "2023-09-05T22:11:32Z",
          "updatedAt": "2023-09-05T22:11:32Z"
        }
      ]
    },
    {
      "number": 6,
      "id": "I_kwDOKH7CuM5wORSB",
      "title": "Discuss impact of ECH",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/6",
      "state": "OPEN",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "bashi",
        "tfpauly",
        "nidhijaju"
      ],
      "labels": [],
      "body": "ECH use can make the client be SVCB-reliant instead of SVCB-optional. At the very least, the algorithm will be impacted by being SVCB-reliant.",
      "createdAt": "2023-09-05T22:07:35Z",
      "updatedAt": "2025-10-14T22:20:47Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Note that this can impact the current section 6 on connection attempts",
          "createdAt": "2023-09-05T22:11:37Z",
          "updatedAt": "2023-09-05T22:11:37Z"
        },
        {
          "author": "bashi",
          "authorAssociation": "COLLABORATOR",
          "body": "Suppose that the default server of www.example.com doesn\u2019t support ECH, but it has an alternative endpoint at svc1.example.net that supports ECH.\r\n\r\n    www.example.com.  3600 IN SVCB 1 svc1.example.net. ech=\"...\"\r\n    www.example.com.  3600 IN    A 192.0.2.2\r\n    www.example.com.  3600 IN AAAA 2001:db8::2\r\n    \r\n    svc1.example.net. 3600 IN SVCB 1 . ipv4hint=192.0.2.3 ipv6hint=2001:db8::3\r\n    svc1.example.net. 3600 IN    A 192.0.2.3\r\n    svc1.example.net. 3600 IN AAAA 2001:db8::3\r\n\r\nAn ECH-capable client issues A, AAAA and SVCB queries in paralell. If the client receives response(s) for A and/or AAAA before SVCB, the client can take two approaches:\r\n\r\n- Speculatively start connection attempts first (after the \"Resolution Delay\", if A resolved first) and wait for a SVCB response. If the SVCB record contains \u201cech\u201d, abandon any connections using the addresses from A/AAAA for www.example.com. The client should not finish the algorithm until a SVCB is received, even when one of connection attempts succeeds.\r\n- Wait for a SVCB response before starting connection attempts. If the response contains \u201cech\u201d, modify the sorted list to remove addresses came from A/AAAA for www.example.com.\r\n\r\nIn both cases, the client handles SVCB resolution failures including timeout. The client may treat SVCB resolution failures as fatal or nonfatal.\r\n\r\nI think we want to start connection attempts speculatively. Thoughts?\r\n",
          "createdAt": "2023-09-20T06:34:45Z",
          "updatedAt": "2023-09-20T06:45:44Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "That depends on priorities: if the user (or user agent) cares more about privacy, speculatively starting connection attempts will leak the TLS ClientHello, whereas waiting would have provided ECH keys. If the user (or user agent) cares more about performance, than starting speculatively will save time. I could imagine a browser doing speculative connection attempts in general but disabling them in incognito mode for example.",
          "createdAt": "2023-09-20T15:49:10Z",
          "updatedAt": "2023-09-20T15:49:10Z"
        },
        {
          "author": "bashi",
          "authorAssociation": "COLLABORATOR",
          "body": "I should have clarified what connection attempt means. I meant a connection attempt as a TCP handshake (not including a TLS ClientHello). I thought that ECH-capable clients should wait for a SVCB response before sending ClientHello even they speculatively started TCP handshakes.\r\n\r\nThis brings up another question for me. IIUC Happy Eyeballs v2 is only applicable to TCP. Do we want to extend the scope of v3 to QUIC/H3? If we include QUIC/H3, we may want to break a connection attempt into more granular steps:\r\n1. Underlying transport protocol handshake, applicable only to TCP\r\n2. TLS handshake\r\n\r\nFor example, a strict ECH-capable SVCB-reliant client would want to wait for an SVCB response before 1 and 2. A more relaxed ECH-capable client may start 1 before an SVCB response and would wait for the response before 2. SVCB-optional clients may start both 1 and 2 before an SVCB response, with some delay.",
          "createdAt": "2023-09-26T08:28:40Z",
          "updatedAt": "2023-09-26T08:28:40Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "For TCP, I totally agree with you - it's possible to send the TCP SYN before SVB and then wait before sending the TLS ClientHello.\r\n\r\nI think that this new document should discuss QUIC, so we might need to differentiate between the TLS/TCP and the QUIC case.",
          "createdAt": "2023-09-26T17:00:00Z",
          "updatedAt": "2023-09-26T17:00:00Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Opened #10 to talk about QUIC",
          "createdAt": "2023-09-26T17:41:33Z",
          "updatedAt": "2023-09-26T17:41:33Z"
        },
        {
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "body": "Based on the above discussion, it seems there are three ways of approaching privacy in Happy Eyeballs with regards to ECH:\r\n1) You care about maximum privacy and wait for ECH keys no matter what before proceeding.\r\n2) You care about performance and privacy, so you start the TCP handshake and then wait for ECH keys until you make TLS/QUIC (with a timeout?).\r\n3) You don't wait for ECH keys and just start attempting connections.\r\n\r\nI think they're kind of implied in https://tfpauly.github.io/draft-happy-eyeballs-v3/draft-happy-eyeballs-v3.html#section-6.1-3, but we don't really talk about the privacy impacts of sending a TCP SYN ahead of receiving a SVCB RR (i.e. additional exposure of IP addresses that you might otherwise have never contacted).\r\n\r\nAlso, wondering if we should talk about a timeout for 2) above.",
          "createdAt": "2023-10-19T05:27:45Z",
          "updatedAt": "2023-10-19T05:27:45Z"
        },
        {
          "author": "ericorth",
          "authorAssociation": "NONE",
          "body": "Is the context of this discussion this part of draft-ietf-dnsop-svcb-https-12.html#section-3.1:\r\n\r\n> If DNS responses are cryptographically protected (e.g. using DNSSEC or TLS [[DoT](https://www.ietf.org/archive/id/draft-ietf-dnsop-svcb-https-12.html#DoT)][[DoH](https://www.ietf.org/archive/id/draft-ietf-dnsop-svcb-https-12.html#DoH)]), and SVCB resolution fails due to an authentication error, SERVFAIL response, transport error, or timeout, the client SHOULD abandon its attempt to reach the service, even if the client is SVCB-optional. Otherwise, an active attacker could mount a downgrade attack by denying the user access to the SvcParams.\r\n\r\n???\r\n\r\nFor further context, the specific downgrade attack we were worried about when drafting that paragraph is that a network-level attacker could using timing/size analysis to figure out which QUIC packets contained the HTTPS response and block just those while allowing A/AAAA through.  The client would then get A and AAAA, but HTTPS would either be blackholed or return one of the errors listed above, depending on how and where the attacker blocks the HTTPS packets.\r\n\r\nSo if the client then proceeds to attempt connection past the point where ECH could have been used, it means you've given attackers the ability to block ECH without piercing the encrypted DoH connection.  So we're not just talking a privacy loss of sometimes missing out on ECH when the response doesn't arrive in time.  We're talking a security compromise scenario where the attacker can completely and deliberately prevent ECH from ever being used.\r\n\r\n@davidben Since I believe he was also in many of those conversations and might have thoughts.",
          "createdAt": "2023-10-31T18:01:21Z",
          "updatedAt": "2023-10-31T18:01:21Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "body": "IETF 123:\n- Only applies to secure DNS (since otherwise trivial to drop ECHConfig). If you see packets going by and drop 1/3 of them, you have a 33% chance of dropping the ECHConfig enough for the client to get started without it.\n- Proposal: If using secure DNS, require HTTPS response before proceeding.\n- Alternative: Introduce a longer timer.\n    - Attackers may be willing to wait and slow you down, so a longer timeout makes the user experience slower but doesn't provide meaningfully greater protection.\n    - EK: What if you waited long enough that any packets being persistently dropped would cause the DoH connection to close?\n- Desire to find a way to mitigate the attack, rather than waiting as long as possible. \n    - One approach: include both queries and responses in the same packet. You have to coalesce _all_ the queries & responses. Can't necessarily guarantee that DoH resolver is going to coalesce, since it should answer what it can promptly. Also puts additional requirements on the resolver that only apply to encrypted transports, which may be hard to get implemented.\n- RFC 9460 currently requires the wait-for-HTTPS-response behavior.",
          "createdAt": "2025-10-14T03:37:20Z",
          "updatedAt": "2025-10-14T03:37:20Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "I_kwDOKH7CuM5wOT75",
      "title": "Add SVCB to the intro and overview",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/7",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nidhijaju"
      ],
      "labels": [],
      "body": "Explain what v3 is focused on, and intro SVCB and how it impacts happy eyeballs.",
      "createdAt": "2023-09-05T22:18:26Z",
      "updatedAt": "2023-10-14T03:30:35Z",
      "closedAt": "2023-10-14T03:30:35Z",
      "comments": []
    },
    {
      "number": 10,
      "id": "I_kwDOKH7CuM5yFUly",
      "title": "Discuss QUIC racing specifically",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/10",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Current doc just talks about TCP \u2014 we should add QUIC considerations in specifically",
      "createdAt": "2023-09-26T17:41:16Z",
      "updatedAt": "2023-10-23T15:53:41Z",
      "closedAt": "2023-10-23T15:53:41Z",
      "comments": []
    },
    {
      "number": 15,
      "id": "I_kwDOKH7CuM50bRiy",
      "title": "Acknowledgements",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/15",
      "state": "OPEN",
      "author": "DavidSchinazi",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "editorial"
      ],
      "body": "The Acknowledgements section is currently copy-pasted from HEv2",
      "createdAt": "2023-10-20T01:12:42Z",
      "updatedAt": "2025-07-19T10:55:01Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 18,
      "id": "I_kwDOKH7CuM51Ym1T",
      "title": "Section 8.1: RFC7050 should not be applied to 127.0.0.0/8 and RFC1918 address space?",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/18",
      "state": "CLOSED",
      "author": "momoka0122y",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "nidhijaju"
      ],
      "labels": [
        "discuss"
      ],
      "body": "### Should synthesis be done to all address spaces?\r\n> If client applications or users wish to connect to IPv4 address\r\n> literals, the Happy Eyeballs engine will need to perform NAT64\r\n> address synthesis for them.\r\n\r\nI wonder if this has been discussed for RFC7050 but should this algorithm\r\nbe applied to 127.0.0.0/8 and RFC1918 address space? Maybe we should\r\ndiscuss if these address spaces should NOT be translated.\r\n\r\nFor the loopback address range (127.0.0.0/8), it should not be translated\r\nas the client in question should have a route to the loopback network\r\nresulting in the synthesis not being needed.\r\n\r\nFor addresses within the RFC1918 space, the translated address could be\r\nmisrouted to an unintended host, diverging from the user's original\r\nintention. Nonetheless, it is worth noting that nothing stops the inclusion\r\nof RFC1918 addresses in DNS records. As a result, translated IPv6 addresses\r\noriginating from RFC1918 space can still be acquired via DNS64. Given this,\r\nit may be counterintuitive to impose restrictions on such addresses in the\r\nHappy Eyeballs algorithm.",
      "createdAt": "2023-10-30T23:33:21Z",
      "updatedAt": "2023-11-03T09:08:53Z",
      "closedAt": "2023-11-03T00:28:31Z",
      "comments": [
        {
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "body": "We should add an editorial note about this, but make sure not to restrict anything because loopback and RFC1918 addresses can _technically_ need to be synthesized.",
          "createdAt": "2023-11-01T01:51:00Z",
          "updatedAt": "2023-11-01T01:51:00Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "We discussed this issue from a security perspective in the [CONNECT-UDP RFC](https://www.rfc-editor.org/rfc/rfc9298#section-7-2). There we recommend against proxying loopback, link-local, multicast, etc.\r\n\r\nIdeally RFC 6146 should have warned implementers of NAT64 about this. Unfortunately it didn't.\r\n\r\nThat said, I think it makes sense to synthesize RFC 1918 space via 7050. 1918 space is not globally routeable, but 7050 has no such requirement.\r\n\r\n128.0.0.1/8 however is specific to this host, so synthesizing doesn't make sense when the NAT64 is on another device.\r\n\r\nLooking at the [Special-Use IPv4 Addresses Registry](https://www.iana.org/assignments/iana-ipv4-special-registry), I suspect we might want to restrict the following:\r\n* 0/8\r\n* 127/8\r\n* 169.254/16\r\n* 255.255.255.255/32\r\n\r\nAnother solution - which is what Apple implements - is to perform a route check for the target address and if there is a route then don't synthesize. For example, there's always a route to 127.0.0.1 over the loopback interface.",
          "createdAt": "2023-11-01T23:27:01Z",
          "updatedAt": "2023-11-01T23:27:01Z"
        },
        {
          "author": "momoka0122y",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> That said, I think it makes sense to synthesize RFC 1918 space via 7050. 1918 space is not globally routeable, but 7050 has no such requirement.\r\n\r\nI don't think there should be a text that restricts synthesising the address space but I think there should be an warning of how it `can` be routed to an undesired place.\r\n\r\nhence I propose a text like\r\n\r\n```\r\nIPv4 addresses in the {{!RFC1918}} space may be routed unintendedly when doing NAT64 address synthesis depending on the network configuration of the NAT64 gateway.\r\n```\r\n\r\nI am thinking of a situation like below. The client A is not connected to 192.168.1.1 via IPv4. Depending on where the NAT64 box is at, the client can reach a host with a 1918 space address in a completely different network. (ex. different AS)\r\nTHe client may think that the 192.168.1.1 it is reaching is a totally different host. \r\n```\r\n+--------+        IPv6 Network    +-------+      IPv4 Network     +-------------+\r\n| ClientA |---------------------->| NAT64 |---------------------->| 192.168.1.1 |\r\n+--------+   64:ff9b::192.168.1.1 +-------+       192.168.1.1     +-------------+\r\n```\r\n\r\nThis shouldn't be restricted but I think it would be nice if there is a caution that it may send packets to a client that it is not connected to which normally does not happen in 1918 space.",
          "createdAt": "2023-11-02T09:32:06Z",
          "updatedAt": "2023-11-02T09:42:13Z"
        },
        {
          "author": "momoka0122y",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Another solution - which is what Apple implements - is to perform a route check for the target address and if there is a route then don't synthesize. For example, there's always a route to 127.0.0.1 over the loopback interface.\r\n\r\nThis is also what chrome does (at least last time I checked) but I think as a document it is nice to have the actual IPv4 address spaces written down rather than how it should be implemented.",
          "createdAt": "2023-11-02T09:33:51Z",
          "updatedAt": "2023-11-02T09:33:51Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "The target audience for this document is implementers of HEv3. I'm not seeing how the caution about 1918 is useful for that audience, because there's nothing an HEv3 implementation can or should do about 1918",
          "createdAt": "2023-11-02T19:41:33Z",
          "updatedAt": "2023-11-02T19:41:33Z"
        },
        {
          "author": "momoka0122y",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> The target audience for this document is implementers of HEv3. I'm not seeing how the caution about 1918 is useful for that audience, because there's nothing an HEv3 implementation can or should do about 1918\r\n\r\nI was actually thinking of chrome and apple devises that implements this.",
          "createdAt": "2023-11-03T09:08:53Z",
          "updatedAt": "2023-11-03T09:08:53Z"
        }
      ]
    },
    {
      "number": 19,
      "id": "I_kwDOKH7CuM51Ym3Y",
      "title": "Section 8.1: Adding reference to RA PREF64 RFC8781",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/19",
      "state": "CLOSED",
      "author": "momoka0122y",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "\r\nFrom discussion\r\n\r\n> > the device queries the network for the NAT64 prefix using\r\n> > \"Discovery of the IPv6 Prefix Used for IPv6 Address Synthesis\"\r\n> > [RFC7050] and then\r\n> > Regarding the use of RFC7050 for obtaining the NAT64 prefix, RA Option 38 (as specified in RFC8781) could also serve this purpose. However, given that this section is geared towards platforms not supporting 464XLAT, I assume doing rfc7050 is simpler than getting an RA message for an application so the omission of RFC8781 seems justified.\r\n> \r\n> I think it would be fine to mention to RFC8781. Perhaps you could file an issue on GitHub for that?\r\nhttps://mailarchive.ietf.org/arch/msg/v6ops/2csKJzBti4Mmb5vdWXp4-kzPd1k/\r\n\r\n\r\n```diff\r\n   When an IPv4 address is passed into the library instead of a\r\n   hostname, the device queries the network for the NAT64 prefix using\r\n   \"Discovery of the IPv6 Prefix Used for IPv6 Address Synthesis\"\r\n- [RFC7050] \r\n+ [RFC7050] or PREF64 Router Advertisement option [RFC8781],\r\n   and then synthesizes an appropriate IPv6 address (or\r\n   several) using the encoding described in \"IPv6 Addressing of IPv4/\r\n   IPv6 Translators\" [RFC6052].  The synthesized addresses are then\r\n   inserted into the list of addresses as if they were results from DNS\r\n   queries; connection attempts follow the algorithm described above\r\n   (see Section 6).\r\n```",
      "createdAt": "2023-10-30T23:33:31Z",
      "updatedAt": "2023-11-01T23:22:19Z",
      "closedAt": "2023-11-01T23:22:19Z",
      "comments": []
    },
    {
      "number": 20,
      "id": "I_kwDOKH7CuM51Ym4J",
      "title": "Section 8.1: When using encrypted DNS translation may also be needed.",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/20",
      "state": "CLOSED",
      "author": "momoka0122y",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "nidhijaju"
      ],
      "labels": [],
      "body": "> >   8.1.  IPv4 Address Literals\r\n> >   Such translation also applies to any IPv4 address hints received in SVCB RRs.\r\n> > The mention of SVCB RRs makes this section a lot more meaningful as IP address literals may not have been so common but with SVCB RRS they will be common even in a client/server scenario.\r\n> \r\n> The other case that is common is when you\u2019re using encrypted DNS (DoT/DoH/etc) and asking for both address families. That\u2019s common to then get v4 answers that need to be translated.\r\n\r\nFrom reply from Tommy.\r\nhttps://mailarchive.ietf.org/arch/msg/v6ops/2csKJzBti4Mmb5vdWXp4-kzPd1k/\r\n\r\n\r\nSo maybe\r\n```diff\r\n- Such translation also applies to any IPv4 address hints received in SVCB RRs.\r\n+ Such translation also applies to any IPv4 address hints received in SVCB RRs or when using encrypted DNS (DoT/DoH/etc).\r\n```",
      "createdAt": "2023-10-30T23:33:34Z",
      "updatedAt": "2025-06-26T14:41:21Z",
      "closedAt": "2025-06-26T14:41:21Z",
      "comments": [
        {
          "author": "bashi",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm not sure we need to update this sentence. My understanding of Tommy's reply is about addresses from A/AAAA answers, which are already covered?",
          "createdAt": "2023-10-31T06:29:49Z",
          "updatedAt": "2023-10-31T06:29:49Z"
        },
        {
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "body": "> If client applications or users wish to connect to IPv4 address literals, the Happy Eyeballs engine will need to perform NAT64 address synthesis for them. The solution is similar to \"Bump-in-the- Host\" [[RFC6535](https://tfpauly.github.io/draft-happy-eyeballs-v3/draft-pauly-v6ops-happy-eyeballs-v3.html#RFC6535)] but is implemented inside the Happy Eyeballs library.\r\n>\r\n>When an IPv4 address is passed into the library instead of a hostname, the device queries the network for the NAT64 prefix using \"Discovery of the IPv6 Prefix Used for IPv6 Address Synthesis\" [[RFC7050](https://tfpauly.github.io/draft-happy-eyeballs-v3/draft-pauly-v6ops-happy-eyeballs-v3.html#RFC7050)] and then synthesizes an appropriate IPv6 address (or several) using the encoding described in \"IPv6 Addressing of IPv4/ IPv6 Translators\" [[RFC6052](https://tfpauly.github.io/draft-happy-eyeballs-v3/draft-pauly-v6ops-happy-eyeballs-v3.html#RFC6052)]. The synthesized addresses are then inserted into the list of addresses as if they were results from DNS queries; connection attempts follow the algorithm described above (see [Section 6](https://tfpauly.github.io/draft-happy-eyeballs-v3/draft-pauly-v6ops-happy-eyeballs-v3.html#connections)).\r\n>\r\n>Such translation also applies to any IPv4 address hints received in SVCB RRs.\r\n\r\nThis is the entirety of Section 8.1. It might be worth adding a note that says something like it also applies to \"IPv4 addresses received in A records\".",
          "createdAt": "2023-11-01T02:02:57Z",
          "updatedAt": "2023-11-01T02:02:57Z"
        }
      ]
    },
    {
      "number": 22,
      "id": "I_kwDOKH7CuM51efd2",
      "title": "Section 4: \"Once both records are received\"",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/22",
      "state": "CLOSED",
      "author": "edmonds",
      "authorAssociation": "NONE",
      "assignees": [
        "nidhijaju"
      ],
      "labels": [],
      "body": "Section 4: https://github.com/tfpauly/draft-happy-eyeballs-v3/blob/ac7338752ffe24ea52d128944897b3241d17d96b/draft-pauly-v6ops-happy-eyeballs-v3.md#L187-L196\r\n\r\n> If the client did request SVCB RRs:\r\n>\r\n> * If the client receives any positive response back (containing a valid AAAA, A, or SVCB ServiceMode RR), it starts the Resolution Delay timer, which is run until both the AAAA and SVCB ServiceMode responses are received, or a SVCB response is received that also includes at least one address in the ipv6hint parameter. _**Once both records are received,**_ or the timer expires, the client proceeds with the process of sorting addresses and staggered connection attempts.\r\n\r\n\"Once both records are received\" seems to be referring to receiving both AAAA and SVCB ServiceMode RR's, but this is in tension with the previous sentence which allows proceeding without receiving the AAAA response yet if a SVCB has been received that contains at least one IPv6 address hint.\r\n\r\nSuggested replacement text:\r\n\r\n> If the client did request SVCB RRs:\r\n>\r\n> * If the client receives any positive response back (containing a valid AAAA, A, or SVCB ServiceMode RR), it starts the Resolution Delay timer, which is run until both the AAAA and SVCB ServiceMode responses are received, or a SVCB response is received that also includes at least one address in the ipv6hint parameter. _**Once at least one IPv6 address has been received,**_ or the timer expires, the client proceeds with the process of sorting addresses and staggered connection attempts.",
      "createdAt": "2023-10-31T17:15:32Z",
      "updatedAt": "2023-11-02T23:12:03Z",
      "closedAt": "2023-11-02T23:12:03Z",
      "comments": []
    },
    {
      "number": 23,
      "id": "I_kwDOKH7CuM51enyI",
      "title": "Section 5: \"The priority in a SVCB RR is always greater than 0\"",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/23",
      "state": "CLOSED",
      "author": "edmonds",
      "authorAssociation": "NONE",
      "assignees": [
        "nidhijaju"
      ],
      "labels": [],
      "body": "https://github.com/tfpauly/draft-happy-eyeballs-v3/blob/ac7338752ffe24ea52d128944897b3241d17d96b/draft-pauly-v6ops-happy-eyeballs-v3.md?plain=1#L306-L311\r\n\r\n\"prioirity\" \u2192 \"priority\"\r\n\r\n\"Servicemode\" \u2192 \"ServiceMode\"\r\n\r\n\"The priority in a SVCB RR is always greater than 0\" \u2192 \"The priority in a ServiceMode SVCB RR is always greater than 0\"",
      "createdAt": "2023-10-31T17:34:45Z",
      "updatedAt": "2023-11-01T05:03:18Z",
      "closedAt": "2023-11-01T05:03:18Z",
      "comments": []
    },
    {
      "number": 24,
      "id": "I_kwDOKH7CuM51fEqU",
      "title": "Discuss impact on DNS-based http->https upgrade",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/24",
      "state": "OPEN",
      "author": "ericorth",
      "authorAssociation": "NONE",
      "assignees": [
        "nidhijaju"
      ],
      "labels": [],
      "body": "Similarly to #6, need a discussion on using A/AAAA without waiting for HTTPS when the HTTPS record could have forced upgrade to https://.  Clients need to be aware of the potential tradeoffs of that functionality potentially getting skipped.",
      "createdAt": "2023-10-31T18:27:46Z",
      "updatedAt": "2025-10-14T04:07:02Z",
      "closedAt": null,
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "body": "See IETF 123 discussion in https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/6#issuecomment-3399987304",
          "createdAt": "2025-10-14T03:37:48Z",
          "updatedAt": "2025-10-14T03:37:48Z"
        }
      ]
    },
    {
      "number": 30,
      "id": "I_kwDOKH7CuM512p67",
      "title": "Move up the last Protocol Combination while sorting",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/30",
      "state": "CLOSED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nidhijaju"
      ],
      "labels": [],
      "body": "https://twitter.com/flano_yuki/status/1717731672815485016 made me think about the sorted ordering in [Section 5](https://tfpauly.github.io/draft-happy-eyeballs-v3/draft-pauly-v6ops-happy-eyeballs-v3.html#section-5-9) again and realized we should probably have a TCP IPv4 endpoint towards the beginning as well, just in case QUIC and IPv6 are both broken, however unlikely it may be. This is so that just in case both the protocol and address family are in fact impaired, the client doesn't have to wait a long time before it gets a good/working endpoint.",
      "createdAt": "2023-11-04T09:54:58Z",
      "updatedAt": "2023-11-06T01:10:51Z",
      "closedAt": "2023-11-06T01:10:51Z",
      "comments": [
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "@nidhijaju any chance you could translate that tweet to English for context please?",
          "createdAt": "2023-11-05T11:29:52Z",
          "updatedAt": "2023-11-05T11:29:52Z"
        },
        {
          "author": "bashi",
          "authorAssociation": "COLLABORATOR",
          "body": "The post is wondering which one is more likely to cause connection establishment failure, broken IPv6 networks or broken QUIC peers.",
          "createdAt": "2023-11-05T11:49:59Z",
          "updatedAt": "2023-11-05T11:49:59Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks!",
          "createdAt": "2023-11-05T12:25:53Z",
          "updatedAt": "2023-11-05T12:25:53Z"
        }
      ]
    },
    {
      "number": 32,
      "id": "I_kwDOKH7CuM512_CI",
      "title": "The Well-Known Prefix MUST NOT be used to represent non-global IPv4 addresses, such as RFC1918",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/32",
      "state": "OPEN",
      "author": "momoka0122y",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This was dismissed on https://github.com/tfpauly/draft-happy-eyeballs-v3/issues/18 but today I just found it in RFC6052. (I didn't notice this until now since i was only reading RFC7050 and RFC6146)\r\n\r\n```\r\n[3.1](https://datatracker.ietf.org/doc/html/rfc6052#section-3.1).  Restrictions on the Use of the Well-Known Prefix\r\n\r\n   The Well-Known Prefix MUST NOT be used to represent non-global IPv4\r\n   addresses, such as those defined in [[RFC1918](https://datatracker.ietf.org/doc/html/rfc1918)] or listed in Section 3\r\n   of [RFC5735].  Address translators MUST NOT translate packets in\r\n   which an address is composed of the Well-Known Prefix and a non-\r\n   global IPv4 address; they MUST drop these packets.\r\n```\r\n\r\nIf you think this part is not necessary because it is already documented here I understand, but I think it is very informational if it is in this document. (As I did not know this was a MUST NOT until today)",
      "createdAt": "2023-11-04T13:49:19Z",
      "updatedAt": "2023-11-04T13:49:19Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 34,
      "id": "I_kwDOKH7CuM519Q3y",
      "title": "Reference draft-ietf-6man-rfc6724-update",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/34",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nidhijaju"
      ],
      "labels": [],
      "body": "See: https://datatracker.ietf.org/doc/draft-ietf-6man-rfc6724-update/",
      "createdAt": "2023-11-06T12:06:57Z",
      "updatedAt": "2025-06-30T23:51:35Z",
      "closedAt": "2025-06-30T23:51:35Z",
      "comments": []
    },
    {
      "number": 35,
      "id": "I_kwDOKH7CuM52FuUi",
      "title": "Why is TCP IPv6 preferred over QUIC IPv4",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/35",
      "state": "CLOSED",
      "author": "sukunrt",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The draft says: \r\n\r\n> For example, if the first address in the sorted list is a QUIC IPv6 address, then the first TCP IPv6 address should be moved up in the list to be second in the list, then the first QUIC IPv4 address should be moved up to be third in the list, \r\n\r\n1. Why is TCP IPv6 preferred over QUIC IPv4? Does this also mean that the dial delay to misconfigured IPv6 servers with a fixed delay is 500ms now? \r\n\r\n2. What happens when there's only a QUIC IPv4 and TCP IPv6 address. I assume the preference is QUIC IPv4 over TCP IPv6, as the draft says. I understand, this ia a highly unusual situation.\r\n\r\n> The client SHOULD also sort the addresses in protocol order, such that QUIC is prioritized over TCP, as it connects faster and generally results in a better experience once connected.\r\n\r\n",
      "createdAt": "2023-11-07T12:13:51Z",
      "updatedAt": "2025-07-19T10:59:03Z",
      "closedAt": "2025-07-19T10:59:03Z",
      "comments": [
        {
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "body": "This should potentially be addressed by #85, which reworked sorting connection attempts to prioritize protocol preferences over address families, meaning QUIC IPv4 would be preferred over TCP IPv6. ",
          "createdAt": "2025-07-15T07:19:58Z",
          "updatedAt": "2025-07-15T07:19:58Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, I agree this is resolved by #85 ",
          "createdAt": "2025-07-19T10:59:03Z",
          "updatedAt": "2025-07-19T10:59:03Z"
        }
      ]
    },
    {
      "number": 36,
      "id": "I_kwDOKH7CuM52058U",
      "title": "Remove hint-only addresses after receiving A/AAAA",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/36",
      "state": "CLOSED",
      "author": "ericorth",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Something that I think deserves a bit more discussion in the draft...\r\n\r\nWhen HTTPS with IPv6 hints is received before A/AAAA, the draft specifies to start connection attempts based on those hints.  Absolutely the correct thing to do.\r\n\r\nBut I don't see any real discussion of what to do when A/AAAA is subsequently received with different addresses before connection succeeds, especially for the case where the hint addresses are not present.  Because A/AAAA addresses are generally better than hint addresses (because it's easier for the server to provide optimized or load-balanced addresses), I believe the best behavior would be to remove hint-only addresses from the connection list, similar to other removals discussed in Section 7 (\"DNS Answer Changes During Happy Eyeballs Connection Setup\").  Removing the addresses in this case would also be most consistent with the RFC9460#7.3 \"SHOULD\" to ignore hints if A/AAAA are locally available.",
      "createdAt": "2023-11-14T21:10:19Z",
      "updatedAt": "2024-01-17T14:01:17Z",
      "closedAt": "2024-01-17T14:01:17Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, this is a very good point. We should clarify that the A/AAAA responses will replace any hints if they are different.",
          "createdAt": "2023-11-14T21:49:32Z",
          "updatedAt": "2023-11-14T21:49:32Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "body": "If you already had a connection attempt partway through succeeding to an ipv6hint (perhaps at some later point during the handshakes that are necessary), are we really going to cancel that if we get back AAAA responses that don't include that address?",
          "createdAt": "2023-12-09T06:08:01Z",
          "updatedAt": "2023-12-09T06:08:01Z"
        },
        {
          "author": "ericorth",
          "authorAssociation": "NONE",
          "body": "In general, no.  Once you've started attempting a connection to an address, you continue that attempt and use the connection if it succeeds.  But if the attempt fails, for the next connection attempt, you use the updated list with hint-only addresses removed.\r\n\r\nThis procedure is consistent with the language already in Section 7 of the draft:\r\n\r\n> If an address is removed from the list that already had a connection attempt started, the connection attempt SHOULD NOT be canceled, but rather be allowed to continue. If the removed address had not yet had a connection attempt started, it SHOULD be removed from the list of addresses to try.",
          "createdAt": "2023-12-11T17:48:07Z",
          "updatedAt": "2023-12-11T17:48:07Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Excellent, that's much more consistent with what's already in the doc and what's generally done in practice.",
          "createdAt": "2023-12-11T22:53:45Z",
          "updatedAt": "2023-12-11T22:53:45Z"
        }
      ]
    },
    {
      "number": 37,
      "id": "I_kwDOKH7CuM521BWM",
      "title": "\"AAAA response\" is ambiguous",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/37",
      "state": "CLOSED",
      "author": "ericorth",
      "authorAssociation": "NONE",
      "assignees": [
        "nidhijaju"
      ],
      "labels": [],
      "body": "In the context of this draft \"AAAA response\" seems it could be interpreted as just the DNS response to the AAAA query.  But for most of the usage/discussion, I think we want AAAA records received in response to the AAAA query or AAAA records received in the Additional section of the response to the HTTPS query, whichever is received first.\r\n\r\nMaybe we should rephrase all those references to \"received AAAA records\" or something like that.  Maybe we even need an explicit mention that those records could come in the response to the HTTPS query and that clients should use those if received first instead of waiting for a response to the AAAA query.",
      "createdAt": "2023-11-14T21:34:08Z",
      "updatedAt": "2025-07-02T23:43:00Z",
      "closedAt": "2025-07-02T23:43:00Z",
      "comments": []
    },
    {
      "number": 40,
      "id": "I_kwDOKH7CuM6B-Ut6",
      "title": "Who can provide code implementation? Thank you",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/40",
      "state": "CLOSED",
      "author": "chongzi",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "rt",
      "createdAt": "2024-03-12T02:32:50Z",
      "updatedAt": "2024-03-12T03:01:41Z",
      "closedAt": "2024-03-12T03:01:40Z",
      "comments": [
        {
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "body": "AFAIK, Apple has been shipping an implementation of Happy Eyeballs with QUIC and SVCB for a couple years and Google Chrome is currently working on one too, but I'm not sure of others.",
          "createdAt": "2024-03-12T03:01:40Z",
          "updatedAt": "2024-03-12T03:01:40Z"
        }
      ]
    },
    {
      "number": 41,
      "id": "I_kwDOKH7CuM6Cv_fx",
      "title": "Section 8: IPv6-mostly networks can provide NAT64 w/o DNS64",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/41",
      "state": "CLOSED",
      "author": "furry13",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "nidhijaju"
      ],
      "labels": [],
      "body": "(copying from an email I sent to the authors)\r\n\r\nWith PREF64 being available, some networks might only provide PREF64 and do not use DNS64, as the latter has a number of disadvantages, such as breaking DNSSEC and not working if the host has custom DNS\r\nservers configured.\r\n\r\nSo do you think it's worth adding some text saying that some Ipv6-only\r\nor, more likely, IPv6-mostly networks might only deploy PREF64 w/o DNS64?\r\n\r\nSee https://www.ietf.org/archive/id/draft-link-v6ops-6mops-00.html#name-dns-vs-dns64",
      "createdAt": "2024-03-18T23:01:03Z",
      "updatedAt": "2025-07-03T18:54:59Z",
      "closedAt": "2025-07-03T18:54:59Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "I think we need to clarify that clients need to send an A query in addition to a AAAA query if PREF64 is available, to ensure that the network doesn't need to run DNS64.",
          "createdAt": "2024-03-22T03:03:44Z",
          "updatedAt": "2024-03-22T03:03:44Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "Maybe we treat this scenario similar to how we handled [hostnames with broken AAAA records in HEv2](https://www.rfc-editor.org/rfc/rfc8305#section-7.2) ? (Try AAAA first and if that doesn't work then try A? Or are we expecting PREF64 without DNS64 to be common and expected?",
          "createdAt": "2024-03-24T07:07:26Z",
          "updatedAt": "2024-03-24T07:07:26Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Jen was trying to be able to remove DNS64 in general, since it breaks DNSSEC, etc, etc",
          "createdAt": "2024-03-25T18:23:43Z",
          "updatedAt": "2024-03-25T18:23:43Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "I see. Maybe we split up the PREF64 and DNS64 algorithms completely then, with the PREF64 algorithm preferred over the DNS64 one",
          "createdAt": "2024-03-26T00:43:10Z",
          "updatedAt": "2024-03-26T00:43:10Z"
        }
      ]
    },
    {
      "number": 42,
      "id": "I_kwDOKH7CuM6CwBxq",
      "title": "Should synthesized NAT64 addresses be preferred over native IPv4?",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/42",
      "state": "OPEN",
      "author": "furry13",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This is an open question I do not have an answer for yet - I guess the arguments can be made for both approaches..\r\n\r\nSo if an IPv6-mostly network provides DNS64, then a dual-stack host talking to an IPv4-only destination would have a choice between:\r\n\r\n* a synthesized IPv6 address which will be routed via NAT64\r\n* a native IPv4 path\r\n\r\n(we have a similar discussion in https://datatracker.ietf.org/doc/draft-link-v6ops-claton/: shall CLAT be enabled if both PLAT and IPv4 are available?)",
      "createdAt": "2024-03-18T23:06:41Z",
      "updatedAt": "2025-09-03T11:30:45Z",
      "closedAt": null,
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "body": "IETF 123: \n- Clients may not really see this, since v6 (real or synthesized) just looks like v6, and v4 looks like dual stack.\n- There exist v6 addresses that are less preferred than v4\n- If you're v6 mostly, then you know that you're v6 mostly and you can do the right thing\n- Cases: v6 only and dual stack",
          "createdAt": "2025-07-24T08:59:44Z",
          "updatedAt": "2025-07-24T08:59:44Z"
        },
        {
          "author": "MikeBishop",
          "authorAssociation": "NONE",
          "body": "I think this is mostly moot. When NAT64 is in use, the conversion occurs below the application doing HE. I think there are only two real-world cases here, no?\n\n- The client sees itself as IPv6-only (and DNS64 possibly exists), in which case it only makes AAAA requests, makes IPv6 connections, and what happens with those is a network issue the client doesn't need to know about. The DNS64 *shouldn't* generate NAT64 addresses if native AAAA records exist, but the client isn't concerned with that.\n- The client sees itself as dual-stack, but underneath its IPv4 address is CLAT. The client should prefer IPv6 addresses, but if it selects an IPv4 address the network stack will synthesize an IPv6 address underneath it.\n\nThe question really only comes up if a) DNS64 is present, b) DNS64 is broken and synthesizing addresses despite the presence of authoritative AAAA records, c) the client knows the Pref64 and can recognize that the DNS64 is broken. That's niche enough I don't think we need to care.\n\nIf the implementation of a to-be-deprecated protocol is misbehaving, that's the network's problem.",
          "createdAt": "2025-07-24T09:06:37Z",
          "updatedAt": "2025-07-24T09:06:37Z"
        },
        {
          "author": "oskar456",
          "authorAssociation": "NONE",
          "body": "Actually, I think this document should say that HE3-capable client should **avoid using CLAT** as much as possible. All the provisions in section 8 are only useful if there is no CLAT. If there is CLAT present, the whole section 8 can be ignored.\n\nI am very in favour of using CLAT as little as possible. Applications should create native IPv6 as much as possible so I think section 8 is beneficial. But that also means that the HE3 library somehow has to detect that the default gateway is CLAT and if it is the case, avoid generating any native IPv4 connections. However, it should still support establishing native IPv4 packets towards (split-mode) VPNs.",
          "createdAt": "2025-07-24T09:32:49Z",
          "updatedAt": "2025-07-24T09:32:49Z"
        },
        {
          "author": "philsbln",
          "authorAssociation": "NONE",
          "body": "Should Happl Eyeballs define this behavior or is this an update to RFC6724\u2026 de-prioritization of NAT64 well-known prefix against normal IPv6 GUA and introducing different scopes for RFC1918 and non RFC1918 would be the cleanest solution.\nSame goes for detecting PREF64\u2026",
          "createdAt": "2025-09-03T11:30:45Z",
          "updatedAt": "2025-09-03T11:30:45Z"
        }
      ]
    },
    {
      "number": 43,
      "id": "I_kwDOKH7CuM6CwCJ5",
      "title": "RFC8781 shall be preferred over RFC7050",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/43",
      "state": "CLOSED",
      "author": "furry13",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "In section 8.1 I think instead of \"When an IPv4 address is passed into the library instead of a\r\nhostname, the device queries the network for the NAT64 prefix using\r\n\"Discovery of the IPv6 Prefix Used for IPv6 Address Synthesis\"\r\n[RFC7050], or uses PREF64s received from Router Advertisements\r\n[RFC8781].\"\r\n\r\nthe text should say:\r\n\r\n\"When an IPv4 address is passed into the library instead of a\r\nhostname, the device SHOULD use PREF64s received from Router\r\nAdvertisements [RFC8781], or, the network does not provide PREF64, the\r\nhost SHOULD queries the network for the NAT64 prefix using \"Discovery\r\nof the IPv6 Prefix Used for IPv6 Address Synthesis\" [RFC7050]\"\r\n\r\nThe reason is that PREF64 shall be preferred over RFC7050.\r\n",
      "createdAt": "2024-03-18T23:08:09Z",
      "updatedAt": "2024-03-19T04:06:11Z",
      "closedAt": "2024-03-19T04:06:11Z",
      "comments": []
    },
    {
      "number": 46,
      "id": "I_kwDOKH7CuM6GQKKY",
      "title": "Unclear deliverable",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/46",
      "state": "CLOSED",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "https://github.com/tfpauly/draft-happy-eyeballs-v3/blob/757ed4e8c5482ca93379bb20b8c4a948855c2543/charter.md?plain=1#L48\r\n\r\nIs this some we will publish as rfc? or is this something that we will record somewhere in the wg wiki? ",
      "createdAt": "2024-04-19T08:16:45Z",
      "updatedAt": "2024-07-12T22:19:16Z",
      "closedAt": "2024-07-12T22:19:15Z",
      "comments": [
        {
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "body": "I had a similar question, and I think we said we could either have a separate RFC or wiki page, depending on how concrete/deployable the ideas are.\r\n\r\nWe could maybe say something like: \"Publish a document or wiki page documenting approaches for reporting misconfigured networks or server deployments\"?",
          "createdAt": "2024-04-19T08:47:38Z",
          "updatedAt": "2024-04-19T08:47:38Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "Do we really need this deliverable? I know there are folks who want to solve this problem, but it's unclear to me if there's agreement on the scope of that work.",
          "createdAt": "2024-04-19T20:20:33Z",
          "updatedAt": "2024-04-19T20:20:33Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Seems like we could drop the deliverable entirely, but leave it in scope in the charter. If there's the energy to get it done, fantastic. If not, we're exactly where we are today, no problem. ",
          "createdAt": "2024-04-20T01:31:32Z",
          "updatedAt": "2024-04-20T01:31:32Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "That sounds ideal",
          "createdAt": "2024-04-20T17:31:43Z",
          "updatedAt": "2024-04-20T17:31:43Z"
        }
      ]
    },
    {
      "number": 47,
      "id": "I_kwDOKH7CuM6GQLdz",
      "title": "one liner to emphasis how TLS Encrypted Client Hello impacts",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/47",
      "state": "CLOSED",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "https://github.com/tfpauly/draft-happy-eyeballs-v3/blob/757ed4e8c5482ca93379bb20b8c4a948855c2543/charter.md?plain=1#L20\r\n\r\nWe should have one line recording the impact on current deployment. why does it matter??",
      "createdAt": "2024-04-19T08:19:43Z",
      "updatedAt": "2024-08-20T15:51:01Z",
      "closedAt": "2024-08-20T15:51:01Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Assuming that this is a question about why Happy Eyeballs would apply to ECH at all, can add some text to indicate that there may be cases where some candidate endpoints will have ECH keys available and some candidates may not have those keys available, and that should influence policy when racing between candidates.",
          "createdAt": "2024-04-23T22:51:18Z",
          "updatedAt": "2024-04-23T23:00:00Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed by #53 ",
          "createdAt": "2024-08-20T15:51:01Z",
          "updatedAt": "2024-08-20T15:51:01Z"
        }
      ]
    },
    {
      "number": 49,
      "id": "I_kwDOKH7CuM6P80io",
      "title": "Eric V charter comments",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/49",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "> First congratulations for the WG acronym!\r\n>  \r\n> On the charter, I find `using a particular network`either ambiguous or very limitative. It appears that a node with two network attachments (e.g., Wi-Fi and 3GPP) won\u2019t use HEv3 but only rely on RFC 6724(-bis). Am I reading this right ?\r\n>  \r\n> Also suggest s/the client knows a hostname/the client knows a FQDN/",
      "createdAt": "2024-07-18T02:40:20Z",
      "updatedAt": "2024-07-21T17:56:47Z",
      "closedAt": "2024-07-21T17:56:47Z",
      "comments": []
    },
    {
      "number": 51,
      "id": "I_kwDOKH7CuM6QBEto",
      "title": "Inventory of HE-like Uses",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/51",
      "state": "CLOSED",
      "author": "boucadair",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "Some HE variants were specified out there as well. It would be great to inventory those and see if they can be naturally addressed by HEv3. \r\n\r\nSee an example of such uses at https://datatracker.ietf.org/doc/html/rfc9132#name-happy-eyeballs-for-dots-sig. That variant was specified with the following in mind:\r\n\r\n> Such a procedure is needed to avoid experiencing long connection delays. For example, if an IPv4 path to a DOTS server is functional, but the DOTS server's IPv6 path is nonfunctional, a dual-stack DOTS client may experience a significant connection delay compared to an IPv4-only DOTS client in the same network conditions. The other problem is that if a middlebox between the DOTS client and DOTS server is configured to block UDP traffic, the DOTS client will fail to establish a DTLS association with the DOTS server; consequently, it will have to fall back to TLS over TCP, thereby incurring significant connection delays.\r\n\r\nPlease refer to the RFC for more details, including deviations vs [RFC8305](https://datatracker.ietf.org/doc/html/rfc8305).\r\n\r\nI suggest to a add a charter item to inventory such uses.\r\n",
      "createdAt": "2024-07-18T12:14:53Z",
      "updatedAt": "2024-11-05T13:41:49Z",
      "closedAt": "2024-11-05T13:41:49Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "NONE",
          "body": "I agree that making an inventory would be a good exercise. \r\n\r\nAn HE-like approach could be useful as a transition mechanism to multipath / path aware networking architectures.  I believe someone of us (SCION enthusiasts) might have done some experimental work on this, let me try to find out",
          "createdAt": "2024-07-21T02:09:38Z",
          "updatedAt": "2024-07-21T02:09:38Z"
        }
      ]
    },
    {
      "number": 52,
      "id": "I_kwDOKH7CuM6RAi9X",
      "title": "WG name bikeshed",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/52",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "Heuristics and Algorithms to Prioritize Protocol deploYment (HAPPY)\r\nHeuristics and Algorithms to Prioritize Protocol Initiation (HAPPI)\r\nHeuristics and Algorithms to Prioritize Protocol Initiation or Establishment (HAPPIE)\r\n",
      "createdAt": "2024-07-26T19:21:16Z",
      "updatedAt": "2024-11-04T16:23:04Z",
      "closedAt": "2024-11-04T16:23:03Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "body": "\ud83d\udeb2\ud83c\udfda\ufe0f\r\n\r\nHAPPY seems more clear for people, and initiation vs. deployment don't seem meaningfully distinct.\r\n\r\nHAPPI seems fine, a little less of a forced acronym. \r\n\r\nHAPPIE feels unnecessarily complex and is a bit close to HIPPIE, which is fine but maybe not what we're trying to indicate.\r\n\r\nSo I'd say HAPPY > HAPPI >>>> HAPPIE.",
          "createdAt": "2024-07-26T21:27:23Z",
          "updatedAt": "2024-07-26T21:27:23Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "+1 to @ekinnear",
          "createdAt": "2024-07-30T16:48:12Z",
          "updatedAt": "2024-07-30T16:48:12Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "The current version uses HAPPY, keeping that. ",
          "createdAt": "2024-11-04T16:23:03Z",
          "updatedAt": "2024-11-04T16:23:03Z"
        }
      ]
    },
    {
      "number": 58,
      "id": "I_kwDOKH7CuM6dNnEP",
      "title": "What is the target type of that document?",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/58",
      "state": "CLOSED",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "https://github.com/tfpauly/draft-happy-eyeballs-v3/blob/de5d6e4f75451f1f89847487792708d7153629fb/charter.md?plain=1#L69\r\n\r\nAre we aiming informational or standard track document? Please specify in the deliverables.  ",
      "createdAt": "2024-11-06T10:00:46Z",
      "updatedAt": "2024-11-07T09:53:21Z",
      "closedAt": "2024-11-07T09:53:21Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This sounds informational, no? \nWe wouldn't be placing requirements on anyone, just describing the effects of various behaviors.",
          "createdAt": "2024-11-06T10:16:06Z",
          "updatedAt": "2024-11-06T10:16:06Z"
        },
        {
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed. However, I guess the part that says:\r\n\r\n> recommendations on how to\r\n  report errors in a privacy-preserving, accurate, and actionable way.\r\n\r\nmeans we would be specifying a protocol/API for reporting the errors, right? Does that mean it should be standard track, or because we wouldn't place requirements and it's just a \"recommendation\", it can be informational?",
          "createdAt": "2024-11-06T10:28:56Z",
          "updatedAt": "2024-11-06T10:28:56Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We could potentially publish something Experimental containing some procedure for reporting, but I'd be tempted to say that we'll do an Informational document that describes the impact. If the working group then comes up with a procedure for reporting, and it's not using something already standardized, then we recharter to include it?",
          "createdAt": "2024-11-06T13:51:13Z",
          "updatedAt": "2024-11-06T13:51:13Z"
        }
      ]
    },
    {
      "number": 59,
      "id": "I_kwDOKH7CuM6dNsw4",
      "title": "Documenting effectiveness as part of main deliverable",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/59",
      "state": "CLOSED",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "https://github.com/tfpauly/draft-happy-eyeballs-v3/blob/de5d6e4f75451f1f89847487792708d7153629fb/charter.md?plain=1#L66-L68\r\n\r\nI would suggest that we move this part in the body of the charter and as a process to report on effectiveness of one algorithm or different approaches in wg presentations. This would be a means to decide on the algorithm as a part of main deliverable. ",
      "createdAt": "2024-11-06T10:10:48Z",
      "updatedAt": "2024-11-07T09:54:43Z",
      "closedAt": "2024-11-07T09:54:43Z",
      "comments": [
        {
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "body": "Sounds good. We have the following text in the body already that might already cover this:\r\n\r\n> The algorithm will focus on realistic network scenarios and should be guided by\r\nperformance data measured in deployed networks.\r\n\r\nShould we specifically mention that it will be captured in WG presentations, wikis, etc. as well?",
          "createdAt": "2024-11-06T10:44:30Z",
          "updatedAt": "2024-11-06T10:44:30Z"
        },
        {
          "author": "zaheduzzaman",
          "authorAssociation": "NONE",
          "body": "I think we can just remove this document effectiveness from the working group deliverables \r\n\r\nWe will anyway need to present the effectiveness measurements for the algorithm. And to record that we can refer to presentation materials and provably also can maintain wiki if needed.\r\n",
          "createdAt": "2024-11-06T11:07:33Z",
          "updatedAt": "2024-11-06T11:07:33Z"
        }
      ]
    },
    {
      "number": 61,
      "id": "I_kwDOKH7CuM6dOP5n",
      "title": "Reference to RFC9132",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/61",
      "state": "CLOSED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "From Jen Linkova on the [mailing list](https://mailarchive.ietf.org/arch/msg/happy/D6NCz9GJd_B-4NlXpDeT1r4aPrE/):\r\n> The charter mentions RFC9132, which defines DOTS signal channel.\r\nI'm not sure I fully understand how it is related. If the RFC number\r\nis not a typo, maybe we shall clarify the text?",
      "createdAt": "2024-11-06T10:59:52Z",
      "updatedAt": "2024-11-07T09:55:16Z",
      "closedAt": "2024-11-07T09:55:16Z",
      "comments": [
        {
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "body": "To give some context, this was added as per https://github.com/tfpauly/draft-happy-eyeballs-v3/issues/51. We can point to [Section 4.3](https://www.rfc-editor.org/rfc/rfc9132.html#name-happy-eyeballs-for-dots-sig) which talks about the HE-like algorithm specifically.",
          "createdAt": "2024-11-06T16:03:02Z",
          "updatedAt": "2024-11-06T16:03:02Z"
        }
      ]
    },
    {
      "number": 62,
      "id": "I_kwDOKH7CuM6dORYD",
      "title": "Clarify \"multiple networks to choose between\"",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/62",
      "state": "CLOSED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "From Jen Linkova on the [mailing list](https://mailarchive.ietf.org/arch/msg/happy/D6NCz9GJd_B-4NlXpDeT1r4aPrE/):\r\n\r\n> The charter says \"The algorithm takes as input a fully-qualified\r\ndomain name (FQDN), and results in a single established connection to\r\na single server IP address on a single network. While the algorithm\r\ncould apply to scenarios with multiple networks to choose between or\r\nto use simultaneously, or could deal with pools of multiple\r\nconnections, such scenarios are out of scope for the working group\r\ndeliverables.\"\r\n>\r\n> IMHO \" multiple networks to choose between\"  needs clarifying. Does\r\nmultihoming, especially \"multi-prefix, multi-router single-link\"\r\ntopology or mPVD scenario are in scope?",
      "createdAt": "2024-11-06T11:02:45Z",
      "updatedAt": "2025-03-12T23:47:23Z",
      "closedAt": "2025-03-12T23:47:23Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@furry13 would \"multiple network attachments\" be any better? I think the intent is to cover all of the examples you gave, in the sense that what we'd be writing down is specific to multiple attempts originating a single source IP address.",
          "createdAt": "2024-11-06T17:57:43Z",
          "updatedAt": "2024-11-06T17:57:43Z"
        },
        {
          "author": "furry13",
          "authorAssociation": "CONTRIBUTOR",
          "body": ">would \"multiple network attachments\" be any better? \r\n\r\nThank you Eric, I think it's definitely more clear and specify that multi-interface multihoming is out of scope, but a single interface multihoming is I guess that would mean that something might to be said in the draft about DNS resolution - like it's performed over the same interface? or do we ignore DNS split horizon? anyway, it's another issue). I'll send a PR for this one.",
          "createdAt": "2024-11-07T07:16:19Z",
          "updatedAt": "2024-11-07T07:16:19Z"
        }
      ]
    },
    {
      "number": 63,
      "id": "I_kwDOKH7CuM6dOTUu",
      "title": "Better error reporting wording and deliverable",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/63",
      "state": "CLOSED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "From Jordi Palet on the [mailing list](https://mailarchive.ietf.org/arch/msg/happy/p9Y1EfNh_RXG-56YnCyV46I6RDE/):\r\n\r\n> I think in the chapter we should have a better working for the error reporting.\r\n>\r\n> We have now:\r\n>\r\n>The working group will also document the impact of the Happy Eyeballs algorithm on the detection of misconfigured deployments and may provide recommendations on how to report such cases that might otherwise be hidden due to automatic switching from one technology to another. Any recommended reporting mechanisms need to preserve user privacy, allow for accurate detection of broken deployments, and produce reports that are actionable.\r\n>\r\n>May be instead:\r\n>\r\n>The working group will also document the impact of the Happy Eyeballs algorithm on the detection of misconfigured deployments, errors that force the fall-back to legacy protocols (such as, for example, IPv4) and statistics. It will also provide specific protocols on how to report such fall-back cases, errors and statistics that might otherwise be hidden due to automatic switching from one technology to another. Any reporting mechanisms need to preserve user privacy, allow for accurate detection of broken deployments and errors, and produce reports that are actionable.\r\n>\r\n>Also, we may need to add a deliverable for that, something like:\r\n>\r\n>* Producing a document that specify the protocol used for the error and statistics reporting.",
      "createdAt": "2024-11-06T11:06:38Z",
      "updatedAt": "2024-11-07T09:57:29Z",
      "closedAt": "2024-11-07T09:57:29Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "body": "(More discussion on the [mailing list](https://mailarchive.ietf.org/arch/msg/happy/mzdYzRRxG6AkF6M0UAzfBpA32QI/))\r\n\r\nI think we've already covered the option to provide a new protocol vs. document an existing option, so adding the explanatory text and making it clear that it's in scope seems sufficient. \r\n\r\n",
          "createdAt": "2024-11-06T17:37:40Z",
          "updatedAt": "2024-11-06T17:37:40Z"
        }
      ]
    },
    {
      "number": 64,
      "id": "I_kwDOKH7CuM6dQbCR",
      "title": "Describe handling expired / optimistic DNS",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/64",
      "state": "OPEN",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Clients can remember expired DNS answers (also called \"optimistic DNS\"), and try expired answers in parallel with requesting new DNS answers. This needs to be folded into the happy eyeballs algorithm.",
      "createdAt": "2024-11-06T14:55:08Z",
      "updatedAt": "2025-10-14T22:24:01Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Potentially optimistic DNS is covered in a separate doc that the main algorithm references",
          "createdAt": "2025-07-19T11:00:10Z",
          "updatedAt": "2025-07-19T11:00:10Z"
        }
      ]
    },
    {
      "number": 69,
      "id": "I_kwDOKH7CuM6eX8hV",
      "title": "SvcPriority and complex clients",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/69",
      "state": "CLOSED",
      "author": "bemasc",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The SVCB SvcPriority was designed to guide a simple client that is connecting \"from scratch\", with no further information about the service or the network. In that context, the function of SvcPriority is fairly clear.\r\n\r\nFor clients with a memory of prior connection attempts, the function of SvcPriority is less clear.  If the most preferred endpoint failed recently, can the client skip it the next time?\r\n\r\nAnd what about highly optimized clients that are racing multiple connections?  Can they race connections across multiple SvcPriorities, or should they wait until all the priority 1 endpoints fail?\r\n\r\nEven in the simple case, the definition of \"failure\" is somewhat nebulous.  TCP (and QUIC) connection initiation generally relies on exponential backoff that may not give up until multiple minutes have passed.  Surely we don't want clients to wait 100+ seconds before trying the priority 2 endpoint...\r\n\r\nThese questions are obviously relevant to mobile- and browser-like clients.  They're also increasingly relevant to DNS servers, as the DELEG group is considering SVCB-based definitions of DNS delegation.  DNS resolvers already use complex heuristics to estimate the latency and reliability of each nameserver, in order to select the best one (while still monitoring the others).\r\n\r\n@enygren @mikebishop",
      "createdAt": "2024-11-13T23:16:35Z",
      "updatedAt": "2025-10-14T22:22:07Z",
      "closedAt": "2025-10-14T22:22:07Z",
      "comments": [
        {
          "author": "MikeBishop",
          "authorAssociation": "NONE",
          "body": "I'd be inclined toward similar guidance to the preference Happy Eyeballs currently gives to IPv6 -- give higher preference endpoints a brief head start, then use whichever connection first completes successfully.",
          "createdAt": "2024-11-14T00:16:18Z",
          "updatedAt": "2024-11-14T00:16:18Z"
        },
        {
          "author": "bashi",
          "authorAssociation": "COLLABORATOR",
          "body": "Another similar complexity may come from the Alt-Svc header and the ALTSVC HTTP/2 frame.",
          "createdAt": "2024-11-15T08:17:52Z",
          "updatedAt": "2024-11-15T08:17:52Z"
        },
        {
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "body": "It seems like this was potentially addressed by #85, especially [Section 5.2](https://ietf-wg-happy.github.io/draft-happy-eyeballs-v3/draft-ietf-happy-happyeyeballs-v3.html#name-grouping-by-service-priorit).",
          "createdAt": "2025-07-15T07:14:50Z",
          "updatedAt": "2025-07-15T07:14:59Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "#85 does address most of this, but it doesn't stop clients from racing options to the lower-priority services after trying all of the higher-priority services first. I don't think we should stop clients from doing that, but we should confirm with the WG.",
          "createdAt": "2025-07-19T11:01:25Z",
          "updatedAt": "2025-07-19T11:01:25Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "body": "IETF 123: \n- If you have 1 thing in the top priority and it's not responsive, then you did that to yourself\n- There should be a strong bias towards higher priority options, but not required to wait for full failure\n\n- Not necessary to be super strict to priorities if you have better information, but try to avoid being permanently stuck because of a small number of bad measurements",
          "createdAt": "2025-07-24T09:05:29Z",
          "updatedAt": "2025-07-24T09:08:08Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Based on the discussion at IETF 123, the proposal is to close this with no action: a strong bias towards higher priority options exists, and the draft does not currently require clients to wait for a full failure before proceeding to subsequent attempts.",
          "createdAt": "2025-10-14T03:58:06Z",
          "updatedAt": "2025-10-14T03:58:06Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Sounds good \u2014 closing in that case",
          "createdAt": "2025-10-14T22:22:07Z",
          "updatedAt": "2025-10-14T22:22:07Z"
        }
      ]
    },
    {
      "number": 70,
      "id": "I_kwDOKH7CuM6lK4KI",
      "title": "Handling SVCB RR When TargetName Differs from Hostname",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/70",
      "state": "CLOSED",
      "author": "KershawChang",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The behavior regarding querying SVCB RRs in section 4 states:\r\n\r\n> If the client receives any positive response back (containing a valid AAAA, A, or SVCB ServiceMode RR), it starts the Resolution Delay timer, which runs until both the AAAA and SVCB ServiceMode responses are received, or a SVCB response is received that includes at least one address in the ipv6hint parameter. Once a SVCB response and at least one IPv6 address have been received, or the timer expires, the client proceeds with sorting addresses and initiating staggered connection attempts.\r\n\r\nIt's unclear to me what a client should do when the `TargetName` in the SVCB RR differs from the original host name. For example, consider the following HTTPS RR:\r\n\r\n```\r\nexample.com. 60 IN HTTPS 1 svc1.example.com. (alpn=\"h3\")\r\n```\r\n\r\nIf the IP address of `svc1.example.com` is different from that of `example.com`, should the client cancel the existing A and AAAA queries to example.com and initiate new A and AAAA queries to `svc1.example.com` instead?\r\nI think the specification should clarify this scenario.\r\n\r\nThanks,\r\nKershaw",
      "createdAt": "2025-01-06T17:15:33Z",
      "updatedAt": "2025-07-15T07:11:10Z",
      "closedAt": "2025-07-15T07:11:10Z",
      "comments": [
        {
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing this as it was addressed in #84. ",
          "createdAt": "2025-07-15T07:11:10Z",
          "updatedAt": "2025-07-15T07:11:10Z"
        }
      ]
    },
    {
      "number": 71,
      "id": "I_kwDOKH7CuM6mpPpQ",
      "title": "ECH guidance conflicts with ECH-SVCB",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/71",
      "state": "OPEN",
      "author": "bemasc",
      "authorAssociation": "NONE",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "The current draft says\n\n> If the client supports TLS Encrypted Client Hello (ECH) discovery through SVCB records {{!SVCB-ECH=I-D.ietf-tls-svcb-ech}}, depending on the client's preference to handle ECH, the client SHOULD sort addresses with ECH keys taking priority to maintain privacy when attempting connection establishment.\n\nECH-SVCB says\n\n> A SVCB RRSet containing some RRs with \"ech\" and some without is vulnerable to a downgrade attack ... This configuration is NOT RECOMMENDED. Zone owners who do use such a mixed configuration SHOULD mark the RRs with \"ech\" as more preferred (i.e. lower SvcPriority value) than those without, in order to maximize the likelihood that ECH will be used in the absence of an active adversary.\n\nIn essence, there is a discrepancy as to whose responsibility it is to prioritize ECH.\n\nI think the ECH-SVCB view should probably prevail.\n\nPhilosophically, the client cannot make the service more secure than the operator intends it to be.\n\nOperationally, it seems valuable to be able to test ECH by placing it on a less-used, lower-priority endpoint, and it would be very surprising to discover that this effectively inverts the stated priority for some (large?) segment of clients.",
      "createdAt": "2025-01-17T16:14:21Z",
      "updatedAt": "2025-10-14T22:20:32Z",
      "closedAt": null,
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "body": "IETF 123:\n- Do we want protocol/security requirements to take precedence?\n    - Allowing clients to prefer ECH or particular ALPNs makes it so that priorities are most effective between identically configured backends (instead of primary/backup).\n    - Primaries and backups that don't offer similar capabilities aren't particularly effective backups.\n    - From a server perspective, a more advanced third party backend could suddenly start getting lots of traffic the moment it turns on a new feature that clients prefer.\n\n- We know that we can't stop clients from having their own priorities.\n- Once you publish it, people can use it.\n- Do we prefer security over protocols or vice versa?",
          "createdAt": "2025-10-14T03:22:06Z",
          "updatedAt": "2025-10-14T03:22:06Z"
        }
      ]
    },
    {
      "number": 74,
      "id": "I_kwDOKH7CuM6n44zR",
      "title": "Describe SVCB shuffling between same priority",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/74",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "We should make sure we align with this text from RFC 9460 Section 2.4.1:\n\n> When receiving an RRset containing multiple SVCB records with the same SvcPriority value, clients SHOULD apply a random shuffle within a priority level to the records before using them, to ensure uniform load balancing.\n\n",
      "createdAt": "2025-01-28T21:00:54Z",
      "updatedAt": "2025-07-15T07:09:41Z",
      "closedAt": "2025-07-15T07:09:41Z",
      "comments": [
        {
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing this as it seems to be addressed by https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/85.",
          "createdAt": "2025-07-15T07:09:41Z",
          "updatedAt": "2025-07-15T07:09:41Z"
        }
      ]
    },
    {
      "number": 75,
      "id": "I_kwDOKH7CuM6sA_eP",
      "title": "Change document type to Standard",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/75",
      "state": "CLOSED",
      "author": "DavidSchinazi",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This draft is currently marked as Informational. RFC 8305 (Happy Eyeballs v2) was Standards Track. We should do the same for this doc. I would also suggest we go one step further inside the Standards Track and upgrade it from Proposed Standard to Internet Standard. This powers most communications on the Internet after all, which isn't something RFC 8200 can claim.\n\nExplanation of these levels is in [Section 4.1 of RFC 2026](https://www.rfc-editor.org/rfc/rfc2026.html#section-4.1) though Draft Standard was removed by [RFC 6410](https://www.rfc-editor.org/rfc/rfc6410).",
      "createdAt": "2025-02-28T01:07:25Z",
      "updatedAt": "2025-03-12T03:11:30Z",
      "closedAt": "2025-03-12T03:11:30Z",
      "comments": []
    },
    {
      "number": 77,
      "id": "I_kwDOKH7CuM6uhWGY",
      "title": "Target fixation",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/77",
      "state": "OPEN",
      "author": "martinthomson",
      "authorAssociation": "NONE",
      "assignees": [
        "nidhijaju"
      ],
      "labels": [],
      "body": "> it SHOULD add another Destination Address Selection rule between the RTT rule and rule 9, which prefers used addresses over unused ones\n\nFor as long as you retain that information, this rule will mean that clients are sticky.  That has some interesting implications for server operators who might find it is difficult to shift load away from a server instance that is under duress as a result, for instance.  Obviously, a server that is sufficiently stressed will likely be slower, but the attempt pacing might be long enough that you would need to be under a lot of load for that to happen.\n\nShould this instead de-emphasize \"used successfully\", except for when there are no higher order decision factors.",
      "createdAt": "2025-03-18T10:33:20Z",
      "updatedAt": "2025-07-24T10:33:29Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Now that we group different service priorities into their own buckets (see #85), we'd only have \"stickiness\" within a particular priority. I think that addresses the notion of \"no higher order decision factors\", but we should confirm.",
          "createdAt": "2025-07-19T11:04:11Z",
          "updatedAt": "2025-07-19T11:04:11Z"
        },
        {
          "author": "bemasc",
          "authorAssociation": "NONE",
          "body": "Even without any SVCB records, infinite stickiness is still an operational problem (and also a privacy problem, #90).  Consider a domain with two IP addresses, one of which experiences an outage.  If all the clients stick to the address A (because they have history showing that address B is broken), then load remains imbalanced even after the outage is resolved.\n\nThe text needs some guarantee that \"wise\" and \"fresh\" client behaviors will converge with some reasonable time constant.  Possible behaviors include:\n* Expiring history entries after a specified retention window.  (10 minutes? One week?  Hard to choose a value that makes everyone happy.) Any connection configuration whose history state is \"unknown\" must have higher prefernce than the configurations with \"known\" history.\n* Clearing all relevant history with probably at least 5% on each connection attempt.\n* Making the first connection attempt in each priority group history-free.\n* Complicated combinations of the above...\n\nI doubt we can agree on a precise behavior, but we should at least impose a requirement like:\n\n> Clients that apply history-based preference MUST ensure that clients with different histories will eventually converge toward the same behaviors.\n\nIdeally, we would also give some guidance about the timescale, like:\n\n> Convergence SHOULD occur on a timescale no longer than the sum of the applicable DNS TTLs and the typical connection lifetime.\n\n(That seems like the longest \"natural time constant\" we have in the system.)",
          "createdAt": "2025-07-24T10:31:06Z",
          "updatedAt": "2025-07-24T10:33:29Z"
        }
      ]
    },
    {
      "number": 87,
      "id": "I_kwDOKH7CuM7BcRyY",
      "title": "Treat synthesized NAT64 addresses as IPv4?",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/87",
      "state": "OPEN",
      "author": "philsbln",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Section 8 suggests synthesizing NAT64-addresses in IPv6 only/mostly in cases without 464XLAT being used.\nWhile in the 464XLAT case NAT64 is clearly treated as IPv4, Section 8 does not suggest whether from A-records self-synthesized addresses should be treated as IPv4.\n\nNote that this issue is related to #42 but suggests a totally different outcome.\nBeyond that\u2026 in the all-in case with DNS64 and 464XLAT, should DNS64 synthesized AAAAs be detected and somehow treated special?",
      "createdAt": "2025-07-19T16:07:18Z",
      "updatedAt": "2025-07-19T16:07:18Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 88,
      "id": "I_kwDOKH7CuM7BcS7y",
      "title": "Generalizing successful connection establishment",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/88",
      "state": "OPEN",
      "author": "philsbln",
      "authorAssociation": "NONE",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "There might be use cases when applications want to override what [successful connection establishment](https://www.ietf.org/archive/id/draft-ietf-happy-happyeyeballs-v3-01.html#name-determining-successful-conn) means. \nAs a concrete example, an application may want to treat certain applications layer errors as failed connection attempt to retry with a less preferable protocol or address family to work around buggy intermediaries or customers who don\u2019t get their ip-level allow lists updated for IPv6.\nShould we mention this in the text?",
      "createdAt": "2025-07-19T16:14:37Z",
      "updatedAt": "2025-10-14T22:23:41Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 89,
      "id": "I_kwDOKH7CuM7CQUqP",
      "title": "Connection Escalator mode",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/89",
      "state": "OPEN",
      "author": "bemasc",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Currently, HEv3 is defined as a procedure that produces a single connection as its output.  This does not model the actual behavior of optimized HTTP clients, which continue to race QUIC and TCP even after TCP \"wins\" and the first HTTP request is sent, so that the QUIC connection can be used for the next HTTP request.\n\nI would like to see a mode of HE that is a \"connection escalator\": its output is an asynchronous finite sequence of connections, each more preferred than the last.\n\nThe charter requires that HEv3 \"ends with a single established connection to a server\".  Like the current specification, this is true of a connection escalator: less preferred connections are closed in favor of more-preferred connections as they become available.",
      "createdAt": "2025-07-24T08:48:54Z",
      "updatedAt": "2025-07-24T08:48:54Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 90,
      "id": "I_kwDOKH7CuM7CRPbe",
      "title": "IP Memory Supercookie",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/90",
      "state": "OPEN",
      "author": "bemasc",
      "authorAssociation": "NONE",
      "assignees": [
        "nidhijaju"
      ],
      "labels": [],
      "body": "If HE remembers the fastest (or workingest) IP address for each domain, this creates a supercookie.  A website could send subresource fetches to a few dozen domains, each with 2 IPv6 addresses (all pointed to the same server), and clients would \"stick\" to one or the other at random, resulting in 1 bit of identification entropy per domain.\n\nTo fix this, all HE connectivity history needs to be wiped when cookies (etc.) are cleared.",
      "createdAt": "2025-07-24T10:00:55Z",
      "updatedAt": "2025-10-14T04:06:46Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "The other way to view this is that the state and history about previous races is isolated to the same boundaries of caching that cookies are (and when cookies flush that cache state is all reset together). That's our implementation's current approach. ",
          "createdAt": "2025-07-24T12:49:10Z",
          "updatedAt": "2025-07-24T12:49:10Z"
        }
      ]
    },
    {
      "number": 91,
      "id": "I_kwDOKH7CuM7CWj0l",
      "title": "Section 8 needs major adjustments",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/91",
      "state": "OPEN",
      "author": "oskar456",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I think there are some issues with section 8 (Supporting IPv6-Mostly and IPv6-Only Networks). Some of them are already discussed in issues #32, #42, and #87, maybe others but I think a complex review of this section is necessary.\n\nHere are my notes of what I think is not correct:\n  \n -  The title should not mention IPv6-mostly but should mention NAT64. IPv6-mostly refers to the network setup side, on the host this manifests itself either as dual stack (if DHCP Option 108 is not supported) or as IPv6-only. If the IPv6-mostly network is in the dual stack mode then nothing from Section 8 applies.\n - Section 8 introduction mentions that it is intended only for platforms not supporting 464XLAT. In a long term, this would be possibly a very small minority of platforms. So I wonder whether it is worth implementing all the features from this section for only a very tiny amount of use cases. Having said that I believe that even on platforms with CLAT, the HE library should instead use the mitigations from Section 8 and avoid using CLAT (I believe this is the way the Apple ecosystem works already).\n - \"A simple heuristic to detect one of these networks is to check if the network offers routable IPv6 addressing, does not offer routable IPv4 addressing, and offers a DNS resolver address.\" - that does detect IPv6-only network but not NAT64. The whole section is about mitigating issues with accessing IPv4 resources over NAT64, so the heuristic here needs to somehow detect NAT64 presence.\n - Section 8.2 \"Discovering and Utilizing PREF64\" should probably be the first one as this forms the foundation of detecting NAT64 network and also obtaining enough data to perform other mitigations.\n - Section 8.3 \"Supporting DNS64\" is wrong: \"If PREF64 is not available and the NAT64 prefix cannot be discovered, clients SHOULD assume the network is relying on DNS64 for IPv4-to-IPv6 address synthesis\" -  if the NAT64 prefix cannot be discovered, then the client cannot assume anything else than that there is no NAT64 in the network. Without discovered NAT64 prefix, all the mitigations mentioned in Section 8 cannot work. I believe this section could be easily dropped, it does not bring any new information.\n - It is not clear whether the mitigation of the VPN issue in Section 8.5 should also use \"Last Resort Local Synthesis Delay\" or not.\n - I think there should be a section summarising the algorithm, because just from the text, it is hard to figure out what exactly should happen. I am still wrapping my head around a proper solution supporting at the same time dual-stack, NAT64/DNS64 and NAT64/PREF64 (without DNS64) - that last one is quite tricky.\n\nThe issue is that if there would be network with NAT64 without DNS64, under current text, every single connection to IPv4-only destination would be penalised by \"Last Resort Local Synthesis Delay\". This is unacceptable. There might be an exception that you don't apply this delay if AAAA query returned empty answer, but you will still be dependant on every AAAA query properly finishing.\nI don't think the \"Last Resort Local Synthesis Delay\" is necessary. If the system uses 464XLAT, it would do A queries for every single hostname without any delay and it would not cause any overload of the DNS. \n\nMaybe the proper solution would be \"undo and redo DNS64\" like this:\n  1. detect PREF64 (either RA option or RFC 7050)\n  2. no PREF64 - business as usual.\n  3. if there is PREF64:\n      a. Start doing A queries even if there is no IPv4 connectivity\n      b. Every time you receive AAAA answer, try to undo the DNS64. If it was possible, consider both A and AAAA queries finished with no IPv6 addresses and IPv4 addresses extracted from the AAAA answers.\n      c. For each connection towards an IPv4 destination:\n           1. if covered via a specific route not going towards CLAT, send natively (this is needed for the VPN case)\n           2. if covered only by route towards CLAT, combine the destination with the detected PREF64 and create IPv6 packet.",
      "createdAt": "2025-07-24T17:39:35Z",
      "updatedAt": "2025-07-25T07:35:41Z",
      "closedAt": null,
      "comments": [
        {
          "author": "philsbln",
          "authorAssociation": "NONE",
          "body": "I agree that the section would benefit from a major rewrite in a mood of renaming the section to __Supporting environments with NAT64, DNS64 and CLAT__ and describing it as pre-processing step for the addresses. With this, I guess we can slay issue #42, #87 ans #91 (this one).",
          "createdAt": "2025-07-25T07:35:41Z",
          "updatedAt": "2025-07-25T07:35:41Z"
        }
      ]
    },
    {
      "number": 92,
      "id": "I_kwDOKH7CuM7CWr49",
      "title": "Define connectivity properly",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/92",
      "state": "OPEN",
      "author": "oskar456",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "editorial"
      ],
      "body": "The document mentions \"IPv4 connectivity\" and \"IPv6 connectivity\" in various places without defining what is considered having connectivity.\n\nIn Section 4.1:\n > When a client has both IPv4 and IPv6 connectivity, it needs to send out queries for both AAAA and A records. On a network with only IPv4 connectivity, it will send a query for A records. On a network with only IPv6 connectivity, the client will either send out queries for both AAAA and A records, or only a query for AAAA records, depending on the network configuration.\n\nHere, the connectivity should be considered present if there is at least one route in the routing table towards a non-link-local destination. It should not be necessary to have the default route to consider connectivity to be present. This is particularly important for split-mode VPNs that push only some IPv6 routes to otherwise IPv4-only host.\n\nIn Section 4.2:\n> On networks that allow connectivity on both IPv6 and IPv4, IPv6 is assumed to be the preferred address family. If only one of IPv6 or IPv4 offers connectivity, that address family should be considered the preferred address family for progressing the algorithm.\n\nHere, it would be appropriate to only consider IPv6 default route, that is: \"If host has IPv6 default route, then IPv6 is assumed to be the preferred address family. Otherwise, IPv4 should be the preferred address family.\"\nThe reason for this is that if there is not IPv6 default route, it is safe to assume that most attempts to connect over IPv6 would not succeed. Considering IPv6 in that case the preferred address family would lead to unnecessary excessive usage of \"resolution time delay\".",
      "createdAt": "2025-07-24T17:51:16Z",
      "updatedAt": "2025-10-14T02:33:25Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 95,
      "id": "I_kwDOKH7CuM7Jaefm",
      "title": "Address sorting should include all addresses, including already attempted",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/95",
      "state": "OPEN",
      "author": "kvkln",
      "authorAssociation": "NONE",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "editorial"
      ],
      "body": "The document is not clear in this regard, in my opinion. If a client performs address sorting only on the remaining addresses (not those already attempted), it can easily create a situation in which HE doesn't behave as expected.\n\nExample:\nThe client receives a negative HTTPS response and a AAAA response containing two IPv6 addresses 2001:db8::2 and 2001:db8::4.\nThis is sufficient to skip the Resolution Delay, so the client continues to address sorting and then starts a connection attempt to let's say 2001:db8::2.\nThen, the response to the A query arrives, containing an IPv4 address 192.0.2.1.\nIf we now perform the address grouping and sorting algorithm only on the remaining addresses (2001:db8::4 and 192.0.2.1), 2001:db8::4 would be sorted before 192.0.2.1.\nThis means that the IPv4 address will be attempted third, not second as intended. For more complex scenarios, the result might be worse.\n\nFurther, I think that already attempted addresses should always be sorted at the beginning of the list, even if they are less preferred than the newly added addresses. I don't have an easy example for this, but if a later arriving DNS response contains an IPv6 address that has higher priority than the previously attempted IPv6 address, it might result in the same situation as the example above.",
      "createdAt": "2025-09-03T09:52:49Z",
      "updatedAt": "2025-10-14T22:23:15Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, I think we should clarify this and have an example!",
          "createdAt": "2025-10-14T22:23:15Z",
          "updatedAt": "2025-10-14T22:23:15Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 8,
      "id": "PR_kwDOKH7CuM5Z5YFy",
      "title": "Add SVCB to the query algorithm",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/8",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #4",
      "createdAt": "2023-09-08T17:03:21Z",
      "updatedAt": "2023-10-10T17:45:42Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "bdd120489d779d04fb5ccceddc2b6c1bb8be7e85",
      "headRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "headRefName": "tfpauly-patch-1",
      "headRefOid": "09fd43f77728a5c2806d663b76f61e70eb4ba4cc",
      "closedAt": "2023-10-10T17:45:42Z",
      "mergedAt": "2023-10-10T17:45:42Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "60399432d9afad4190473d2097c7c6cea25a0f86"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM5gd_Ra",
          "commit": {
            "abbreviatedOid": "9a01d8a"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Overall LGTM, modulo one main comment inline and a few nits",
          "createdAt": "2023-09-08T22:44:30Z",
          "updatedAt": "2023-09-08T22:48:26Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "```suggestion\r\nThe algorithm for acting upon received answers depends on whether the\r\nclient sent out queries for SVCB RRs.\r\n```",
              "createdAt": "2023-09-08T22:44:30Z",
              "updatedAt": "2023-09-08T22:48:26Z"
            },
            {
              "originalPosition": 78,
              "body": "```suggestion\r\nFor both variations of the algorithm, the RECOMMENDED value for\r\n```",
              "createdAt": "2023-09-08T22:45:46Z",
              "updatedAt": "2023-09-08T22:48:26Z"
            },
            {
              "originalPosition": 72,
              "body": "What if the client received an HTTPS RR with a valid v6 address in the ipv6hint? We should be able to start the connection attempt immediately, right?",
              "createdAt": "2023-09-08T22:47:32Z",
              "updatedAt": "2023-09-08T22:48:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5geG2o",
          "commit": {
            "abbreviatedOid": "3e71243"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-08T23:09:51Z",
          "updatedAt": "2023-09-08T23:09:51Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "Yes, that's a good point. I'll need to add that nuance \u2014 we indeed do that in our code.",
              "createdAt": "2023-09-08T23:09:51Z",
              "updatedAt": "2023-09-08T23:09:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5gx0fr",
          "commit": {
            "abbreviatedOid": "3e71243"
          },
          "author": "bashi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Looks good to me. Just a clarifying question and some minor comments.",
          "createdAt": "2023-09-13T04:34:07Z",
          "updatedAt": "2023-09-13T05:04:13Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nAAAA and A queries to resolve the service name included in\r\n```\r\n\r\nassuming that the Happy Eyeballs algorithm always queries both records?",
              "createdAt": "2023-09-13T04:34:08Z",
              "updatedAt": "2023-09-13T05:04:13Z"
            },
            {
              "originalPosition": 74,
              "body": "> Once both records are received,\r\n\r\nWhat should happen when the client received a SVCB answer that has a service name other than the original query? Should the client wait for additional AAAA queries?",
              "createdAt": "2023-09-13T04:56:46Z",
              "updatedAt": "2023-09-13T05:04:13Z"
            },
            {
              "originalPosition": 77,
              "body": "Should we also mention a case where A comes first? It was already decribed in the non-SVCB variant, but it may not be clear what the client should do as line 132 says \"The algorithm for acting upon received answers depends on whether the client sent out queries for SVCB RRs.\"",
              "createdAt": "2023-09-13T05:01:42Z",
              "updatedAt": "2023-09-13T05:04:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5g1tcG",
          "commit": {
            "abbreviatedOid": "3e71243"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-13T14:26:32Z",
          "updatedAt": "2023-09-13T14:26:33Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "This accounts for the case where the network connectivity to the device is only v4 or only v6",
              "createdAt": "2023-09-13T14:26:32Z",
              "updatedAt": "2023-09-13T14:26:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5iFAoU",
          "commit": {
            "abbreviatedOid": "3e71243"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-27T02:17:56Z",
          "updatedAt": "2023-09-27T06:18:36Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nreceiving a SVCB answer, the client might need to issue futher\r\n```\r\nContext: https://www.ietf.org/archive/id/draft-ietf-dnsop-svcb-https-12.html#appendix-E-2.13.2.2",
              "createdAt": "2023-09-27T02:17:56Z",
              "updatedAt": "2023-09-27T06:18:36Z"
            },
            {
              "originalPosition": 73,
              "body": "```suggestion\r\n  is run until both the AAAA and SVCB responses are received.\r\n```\r\n\"it lets run\" sounds a bit weird ",
              "createdAt": "2023-09-27T02:35:07Z",
              "updatedAt": "2023-09-27T06:18:36Z"
            },
            {
              "originalPosition": 47,
              "body": "```suggestion\r\nmaking separate synchronous queries, each on a different thread.\r\n```\r\nUsing \"query\" twice was a bit confusing.",
              "createdAt": "2023-09-27T06:01:20Z",
              "updatedAt": "2023-09-27T06:18:36Z"
            },
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nconnectivity, it still issues the SVCB query prior to\r\n```",
              "createdAt": "2023-09-27T06:09:33Z",
              "updatedAt": "2023-09-27T06:18:36Z"
            },
            {
              "originalPosition": 81,
              "body": "```suggestion\r\nIf new positive responses arrive while connection attempts are in progress,\r\n```\r\nFor consistency with earlier phrasing",
              "createdAt": "2023-09-27T06:18:15Z",
              "updatedAt": "2023-09-27T06:18:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5iF1Ol",
          "commit": {
            "abbreviatedOid": "3e71243"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Sorry for the delayed review, but overall lgtm % nits on wording.",
          "createdAt": "2023-09-27T06:34:03Z",
          "updatedAt": "2023-09-27T06:34:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM5iGQ01",
          "commit": {
            "abbreviatedOid": "3e71243"
          },
          "author": "bashi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-27T07:40:08Z",
          "updatedAt": "2023-09-27T07:40:09Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "I just noticed that [section 5.1](https://datatracker.ietf.org/doc/html/draft-ietf-dnsop-svcb-https-12#section-5.1) of the SVCB draft says that client should wait for 50 ms before starting optimistic pre-connection when clients receive AAAA before SVCB. Do we want to respect the behavior, or do we want to allow clients to make connection attempts immediately (if clients are not SVCB-reliant) ?",
              "createdAt": "2023-09-27T07:40:08Z",
              "updatedAt": "2023-09-27T07:40:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5iGQ8b",
          "commit": {
            "abbreviatedOid": "3e71243"
          },
          "author": "bashi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-27T07:40:23Z",
          "updatedAt": "2023-09-27T07:40:23Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Thank you for the clarification.",
              "createdAt": "2023-09-27T07:40:23Z",
              "updatedAt": "2023-09-27T07:40:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5iGYB8",
          "commit": {
            "abbreviatedOid": "3e71243"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-27T07:56:05Z",
          "updatedAt": "2023-09-27T07:56:06Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "IIUC, the part about running the Resolution Delay Timer (recommended to be 50ms) addresses that, no?",
              "createdAt": "2023-09-27T07:56:05Z",
              "updatedAt": "2023-09-27T07:56:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5jcoTB",
          "commit": {
            "abbreviatedOid": "3e71243"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-10T17:22:07Z",
          "updatedAt": "2023-10-10T17:22:07Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Yeah I disagreed with them on that... but that's the official style now!",
              "createdAt": "2023-10-10T17:22:07Z",
              "updatedAt": "2023-10-10T17:22:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5jcok3",
          "commit": {
            "abbreviatedOid": "3e71243"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-10T17:22:51Z",
          "updatedAt": "2023-10-10T17:22:51Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "We currently wait for 50ms, even without being reliant.",
              "createdAt": "2023-10-10T17:22:51Z",
              "updatedAt": "2023-10-10T17:22:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5jcs-Y",
          "commit": {
            "abbreviatedOid": "d400de8"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-10T17:33:17Z",
          "updatedAt": "2023-10-10T17:33:17Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "```suggestion\r\n  is run until both the AAAA and SVCB responses are received,\r\n  or a SVCB response is received that also includes at least one\r\n  address in the `ipv6hint` parameter.\r\n```",
              "createdAt": "2023-10-10T17:33:17Z",
              "updatedAt": "2023-10-10T17:33:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5jctEK",
          "commit": {
            "abbreviatedOid": "8ac5320"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-10T17:33:32Z",
          "updatedAt": "2023-10-10T17:33:32Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "Added",
              "createdAt": "2023-10-10T17:33:32Z",
              "updatedAt": "2023-10-10T17:33:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5jct8e",
          "commit": {
            "abbreviatedOid": "8ac5320"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-10T17:35:51Z",
          "updatedAt": "2023-10-10T17:35:52Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "I think that is handled by saying:\r\n\"If the client receives any positive response back (containing a valid\r\n   AAAA, A, or SVCB RR)\"",
              "createdAt": "2023-10-10T17:35:52Z",
              "updatedAt": "2023-10-10T17:35:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5jcv6n",
          "commit": {
            "abbreviatedOid": "8ac5320"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-10T17:41:15Z",
          "updatedAt": "2023-10-10T17:41:16Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "```suggestion\r\n  AAAA, A, or SVCB ServiceMode RR), it starts the Resolution Delay timer, which\r\n```",
              "createdAt": "2023-10-10T17:41:15Z",
              "updatedAt": "2023-10-10T17:41:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5jcwHW",
          "commit": {
            "abbreviatedOid": "8ac5320"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-10T17:41:47Z",
          "updatedAt": "2023-10-10T17:41:48Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "```suggestion\r\n  is run until both the AAAA and SVCB ServiceMode responses are received,\r\n```",
              "createdAt": "2023-10-10T17:41:47Z",
              "updatedAt": "2023-10-10T17:41:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5jcxJK",
          "commit": {
            "abbreviatedOid": "8ac5320"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-10T17:44:20Z",
          "updatedAt": "2023-10-10T17:44:20Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "Updated to clarify that we need to wait for SVCB ServiceMode, which should account for this.",
              "createdAt": "2023-10-10T17:44:20Z",
              "updatedAt": "2023-10-10T17:44:20Z"
            }
          ]
        }
      ]
    },
    {
      "number": 9,
      "id": "PR_kwDOKH7CuM5aolNY",
      "title": "Rough draft of changes",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/9",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Scoping in the changes roughly, for internal review",
      "createdAt": "2023-09-19T03:31:22Z",
      "updatedAt": "2023-11-01T05:04:03Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "bdd120489d779d04fb5ccceddc2b6c1bb8be7e85",
      "headRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "headRefName": "tfpauly-rough-draft",
      "headRefOid": "d6153d808206a94768d62e1a99d0217969620e45",
      "closedAt": "2023-11-01T05:04:03Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM5hZvJw",
          "commit": {
            "abbreviatedOid": "d6153d8"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T20:26:35Z",
          "updatedAt": "2023-09-19T20:46:43Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nreceiving an SVCB answer, the client might need to issue further\r\n```",
              "createdAt": "2023-09-19T20:26:35Z",
              "updatedAt": "2023-09-19T20:46:43Z"
            },
            {
              "originalPosition": 19,
              "body": "The RR initialism is already defined further up\r\n```suggestion\r\nRRs {{SVCB}}, it\r\n```",
              "createdAt": "2023-09-19T20:27:03Z",
              "updatedAt": "2023-09-19T20:46:43Z"
            },
            {
              "originalPosition": 84,
              "body": "[ I vaguely remember asking this before, but don't remember the response - was it somewhere else? ]\r\n\r\nWhat about the case where the first response is an HTTPS RR that contains v6 address hints?",
              "createdAt": "2023-09-19T20:30:12Z",
              "updatedAt": "2023-09-19T20:46:43Z"
            },
            {
              "originalPosition": 108,
              "body": "Saying \"first\" and \"next\" is unclear here, does the second sort override the first one? Perhaps: first sort by priority, and then, within each group at equal priority, apply 6724",
              "createdAt": "2023-09-19T20:41:37Z",
              "updatedAt": "2023-09-19T20:46:43Z"
            },
            {
              "originalPosition": 128,
              "body": "As above, phrasing sorting as a \"first then that\" here is ambiguous, we should phrase this in terms of precedence or some other way of communicating which sorting beats the other one",
              "createdAt": "2023-09-19T20:42:05Z",
              "updatedAt": "2023-09-19T20:46:43Z"
            }
          ]
        }
      ]
    },
    {
      "number": 11,
      "id": "PR_kwDOKH7CuM5cl-py",
      "title": "Update introduction and overview with SVCB",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/11",
      "state": "MERGED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #7 ",
      "createdAt": "2023-10-12T05:53:04Z",
      "updatedAt": "2023-10-14T03:30:34Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "60399432d9afad4190473d2097c7c6cea25a0f86",
      "headRepository": "nidhijaju/draft-happy-eyeballs-v3",
      "headRefName": "intro-patch",
      "headRefOid": "e582aa757e38858220991ab659a51b5df123e799",
      "closedAt": "2023-10-14T03:30:34Z",
      "mergedAt": "2023-10-14T03:30:34Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "ed7a3b844237071dcd2c8a2681f1e39a1b076ea7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM5j9w5_",
          "commit": {
            "abbreviatedOid": "a6ba54a"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-13T18:35:17Z",
          "updatedAt": "2023-10-13T18:38:22Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "I think we can't generally have reference links in an abstract...",
              "createdAt": "2023-10-13T18:35:17Z",
              "updatedAt": "2023-10-13T18:38:22Z"
            },
            {
              "originalPosition": 16,
              "body": "```suggestion\r\ndocument updates the algorithm description in RFC 8305.\r\n```",
              "createdAt": "2023-10-13T18:35:31Z",
              "updatedAt": "2023-10-13T18:38:22Z"
            },
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nresolution, such as for HTTP/3 over QUIC {{?RFC9114}}, allows\r\n```",
              "createdAt": "2023-10-13T18:36:32Z",
              "updatedAt": "2023-10-13T18:38:22Z"
            },
            {
              "originalPosition": 43,
              "body": "```suggestion\r\nupgrading between protocols without state from previous connections, instead of\r\nusing information from other discovery mechanisms such as HTTP\r\n```",
              "createdAt": "2023-10-13T18:37:18Z",
              "updatedAt": "2023-10-13T18:38:22Z"
            },
            {
              "originalPosition": 61,
              "body": "I think I'd split the QUIC/TCP consideration into a separate paragraph, after this one. \"This document also assumes...\"",
              "createdAt": "2023-10-13T18:38:12Z",
              "updatedAt": "2023-10-13T18:38:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5kAAh-",
          "commit": {
            "abbreviatedOid": "a6ba54a"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-14T03:27:27Z",
          "updatedAt": "2023-10-14T03:27:27Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "\"without state from previous connections\" sounded a bit odd to me so I reworded the sentence slightly. Hopefully it sounds better :)",
              "createdAt": "2023-10-14T03:27:27Z",
              "updatedAt": "2023-10-14T03:27:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5kAAic",
          "commit": {
            "abbreviatedOid": "a6ba54a"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-14T03:27:47Z",
          "updatedAt": "2023-10-14T03:27:48Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Ah, good to know. Thank you!",
              "createdAt": "2023-10-14T03:27:48Z",
              "updatedAt": "2023-10-14T03:27:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5kAAit",
          "commit": {
            "abbreviatedOid": "a6ba54a"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-14T03:28:01Z",
          "updatedAt": "2023-10-14T03:28:02Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "Done :)",
              "createdAt": "2023-10-14T03:28:02Z",
              "updatedAt": "2023-10-14T03:28:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5kAAl1",
          "commit": {
            "abbreviatedOid": "e582aa7"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-14T03:30:05Z",
          "updatedAt": "2023-10-14T03:30:06Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": " Nice pun =) ",
              "createdAt": "2023-10-14T03:30:05Z",
              "updatedAt": "2023-10-14T03:30:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5kAAmW",
          "commit": {
            "abbreviatedOid": "e582aa7"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-14T03:30:26Z",
          "updatedAt": "2023-10-14T03:30:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 12,
      "id": "PR_kwDOKH7CuM5cylLe",
      "title": "Add ALPN handling",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/12",
      "state": "MERGED",
      "author": "bashi",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #5.",
      "createdAt": "2023-10-14T06:16:47Z",
      "updatedAt": "2024-01-26T00:45:16Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "ed7a3b844237071dcd2c8a2681f1e39a1b076ea7",
      "headRepository": "bashi/draft-happy-eyeballs-v3",
      "headRefName": "alpn",
      "headRefOid": "960faf12b646e468f0e495ee7ddf429f926db3a7",
      "closedAt": "2023-10-18T23:39:30Z",
      "mergedAt": "2023-10-18T23:39:30Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "f6e764b539bd00135b352d60ec7866d6304c85f9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM5kf8-U",
          "commit": {
            "abbreviatedOid": "84e4636"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-10-18T20:36:09Z",
          "updatedAt": "2023-10-18T20:40:23Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "```suggestion\r\n~~~\r\n example.com. 60 IN HTTPS 1 . alpn=\"h3\" no-default-alpn ipv6hints=2001:db8::2\r\n~~~\r\n```",
              "createdAt": "2023-10-18T20:36:09Z",
              "updatedAt": "2023-10-18T20:40:23Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\r\n{{Section 7.1.2 of SVCB}} to determine the underlying\r\n```",
              "createdAt": "2023-10-18T20:36:49Z",
              "updatedAt": "2023-10-18T20:40:23Z"
            },
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nSHOULD perform the procedure specified in\r\n```",
              "createdAt": "2023-10-18T20:37:09Z",
              "updatedAt": "2023-10-18T20:40:23Z"
            },
            {
              "originalPosition": 31,
              "body": "I don't think this is quite the statement to make \u2014 it's not just the value in the hint, but _anything_ based on the name for that record, which in this case is example.com. Probably we should update the example to have a different name, and replace the `.` with `svc1.example.com`, and then say that the client shouldn't connect to any address for `svc1.example.com`.",
              "createdAt": "2023-10-18T20:39:08Z",
              "updatedAt": "2023-10-18T20:40:23Z"
            },
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nin {{Section 9.3 of SVCB}}.\r\n```",
              "createdAt": "2023-10-18T20:39:30Z",
              "updatedAt": "2023-10-18T20:40:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5kg8Lp",
          "commit": {
            "abbreviatedOid": "84e4636"
          },
          "author": "bashi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T23:17:34Z",
          "updatedAt": "2023-10-18T23:17:35Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "Updated the example. Does that make sense?",
              "createdAt": "2023-10-18T23:17:34Z",
              "updatedAt": "2023-10-18T23:17:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5khB0E",
          "commit": {
            "abbreviatedOid": "67bbf4a"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T23:38:08Z",
          "updatedAt": "2023-10-18T23:38:08Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nIn this case, attempting a connection to 2001:db8::2 or any other address resolved\r\nfor `svc1.example.com` would be incorrect because the RR indicates that\r\n`svc1.example.com` only supports HTTP/3, based on the ALPN value of \"h3\".\r\n```",
              "createdAt": "2023-10-18T23:38:08Z",
              "updatedAt": "2023-10-18T23:38:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5khB1e",
          "commit": {
            "abbreviatedOid": "960faf1"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-18T23:38:18Z",
          "updatedAt": "2023-10-18T23:38:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM5khB3u",
          "commit": {
            "abbreviatedOid": "84e4636"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T23:38:32Z",
          "updatedAt": "2023-10-18T23:38:32Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "Yeah! Tweaked wording slightly",
              "createdAt": "2023-10-18T23:38:32Z",
              "updatedAt": "2023-10-18T23:38:33Z"
            }
          ]
        }
      ]
    },
    {
      "number": 13,
      "id": "PR_kwDOKH7CuM5c0qjr",
      "title": "Add a section for connection establishment",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/13",
      "state": "MERGED",
      "author": "bashi",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "To discuss how to handle SVCB-reliant clients such as ECH. Fixes #6.",
      "createdAt": "2023-10-15T06:12:45Z",
      "updatedAt": "2024-01-26T00:45:15Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "f6e764b539bd00135b352d60ec7866d6304c85f9",
      "headRepository": "bashi/draft-happy-eyeballs-v3",
      "headRefName": "svcb-reliant",
      "headRefOid": "276b4dd9e6aae465336982d17940a94e065af1a2",
      "closedAt": "2023-10-18T23:47:07Z",
      "mergedAt": "2023-10-18T23:47:07Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "a545fee16e0d5b499557ca00417c7dcce12a9fb2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM5kf_n5",
          "commit": {
            "abbreviatedOid": "6aa4931"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-10-18T20:42:21Z",
          "updatedAt": "2023-10-18T20:51:44Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\n({{Section 3 of SVCB}}) when SVCB RRs contain the\r\n```",
              "createdAt": "2023-10-18T20:42:21Z",
              "updatedAt": "2023-10-18T20:51:44Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\n\"ech\" SvcParamKey {{!ECH=I-D.ietf-tls-svcb-ech}}. If the client is either an SVCB-reliant client or a\r\n```",
              "createdAt": "2023-10-18T20:43:49Z",
              "updatedAt": "2023-10-18T20:51:44Z"
            },
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n## Determining successful connection establishment\r\n```",
              "createdAt": "2023-10-18T20:45:11Z",
              "updatedAt": "2023-10-18T20:51:44Z"
            },
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nThe determination of when a connection attempt has successfully completed\r\n(and other attempts can be cancelled) depends on the protocols being used\r\nto establish a connection. This can involve one or more protocol handshakes.\r\n\r\nClient connections that use TCP only (without TLS or another protocol on top, such\r\nas for unencrypted HTTP connections) will determine successful establishment based\r\non completing the TCP handshake only. When TLS is used on top of of TCP (such\r\nas for encrypted HTTP connections), clients MAY choose to wait for the TLS handshake to\r\nsuccessfully complete before cancelling other connection attempts. This is particularly\r\nuseful for networks in which a TCP-terminating proxy might be causing TCP handshakes\r\nto succeed quickly, even though end-to-end connectivity with the TLS-terminating\r\nserver will fail. QUIC connections inherently include a secure handshake in their main\r\nhandshakes, and thus only need to wait for a single handshake to complete.\r\n```",
              "createdAt": "2023-10-18T20:51:28Z",
              "updatedAt": "2023-10-18T20:51:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5khDWu",
          "commit": {
            "abbreviatedOid": "276b4dd"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-18T23:46:39Z",
          "updatedAt": "2023-10-18T23:46:39Z",
          "comments": []
        }
      ]
    },
    {
      "number": 14,
      "id": "PR_kwDOKH7CuM5dKB25",
      "title": "Update sorting algorithm with SVCB RRs",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/14",
      "state": "MERGED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #2",
      "createdAt": "2023-10-18T15:28:11Z",
      "updatedAt": "2023-10-18T23:36:35Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "ed7a3b844237071dcd2c8a2681f1e39a1b076ea7",
      "headRepository": "nidhijaju/draft-happy-eyeballs-v3",
      "headRefName": "sorting-algorithm",
      "headRefOid": "c378a7b224d1bbc9167612bbeec3c98df0deb790",
      "closedAt": "2023-10-18T23:36:34Z",
      "mergedAt": "2023-10-18T23:36:34Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "39126c12d8948f678f466cf17688a89778784048"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM5kgFQ9",
          "commit": {
            "abbreviatedOid": "b7c35f8"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-10-18T20:58:22Z",
          "updatedAt": "2023-10-18T20:58:35Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "The summary a ways below has a definition for \"First Address Family Count\", so we would need to update all references to this.\r\n\r\nAnd I'm not sure about the \"Combination Count\"... how about calling this:\r\n\"Preferred Protocol Attempt Count\" or something??",
              "createdAt": "2023-10-18T20:58:22Z",
              "updatedAt": "2023-10-18T20:58:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5kg-tL",
          "commit": {
            "abbreviatedOid": "b7c35f8"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T23:23:59Z",
          "updatedAt": "2023-10-18T23:23:59Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "\"Preferred Protocol Attempt Count\" mentions protocol but doesn't really imply that it's a combination of protocols and address families. How about calling it something like \"Preferred Protocol Combination Count\" for now and we can always iterate on it? Or is the word \"combination\" not as preferable?",
              "createdAt": "2023-10-18T23:23:59Z",
              "updatedAt": "2023-10-18T23:23:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5khA2R",
          "commit": {
            "abbreviatedOid": "b7c35f8"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T23:31:54Z",
          "updatedAt": "2023-10-18T23:31:55Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "Yeah \"Preferred Protocol Combination Count\" works for me",
              "createdAt": "2023-10-18T23:31:54Z",
              "updatedAt": "2023-10-18T23:31:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5khBiP",
          "commit": {
            "abbreviatedOid": "c378a7b"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-18T23:36:14Z",
          "updatedAt": "2023-10-18T23:36:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 16,
      "id": "PR_kwDOKH7CuM5dWBEA",
      "title": "Update with QUIC",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/16",
      "state": "MERGED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Updates all the mentions of TCP with the relevant QUIC considerations as well.\r\nAddresses #10.",
      "createdAt": "2023-10-20T05:36:17Z",
      "updatedAt": "2023-10-23T15:53:40Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "a545fee16e0d5b499557ca00417c7dcce12a9fb2",
      "headRepository": "nidhijaju/draft-happy-eyeballs-v3",
      "headRefName": "mention-quic",
      "headRefOid": "1a6777ce73eb7d92ef5cf8b87a2717e1cde34115",
      "closedAt": "2023-10-23T15:53:40Z",
      "mergedAt": "2023-10-23T15:53:40Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "6cd12988d4f339d71ca987280ce3db40eec2f483"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM5kunYh",
          "commit": {
            "abbreviatedOid": "3cb4f17"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Looks good! A few areas to tweak",
          "createdAt": "2023-10-20T12:35:19Z",
          "updatedAt": "2023-10-20T12:38:39Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I'm not sure it's correct to say that QUIC 0-RTT relies on specific client IPs?",
              "createdAt": "2023-10-20T12:35:19Z",
              "updatedAt": "2023-10-20T12:38:39Z"
            },
            {
              "originalPosition": 49,
              "body": "Should this be \"re-trying its handshake (such as sending a second SYN for TCP or sending a second QUIC Initial)\"",
              "createdAt": "2023-10-20T12:37:09Z",
              "updatedAt": "2023-10-20T12:38:39Z"
            },
            {
              "originalPosition": 75,
              "body": "Maybe say \"at the transport layer (such as TCP or QUIC)\"",
              "createdAt": "2023-10-20T12:37:54Z",
              "updatedAt": "2023-10-20T12:38:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5kyfr1",
          "commit": {
            "abbreviatedOid": "3cb4f17"
          },
          "author": "bashi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Nothing to add other than Tommy's suggestion.",
          "createdAt": "2023-10-20T22:16:53Z",
          "updatedAt": "2023-10-20T22:16:53Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM5k0Fym",
          "commit": {
            "abbreviatedOid": "3cb4f17"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-22T06:10:15Z",
          "updatedAt": "2023-10-22T06:10:16Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Got it, removing for now.",
              "createdAt": "2023-10-22T06:10:15Z",
              "updatedAt": "2023-10-22T06:10:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5k6Acw",
          "commit": {
            "abbreviatedOid": "33aa6b6"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T15:51:56Z",
          "updatedAt": "2023-10-23T15:51:57Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "```suggestion\r\nonly try to approximate the time of the first handshake packet retransmission, and\r\n```",
              "createdAt": "2023-10-23T15:51:57Z",
              "updatedAt": "2023-10-23T15:51:57Z"
            }
          ]
        }
      ]
    },
    {
      "number": 17,
      "id": "PR_kwDOKH7CuM5dW-6x",
      "title": "Rephrase TCP related sentences",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/17",
      "state": "CLOSED",
      "author": "bashi",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "In v3, connection establishment doesn't always mean TCP handshake. Rephrase some texts to reflect that.",
      "createdAt": "2023-10-20T09:02:16Z",
      "updatedAt": "2024-01-26T00:45:14Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "a545fee16e0d5b499557ca00417c7dcce12a9fb2",
      "headRepository": "bashi/draft-happy-eyeballs-v3",
      "headRefName": "tcp-rewording",
      "headRefOid": "4a697b0a428bfd418d32322e84cb313e60b80188",
      "closedAt": "2023-10-20T10:51:15Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "body": "I think #16 may already cover this, comments and suggestions there would be very welcome :)",
          "createdAt": "2023-10-20T09:27:29Z",
          "updatedAt": "2023-10-20T09:27:29Z"
        },
        {
          "author": "bashi",
          "authorAssociation": "COLLABORATOR",
          "body": "I wasn't aware of your PR. I'll take a look at the PR.",
          "createdAt": "2023-10-20T10:51:15Z",
          "updatedAt": "2023-10-20T10:51:15Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 21,
      "id": "PR_kwDOKH7CuM5eMKf6",
      "title": "Refer to PREF64",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/21",
      "state": "CLOSED",
      "author": "bashi",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #19.",
      "createdAt": "2023-10-31T05:25:07Z",
      "updatedAt": "2024-01-26T00:45:11Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "ac7338752ffe24ea52d128944897b3241d17d96b",
      "headRepository": "bashi/draft-happy-eyeballs-v3",
      "headRefName": "pref64",
      "headRefOid": "1da9a49b650a8438a81e7d11f0c4a6c3b4c3772d",
      "closedAt": "2023-10-31T23:05:20Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "momoka0122y",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Can I make this PR just for the sake of having my name in the blame?",
          "createdAt": "2023-10-31T16:25:12Z",
          "updatedAt": "2023-10-31T16:25:12Z"
        },
        {
          "author": "bashi",
          "authorAssociation": "COLLABORATOR",
          "body": "Sure, please send a PR.",
          "createdAt": "2023-10-31T23:05:20Z",
          "updatedAt": "2023-10-31T23:05:20Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 25,
      "id": "PR_kwDOKH7CuM5eSqTP",
      "title": "Add a note about NAT64 address synthesis",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/25",
      "state": "MERGED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes https://github.com/tfpauly/draft-happy-eyeballs-v3/issues/18.",
      "createdAt": "2023-11-01T02:16:12Z",
      "updatedAt": "2023-11-03T00:28:30Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "ac7338752ffe24ea52d128944897b3241d17d96b",
      "headRepository": "nidhijaju/draft-happy-eyeballs-v3",
      "headRefName": "address-synthesis",
      "headRefOid": "da7befe2c0993c2435ddb72fcddc7715b756542e",
      "closedAt": "2023-11-03T00:28:29Z",
      "mergedAt": "2023-11-03T00:28:29Z",
      "mergedBy": "nidhijaju",
      "mergeCommit": {
        "oid": "10e6501b99e548af0f9d637f1a941f661baa3fb9"
      },
      "comments": [
        {
          "author": "momoka0122y",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Sorry, I should have said I wanted to create a PR for this myself after discussion was done on the issue.\r\nI think the wording can be improved so I've submitted my own PR. #27 ",
          "createdAt": "2023-11-01T10:45:51Z",
          "updatedAt": "2023-11-01T10:45:51Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Or \"Closes #18\"",
          "createdAt": "2023-11-02T23:37:17Z",
          "updatedAt": "2023-11-02T23:37:17Z"
        },
        {
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "body": "Updated :) Okay, let me merge this.",
          "createdAt": "2023-11-03T00:28:21Z",
          "updatedAt": "2023-11-03T00:28:21Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM5lx59F",
          "commit": {
            "abbreviatedOid": "80d7ee2"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-01T05:03:48Z",
          "updatedAt": "2023-11-01T05:03:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM5l4KTv",
          "commit": {
            "abbreviatedOid": "80d7ee2"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-01T23:29:38Z",
          "updatedAt": "2023-11-01T23:29:38Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I wouldn't mention 1918 space, see discussion in #18 ",
              "createdAt": "2023-11-01T23:29:38Z",
              "updatedAt": "2023-11-01T23:29:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5l5LV4",
          "commit": {
            "abbreviatedOid": "80d7ee2"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-02T05:38:26Z",
          "updatedAt": "2023-11-02T05:38:27Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I deliberately tried to phrase it as a gentle warning because the 1918 space may still be something you want to synthesize. Maybe there's a better way to phrase it?\r\n\r\nBased on #18, I updated the first sentence with the other subnets as well.",
              "createdAt": "2023-11-02T05:38:26Z",
              "updatedAt": "2023-11-02T05:38:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5l_V7K",
          "commit": {
            "abbreviatedOid": "d66fba5"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-02T19:37:27Z",
          "updatedAt": "2023-11-02T19:39:47Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nNote that some IPv4 prefixes are scoped to a given host or network, such as\r\n```",
              "createdAt": "2023-11-02T19:37:27Z",
              "updatedAt": "2023-11-02T19:39:47Z"
            },
            {
              "originalPosition": 7,
              "body": "I'm not sure what this guidance about 1918 is saying: should an implementer of HEv3 treat 1918 differently? There can be issues if the client and NAT64 box are connected to different installments of 1918 space, but that's not something the HEv3 implementation can find out about",
              "createdAt": "2023-11-02T19:39:31Z",
              "updatedAt": "2023-11-02T19:39:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5mAb3L",
          "commit": {
            "abbreviatedOid": "d37fd9c"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-02T23:12:57Z",
          "updatedAt": "2023-11-02T23:12:58Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\ntherefore do not require NAT64 address synthesis.\r\n\r\n```",
              "createdAt": "2023-11-02T23:12:57Z",
              "updatedAt": "2023-11-02T23:12:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5mAckC",
          "commit": {
            "abbreviatedOid": "d66fba5"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-02T23:16:20Z",
          "updatedAt": "2023-11-02T23:16:20Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Fair enough, I've removed the sentence about 1918 for now.",
              "createdAt": "2023-11-02T23:16:20Z",
              "updatedAt": "2023-11-02T23:16:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5mAgH_",
          "commit": {
            "abbreviatedOid": "da7befe"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM.\r\n\r\nBTW, if you rename the description from \"Addresses #18.\" to \"Fixes #18.\" then it'll trigger GitHub's automated system that autocloses the issue when the PR is merged.",
          "createdAt": "2023-11-02T23:32:05Z",
          "updatedAt": "2023-11-02T23:32:05Z",
          "comments": []
        }
      ]
    },
    {
      "number": 26,
      "id": "PR_kwDOKH7CuM5eSq6D",
      "title": "Fix typos in Section 5",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/26",
      "state": "MERGED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes https://github.com/tfpauly/draft-happy-eyeballs-v3/issues/23.",
      "createdAt": "2023-11-01T02:19:57Z",
      "updatedAt": "2023-11-01T05:03:17Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "ac7338752ffe24ea52d128944897b3241d17d96b",
      "headRepository": "nidhijaju/draft-happy-eyeballs-v3",
      "headRefName": "section-5-typos",
      "headRefOid": "120f63549741145c420d955ac0b441fdea193339",
      "closedAt": "2023-11-01T05:03:17Z",
      "mergedAt": "2023-11-01T05:03:17Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "d426f35a29b047e41db353f0f042fcf71f666055"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM5lx526",
          "commit": {
            "abbreviatedOid": "120f635"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-01T05:03:13Z",
          "updatedAt": "2023-11-01T05:03:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 27,
      "id": "PR_kwDOKH7CuM5eUgrX",
      "title": "NAT64 address synthesis warning",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/27",
      "state": "CLOSED",
      "author": "momoka0122y",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses https://github.com/tfpauly/draft-happy-eyeballs-v3/issues/18 .",
      "createdAt": "2023-11-01T10:42:08Z",
      "updatedAt": "2023-11-01T23:20:20Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "d426f35a29b047e41db353f0f042fcf71f666055",
      "headRepository": "momoka0122y/draft-happy-eyeballs-v3",
      "headRefName": "patch-1",
      "headRefOid": "cf89e6abd12d25f9540f5fd9dff736e665025623",
      "closedAt": "2023-11-01T23:20:19Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Please just suggest edits to https://github.com/tfpauly/draft-happy-eyeballs-v3/pull/25",
          "createdAt": "2023-11-01T23:20:19Z",
          "updatedAt": "2023-11-01T23:20:19Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 28,
      "id": "PR_kwDOKH7CuM5eUpWd",
      "title": "Referece PREF64",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/28",
      "state": "MERGED",
      "author": "momoka0122y",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes https://github.com/tfpauly/draft-happy-eyeballs-v3/issues/19.\r\n\r\n(Sorry I made the PR myself because I wanted my name in the blame.)",
      "createdAt": "2023-11-01T11:08:45Z",
      "updatedAt": "2023-11-01T23:22:19Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "d426f35a29b047e41db353f0f042fcf71f666055",
      "headRepository": "momoka0122y/draft-happy-eyeballs-v3",
      "headRefName": "patch-2",
      "headRefOid": "31a9866c5f97bb9d1aba104ffded771dad5ecff2",
      "closedAt": "2023-11-01T23:22:18Z",
      "mergedAt": "2023-11-01T23:22:18Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "1d96f23fc8c7d3b0963c76e2922f938deecdb117"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM5lzyDt",
          "commit": {
            "abbreviatedOid": "1f23b6c"
          },
          "author": "bashi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-01T12:03:45Z",
          "updatedAt": "2023-11-01T12:03:45Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\n{{!RFC7050}}, or uses PREF64s  {{!RFC8781}} received from the network\r\nto synthesize appropriate IPv6 addresses\r\n```\r\n\r\nAs RFC8781 mentioned there might be multiple prefixes.",
              "createdAt": "2023-11-01T12:03:45Z",
              "updatedAt": "2023-11-01T12:03:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5l0E3b",
          "commit": {
            "abbreviatedOid": "1f23b6c"
          },
          "author": "momoka0122y",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-01T12:48:09Z",
          "updatedAt": "2023-11-01T12:51:28Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I tried to make it the same as the text for RFC7050 which also doesn't mention there being multiple prefixes but the \"a\" in the sentence is indeed misleading.\r\n\r\nHow about the below?\r\n``` diff\r\n+ {{!RFC7050}}, or uses PREF64s received from Router Advertisements {{!RFC8781}}.\r\n```",
              "createdAt": "2023-11-01T12:48:09Z",
              "updatedAt": "2023-11-01T12:51:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5l0QXl",
          "commit": {
            "abbreviatedOid": "1f23b6c"
          },
          "author": "bashi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-01T13:12:24Z",
          "updatedAt": "2023-11-01T13:12:24Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Looks good to me.\r\nNit-picking: Replacing \"It\" with \"The device\" might be a bit more explicit.",
              "createdAt": "2023-11-01T13:12:24Z",
              "updatedAt": "2023-11-01T13:12:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5l4JIN",
          "commit": {
            "abbreviatedOid": "31a9866"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-01T23:22:11Z",
          "updatedAt": "2023-11-01T23:22:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 29,
      "id": "PR_kwDOKH7CuM5eaEVe",
      "title": "Clarify wording in Section 4",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/29",
      "state": "MERGED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes https://github.com/tfpauly/draft-happy-eyeballs-v3/issues/22.",
      "createdAt": "2023-11-02T08:40:37Z",
      "updatedAt": "2023-11-02T23:12:02Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "1d96f23fc8c7d3b0963c76e2922f938deecdb117",
      "headRepository": "nidhijaju/draft-happy-eyeballs-v3",
      "headRefName": "section-4-clarify",
      "headRefOid": "c2a65d953bad5e858ca52ad68c25d9fb863e922b",
      "closedAt": "2023-11-02T23:12:02Z",
      "mergedAt": "2023-11-02T23:12:02Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "84911632f98035323a456ca9c40f0b9f6e0534d1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM5l_ZpR",
          "commit": {
            "abbreviatedOid": "c2a65d9"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-02T19:49:07Z",
          "updatedAt": "2023-11-02T19:49:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM5mAbrt",
          "commit": {
            "abbreviatedOid": "c2a65d9"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-02T23:11:56Z",
          "updatedAt": "2023-11-02T23:11:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 31,
      "id": "PR_kwDOKH7CuM5el64b",
      "title": "Move up the last Protocol Combination while sorting endpoints",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/31",
      "state": "MERGED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This suggests moving up the first TCP IPv4 endpoint as well in the sorted list.\r\n\r\nFixes https://github.com/tfpauly/draft-happy-eyeballs-v3/issues/30.",
      "createdAt": "2023-11-04T09:57:51Z",
      "updatedAt": "2023-11-06T01:10:51Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "10e6501b99e548af0f9d637f1a941f661baa3fb9",
      "headRepository": "nidhijaju/draft-happy-eyeballs-v3",
      "headRefName": "sort-order",
      "headRefOid": "1000af83b06ba82a8270bfdf5a7849132fed39cf",
      "closedAt": "2023-11-06T01:10:50Z",
      "mergedAt": "2023-11-06T01:10:50Z",
      "mergedBy": "nidhijaju",
      "mergeCommit": {
        "oid": "a120bd4a4ea0325659bf35835c02ce7ac6a766cd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM5mKTF6",
          "commit": {
            "abbreviatedOid": "1000af8"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-05T12:26:28Z",
          "updatedAt": "2023-11-05T12:26:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 33,
      "id": "PR_kwDOKH7CuM5emMP1",
      "title": "The Well-Known Prefix MUST NOT be used to represent non-global IPv4 addresses, such as RFC1918",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/33",
      "state": "OPEN",
      "author": "momoka0122y",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "closes #32 \r\n\r\n",
      "createdAt": "2023-11-04T13:50:59Z",
      "updatedAt": "2023-11-07T08:57:59Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "a120bd4a4ea0325659bf35835c02ce7ac6a766cd",
      "headRepository": "momoka0122y/draft-happy-eyeballs-v3",
      "headRefName": "patch-3",
      "headRefOid": "90af2ef4f73a79c0874bbc411474960f470c4feb",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM5mJjGO",
          "commit": {
            "abbreviatedOid": "815143c"
          },
          "author": "momoka0122y",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-04T13:53:05Z",
          "updatedAt": "2023-11-04T13:53:12Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I also think this whole paragraph should be at the end of the section for readability.\r\n\r\nBe right before\r\n## Hostnames with Broken AAAA Records {#broken}",
              "createdAt": "2023-11-04T13:53:05Z",
              "updatedAt": "2023-11-04T13:53:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5mKOF5",
          "commit": {
            "abbreviatedOid": "815143c"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-05T10:21:11Z",
          "updatedAt": "2023-11-05T10:21:11Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "If rfc6052 already says this, why is it relevant for HEv3?",
              "createdAt": "2023-11-05T10:21:11Z",
              "updatedAt": "2023-11-05T10:21:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5mKQgt",
          "commit": {
            "abbreviatedOid": "815143c"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-05T11:24:28Z",
          "updatedAt": "2023-11-05T11:24:28Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I think it makes sense to point out the NAT requirement to tell the clients to not bother. I'd phrase it something like this:\r\n\r\n> Similarly, there are additional restrictions on the use of the well-known NAT64 prefix (see Section 3.1 of RFC 6052) so clients can skip NAT64 address synthesis in such cases that will be rejected by the NAT64 translator.",
              "createdAt": "2023-11-05T11:24:28Z",
              "updatedAt": "2023-11-05T11:24:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5mQ5nC",
          "commit": {
            "abbreviatedOid": "815143c"
          },
          "author": "momoka0122y",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T16:53:18Z",
          "updatedAt": "2023-11-06T16:53:18Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Great. Thank you. That text is better as we are talking of client implementation.\r\nIf moving the text down also seems reasonable please merge ;)",
              "createdAt": "2023-11-06T16:53:18Z",
              "updatedAt": "2023-11-06T16:53:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5mWShM",
          "commit": {
            "abbreviatedOid": "90af2ef"
          },
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-07T08:44:23Z",
          "updatedAt": "2023-11-07T08:57:59Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Not sure I fully understand the motivation for moving this down, but we can rearrange later editorially.",
              "createdAt": "2023-11-07T08:44:24Z",
              "updatedAt": "2023-11-07T08:57:59Z"
            },
            {
              "originalPosition": 18,
              "body": "Style nit: This probably needs to wrap with the rest of the document (this is superseded by the suggested comment, though, so no worries).",
              "createdAt": "2023-11-07T08:45:22Z",
              "updatedAt": "2023-11-07T08:57:59Z"
            },
            {
              "originalPosition": 18,
              "body": "I know this wording came from a previous comment, but perhaps something that would convey just the necessary bits would be something like: \r\n\r\n```suggestion\r\nNote that some IPv4 prefixes are scoped to a given host or network, such as\r\n0.0.0.0/8, 127.0.0.0/8, 169.254.0.0/16, and 255.255.255.255/32, and there are \r\nadditional restrictions on the use of the well-known NAT64 prefix (see \r\n{{Section 3.1 of !RFC6052}}), therefore NAT64 address synthesis might not be required.\r\n```",
              "createdAt": "2023-11-07T08:57:17Z",
              "updatedAt": "2023-11-07T09:08:06Z"
            }
          ]
        }
      ]
    },
    {
      "number": 38,
      "id": "PR_kwDOKH7CuM5kJC9b",
      "title": "Remove hint-only addresses after receiving A/AAAA",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/38",
      "state": "MERGED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes https://github.com/tfpauly/draft-happy-eyeballs-v3/issues/36.",
      "createdAt": "2024-01-16T04:12:56Z",
      "updatedAt": "2024-01-17T16:55:00Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "3c7c5fee5a1087435ac96b16b3aea98383eb15cb",
      "headRepository": "nidhijaju/draft-happy-eyeballs-v3",
      "headRefName": "remove-hint-only-addresses",
      "headRefOid": "98512377ee9438fe7e262b8fa6dd8de5721c9ae1",
      "closedAt": "2024-01-17T14:01:16Z",
      "mergedAt": "2024-01-17T14:01:16Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "dec12baf59ab9a25c421dbdc9d7545dd466d6420"
      },
      "comments": [
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "LGTM",
          "createdAt": "2024-01-17T16:54:59Z",
          "updatedAt": "2024-01-17T16:54:59Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM5suoJ1",
          "commit": {
            "abbreviatedOid": "4e6da29"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-16T16:51:28Z",
          "updatedAt": "2024-01-16T16:52:11Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nonce A and AAAA records are received, addresses received via SVCB hints\r\n```",
              "createdAt": "2024-01-16T16:51:29Z",
              "updatedAt": "2024-01-17T14:00:01Z"
            },
            {
              "originalPosition": 7,
              "body": "Should we say that they get _replaced_ by the A/AAAA answers? If they are the same answers, then we don't want to remove and not re-add, of course.",
              "createdAt": "2024-01-16T16:52:08Z",
              "updatedAt": "2024-01-16T16:52:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5s2kDs",
          "commit": {
            "abbreviatedOid": "4e6da29"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T01:41:17Z",
          "updatedAt": "2024-01-17T01:41:17Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I guess you meant \"once\"?",
              "createdAt": "2024-01-17T01:41:17Z",
              "updatedAt": "2024-01-17T01:41:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5s2lEn",
          "commit": {
            "abbreviatedOid": "4e6da29"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T01:42:58Z",
          "updatedAt": "2024-01-17T01:42:58Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I updated the wording a little to clarify we only remove the addresses that are hint-only. What do you think?",
              "createdAt": "2024-01-17T01:42:58Z",
              "updatedAt": "2024-01-17T01:42:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5s611U",
          "commit": {
            "abbreviatedOid": "9851237"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T14:00:14Z",
          "updatedAt": "2024-01-17T14:00:14Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Yes, fixed \ud83e\udd26\ud83c\udffb\u200d\u2642\ufe0f",
              "createdAt": "2024-01-17T14:00:14Z",
              "updatedAt": "2024-01-17T14:00:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM5s62U8",
          "commit": {
            "abbreviatedOid": "9851237"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks good!",
          "createdAt": "2024-01-17T14:01:08Z",
          "updatedAt": "2024-01-17T14:01:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 39,
      "id": "PR_kwDOKH7CuM5lHk66",
      "title": "Correct format and refer to draft-ietf-tls-svcb-ech",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/39",
      "state": "MERGED",
      "author": "bashi",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Applied Emacs' `M-x fill-region` for some paragraphs.",
      "createdAt": "2024-01-26T00:51:02Z",
      "updatedAt": "2024-01-29T20:52:14Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "dec12baf59ab9a25c421dbdc9d7545dd466d6420",
      "headRepository": "bashi/draft-happy-eyeballs-v3",
      "headRefName": "format",
      "headRefOid": "74a9971ae7143fd310774518395fe525f14415f6",
      "closedAt": "2024-01-26T10:05:40Z",
      "mergedAt": "2024-01-26T10:05:40Z",
      "mergedBy": "nidhijaju",
      "mergeCommit": {
        "oid": "d791aab3abbb8ff6936ffdb72c3f4f3263d97021"
      },
      "comments": [
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks for doing this. Note that it introduced a bug in the references (format is `I-D.ietf-....` not `I-D.draft-ietf-...`) and exposed another bug where we were referencing ECH somewhere instead of SVCB-ECH. So I just fixed both in c8bcb7836308a4a9038bbad7aa2944a074dd76b7.",
          "createdAt": "2024-01-26T21:43:36Z",
          "updatedAt": "2024-01-26T21:43:36Z"
        },
        {
          "author": "bashi",
          "authorAssociation": "COLLABORATOR",
          "body": "Sorry for the trouble and thank you for the fix!",
          "createdAt": "2024-01-27T11:37:53Z",
          "updatedAt": "2024-01-27T11:37:53Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "No worries!",
          "createdAt": "2024-01-29T20:52:12Z",
          "updatedAt": "2024-01-29T20:52:12Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM5t_teK",
          "commit": {
            "abbreviatedOid": "74a9971"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-26T10:05:31Z",
          "updatedAt": "2024-01-26T10:05:31Z",
          "comments": []
        }
      ]
    },
    {
      "number": 44,
      "id": "PR_kwDOKH7CuM5qBO6S",
      "title": "Preferring RFC8781 over RFC7050",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/44",
      "state": "MERGED",
      "author": "furry13",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The device SHOULD use PREF64 provided by the network, and only use RFC7050 of PREF64 is not available\r\n\r\ncloses #43",
      "createdAt": "2024-03-18T23:17:19Z",
      "updatedAt": "2024-03-19T04:06:10Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "c8bcb7836308a4a9038bbad7aa2944a074dd76b7",
      "headRepository": "furry13/draft-happy-eyeballs-v3",
      "headRefName": "pref64",
      "headRefOid": "10e8e8120061c2ebe220070f74f288d7f9558343",
      "closedAt": "2024-03-19T04:06:10Z",
      "mergedAt": "2024-03-19T04:06:10Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "c9099a35ba20a6bd59a6a6ed998bd776acdf719e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM5z6Vt8",
          "commit": {
            "abbreviatedOid": "10e8e81"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Great!",
          "createdAt": "2024-03-19T00:34:27Z",
          "updatedAt": "2024-03-19T00:34:27Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM5z6Ycj",
          "commit": {
            "abbreviatedOid": "10e8e81"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "lgtm, thank you!",
          "createdAt": "2024-03-19T00:37:47Z",
          "updatedAt": "2024-03-19T00:37:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM5z6pFX",
          "commit": {
            "abbreviatedOid": "10e8e81"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Great! HEv2 was published before PREF64, glad we have an even better solution for HEv3",
          "createdAt": "2024-03-19T01:04:04Z",
          "updatedAt": "2024-03-19T01:04:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 45,
      "id": "PR_kwDOKH7CuM5sUCkU",
      "title": "Editorial updates to charter",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/45",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Editorial updates to charter\n\nMostly minor wording tweaks, a few updates.",
      "createdAt": "2024-04-11T03:29:15Z",
      "updatedAt": "2024-04-11T04:01:09Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "c2b41a9fda81e8abd5448e693c3534f1bf033c82",
      "headRepository": "ekinnear/draft-happy-eyeballs-v3",
      "headRefName": "ek/charter_editorial",
      "headRefOid": "d5582f6f57ea91508397507664a9244071673cc7",
      "closedAt": "2024-04-11T04:01:08Z",
      "mergedAt": "2024-04-11T04:01:08Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "4a9c34f4ebf72524c840765c0f7f5dfcc445e342"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM52znwf",
          "commit": {
            "abbreviatedOid": "d5582f6"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-04-11T04:01:04Z",
          "updatedAt": "2024-04-11T04:01:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 48,
      "id": "PR_kwDOKH7CuM5th8zs",
      "title": "Remove unclear deliverable from charter",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/48",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #46",
      "createdAt": "2024-04-23T22:49:51Z",
      "updatedAt": "2024-07-12T22:19:15Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "757ed4e8c5482ca93379bb20b8c4a948855c2543",
      "headRepository": "ekinnear/draft-happy-eyeballs-v3",
      "headRefName": "ek/charter_remove_unclear",
      "headRefOid": "c3ee8e987e585e9fbdb60bd006e5ac76f5f28695",
      "closedAt": "2024-07-12T22:19:15Z",
      "mergedAt": "2024-07-12T22:19:15Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "5a792e2773d93614d48666d29475da1eb11d8c47"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM54T0bT",
          "commit": {
            "abbreviatedOid": "c3ee8e9"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-04-23T22:51:30Z",
          "updatedAt": "2024-04-23T22:51:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM54UCX6",
          "commit": {
            "abbreviatedOid": "c3ee8e9"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-04-23T23:54:09Z",
          "updatedAt": "2024-04-23T23:54:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 50,
      "id": "PR_kwDOKH7CuM51tzNO",
      "title": "Clarify out-of-scope",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/50",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "discuss",
        "charter"
      ],
      "body": "Closes #49",
      "createdAt": "2024-07-18T02:46:22Z",
      "updatedAt": "2024-07-21T17:56:47Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "5a792e2773d93614d48666d29475da1eb11d8c47",
      "headRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "headRefName": "tfpauly-patch-2",
      "headRefOid": "7f538180c860116bf33f771b346f46c055a09615",
      "closedAt": "2024-07-21T17:56:46Z",
      "mergedAt": "2024-07-21T17:56:46Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "65673daf11b65ff179d76fd5c52441cfd7315f22"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6CPE-i",
          "commit": {
            "abbreviatedOid": "98001eb"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Content looks good to me, thank you! :)",
          "createdAt": "2024-07-18T07:45:35Z",
          "updatedAt": "2024-07-18T07:58:10Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nclient that starts with a fully-qualified domain name (FQDN) and wants to\r\nobtain a single established connection to a single server IP address on a\r\n```\r\nNo strong opinion, but \"end up with\" just sounded a bit weird.",
              "createdAt": "2024-07-18T07:45:35Z",
              "updatedAt": "2024-07-18T07:58:10Z"
            },
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nnetworks to choose between or to use simultaneously, or could deal with pools of\r\n```\r\nNot totally sure, but I think the added words add clarity to the \"or\"s.",
              "createdAt": "2024-07-18T07:48:16Z",
              "updatedAt": "2024-07-18T07:58:10Z"
            },
            {
              "originalPosition": 13,
              "body": "I think \"expansions\" is fine, but wondering if \"circumstances\" or \"situations\" or some other word is better?",
              "createdAt": "2024-07-18T07:57:00Z",
              "updatedAt": "2024-07-18T07:58:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6CUf5R",
          "commit": {
            "abbreviatedOid": "98001eb"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-18T16:53:53Z",
          "updatedAt": "2024-07-18T16:53:54Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "+1. I also don't love the personification (the use of the word \"wants\"). How about something like:\r\n\r\n```\r\nThe working group will focus on a connection establishment algorithm that\r\nruns on clients. The algorithm takes as input a fully-qualified domain name\r\n(FQDN), and outputs a single established connection to a single server IP\r\naddress on a single network.\r\n```",
              "createdAt": "2024-07-18T16:53:54Z",
              "updatedAt": "2024-07-18T16:53:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6CWn2x",
          "commit": {
            "abbreviatedOid": "98001eb"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-18T21:46:29Z",
          "updatedAt": "2024-07-18T21:46:30Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nThe working group will focus on a connection establishment algorithm that\r\nruns on clients. The algorithm takes as input a fully-qualified domain name\r\n(FQDN), and results in a single established connection to a single server IP\r\naddress on a single network. While the algorithm could apply to scenarios with multiple\r\n```",
              "createdAt": "2024-07-18T21:46:29Z",
              "updatedAt": "2024-07-18T21:46:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6CWoBp",
          "commit": {
            "abbreviatedOid": "98001eb"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-18T21:46:52Z",
          "updatedAt": "2024-07-18T21:46:52Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Cool, took this suggestion with one minor edit!",
              "createdAt": "2024-07-18T21:46:52Z",
              "updatedAt": "2024-07-18T21:46:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6CWoeJ",
          "commit": {
            "abbreviatedOid": "08417ab"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-18T21:47:52Z",
          "updatedAt": "2024-07-18T21:47:53Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Maybe scenarios:\r\n```suggestion\r\nmultiple connections, such scenarios are out of scope for the working group\r\n```",
              "createdAt": "2024-07-18T21:47:52Z",
              "updatedAt": "2024-07-18T21:47:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6CWon2",
          "commit": {
            "abbreviatedOid": "44647f1"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-18T21:48:14Z",
          "updatedAt": "2024-07-18T21:48:15Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\naddress on a single network. While the algorithm could apply to scenarios with\r\nmultiple networks to choose between or to use simultaneously, or could deal\r\nwith pools of multiple connections, such scenarios are out of scope for the\r\nworking group deliverables.\r\n\r\n```",
              "createdAt": "2024-07-18T21:48:14Z",
              "updatedAt": "2024-07-18T21:48:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6CXDS_",
          "commit": {
            "abbreviatedOid": "7f53818"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-19T00:06:11Z",
          "updatedAt": "2024-07-19T00:06:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 53,
      "id": "PR_kwDOKH7CuM54wdiz",
      "title": "Charter updates based on side meeting",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/53",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "charter"
      ],
      "body": "",
      "createdAt": "2024-08-19T16:31:30Z",
      "updatedAt": "2024-08-20T15:50:47Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "65673daf11b65ff179d76fd5c52441cfd7315f22",
      "headRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "headRefName": "tfpauly-patch-3",
      "headRefOid": "d457af0c96d3559a452e5e4c7ba371c98a37f0a6",
      "closedAt": "2024-08-20T15:50:47Z",
      "mergedAt": "2024-08-20T15:50:47Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "a4806cff75278d62d9132e07e1d3942260a566cd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6F4cNx",
          "commit": {
            "abbreviatedOid": "daf1866"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Overall LGTM. Minor changes inline",
          "createdAt": "2024-08-19T18:08:43Z",
          "updatedAt": "2024-08-19T18:13:39Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "I personally prefer HAPPY (because it's less silly) but won't object if you feel strongly",
              "createdAt": "2024-08-19T18:08:44Z",
              "updatedAt": "2024-08-19T18:13:39Z"
            },
            {
              "originalPosition": 40,
              "body": "\"actual deployed\" sounds weird to me. \"actually deployed\" would be better, but honestly deployed is sufficiently clear - all deployed networks are actual networks\r\n\r\n```suggestion\r\nperformance data measured in deployed networks. Although the algorithm\r\n```",
              "createdAt": "2024-08-19T18:11:11Z",
              "updatedAt": "2024-08-19T18:13:39Z"
            },
            {
              "originalPosition": 54,
              "body": "```suggestion\r\nand produce reports that are actionable.\r\n```",
              "createdAt": "2024-08-19T18:13:18Z",
              "updatedAt": "2024-08-19T18:13:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6F6nuu",
          "commit": {
            "abbreviatedOid": "daf1866"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Mostly lgtm, just a few comments/questions",
          "createdAt": "2024-08-20T00:04:55Z",
          "updatedAt": "2024-08-20T04:53:48Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "+1",
              "createdAt": "2024-08-20T00:04:55Z",
              "updatedAt": "2024-08-20T04:53:48Z"
            },
            {
              "originalPosition": 41,
              "body": "No strong opinion, but I feel like \"generally applicable\" reads better\r\n```suggestion\r\nneeds to be generally applicable, platform-specific or deployment-specific\r\n```",
              "createdAt": "2024-08-20T04:42:40Z",
              "updatedAt": "2024-08-20T04:53:48Z"
            },
            {
              "originalPosition": 43,
              "body": "Maybe we don't need the words in the middle?\r\n```suggestion\r\nshould have tunable input values that can reflect\r\n```",
              "createdAt": "2024-08-20T04:44:04Z",
              "updatedAt": "2024-08-20T04:53:48Z"
            },
            {
              "originalPosition": 45,
              "body": "optional nit:\r\n```suggestion\r\ncan be based on working group consensus for standard behavior\r\n```",
              "createdAt": "2024-08-20T04:46:48Z",
              "updatedAt": "2024-08-20T04:53:48Z"
            },
            {
              "originalPosition": 74,
              "body": "Maybe I missed something, but I thought we agreed to have a wiki page or something to document this information (i.e. the previous deliverable)?",
              "createdAt": "2024-08-20T04:48:38Z",
              "updatedAt": "2024-08-20T04:53:48Z"
            },
            {
              "originalPosition": 50,
              "body": "nit:\r\n```suggestion\r\non the detection of misconfigured deployments and may provide recommendations on\r\n```",
              "createdAt": "2024-08-20T04:49:27Z",
              "updatedAt": "2024-08-20T04:53:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6GA5az",
          "commit": {
            "abbreviatedOid": "daf1866"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-20T15:42:46Z",
          "updatedAt": "2024-08-20T15:42:46Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "Okay, I can revert that",
              "createdAt": "2024-08-20T15:42:46Z",
              "updatedAt": "2024-08-20T15:42:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6GA52l",
          "commit": {
            "abbreviatedOid": "d8919d5"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-20T15:43:32Z",
          "updatedAt": "2024-08-20T15:43:32Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "```suggestion\r\n## HAPPY WG (Heuristics and Algorithms to Prioritize Protocol deploYment)\r\n```",
              "createdAt": "2024-08-20T15:43:32Z",
              "updatedAt": "2024-08-20T15:43:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6GA59x",
          "commit": {
            "abbreviatedOid": "d8919d5"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-20T15:43:43Z",
          "updatedAt": "2024-08-20T15:43:43Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\nThe HAPPY working group will deliver an updated version of the Happy Eyeballs \r\n```",
              "createdAt": "2024-08-20T15:43:43Z",
              "updatedAt": "2024-08-20T15:43:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6GA6CO",
          "commit": {
            "abbreviatedOid": "d8919d5"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-20T15:43:50Z",
          "updatedAt": "2024-08-20T15:43:50Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "```suggestion\r\nHAPPY working group will review its work with groups such as V6OPS, TSVWG, QUIC, \r\n```",
              "createdAt": "2024-08-20T15:43:50Z",
              "updatedAt": "2024-08-20T15:43:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6GA6mc",
          "commit": {
            "abbreviatedOid": "d457af0"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-20T15:44:46Z",
          "updatedAt": "2024-08-20T15:44:46Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "I view the previous bullet as \"the measurements that back up the algorithm\", and this one as \"reporting brokenness\"",
              "createdAt": "2024-08-20T15:44:46Z",
              "updatedAt": "2024-08-20T15:44:46Z"
            }
          ]
        }
      ]
    },
    {
      "number": 54,
      "id": "PR_kwDOKH7CuM55lWO0",
      "title": "nit: 'private' to 'privacy-preserving'",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/54",
      "state": "MERGED",
      "author": "danwing",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-08-27T14:28:01Z",
      "updatedAt": "2024-08-27T23:00:50Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "a4806cff75278d62d9132e07e1d3942260a566cd",
      "headRepository": "danwing/draft-happy-eyeballs-v3",
      "headRefName": "patch-1",
      "headRefOid": "76ef4b3baaabb21120657315d9052c9dc8d2c6f6",
      "closedAt": "2024-08-27T23:00:50Z",
      "mergedAt": "2024-08-27T23:00:50Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "de7541e063cc3f875e2aabc2750a8f9edffd7adf"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6G7HkS",
          "commit": {
            "abbreviatedOid": "76ef4b3"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-27T14:50:12Z",
          "updatedAt": "2024-08-27T14:50:12Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM6G8jQS",
          "commit": {
            "abbreviatedOid": "76ef4b3"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-27T17:07:08Z",
          "updatedAt": "2024-08-27T17:07:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM6G8qHf",
          "commit": {
            "abbreviatedOid": "76ef4b3"
          },
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-27T17:21:26Z",
          "updatedAt": "2024-08-27T17:21:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 55,
      "id": "PR_kwDOKH7CuM55sNgd",
      "title": "A nit: HE helps misconfigured clients too, not just networks or servers",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/55",
      "state": "MERGED",
      "author": "furry13",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "",
      "createdAt": "2024-08-28T10:40:06Z",
      "updatedAt": "2024-09-17T15:09:17Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "de7541e063cc3f875e2aabc2750a8f9edffd7adf",
      "headRepository": "furry13/draft-happy-eyeballs-v3",
      "headRefName": "nit-aug2024",
      "headRefOid": "432c683565f637b23379f893be231ec4006e2946",
      "closedAt": "2024-09-17T15:09:16Z",
      "mergedAt": "2024-09-17T15:09:16Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "88d1d2c4e2248b803d3ce3fcfbbd77a81d4405ba"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6HDk8v",
          "commit": {
            "abbreviatedOid": "432c683"
          },
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-28T10:40:55Z",
          "updatedAt": "2024-08-28T10:40:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM6HHRIA",
          "commit": {
            "abbreviatedOid": "432c683"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-28T17:02:35Z",
          "updatedAt": "2024-08-28T17:02:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM6HJjFV",
          "commit": {
            "abbreviatedOid": "432c683"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-28T23:31:54Z",
          "updatedAt": "2024-08-28T23:31:54Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM6JsK57",
          "commit": {
            "abbreviatedOid": "432c683"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-17T15:09:08Z",
          "updatedAt": "2024-09-17T15:09:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 56,
      "id": "PR_kwDOKH7CuM6A6ffb",
      "title": "Add charter text about HE-like uses",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/56",
      "state": "MERGED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "Fixes https://github.com/tfpauly/draft-happy-eyeballs-v3/issues/51.",
      "createdAt": "2024-11-05T11:04:35Z",
      "updatedAt": "2024-11-05T13:41:49Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "88d1d2c4e2248b803d3ce3fcfbbd77a81d4405ba",
      "headRepository": "nidhijaju/draft-happy-eyeballs-v3",
      "headRefName": "HE-like-uses-inventory",
      "headRefOid": "2d7b1ae95db0b9b570faaf58a011e7de193efe59",
      "closedAt": "2024-11-05T13:41:48Z",
      "mergedAt": "2024-11-05T13:41:48Z",
      "mergedBy": "nidhijaju",
      "mergeCommit": {
        "oid": "de5d6e4f75451f1f89847487792708d7153629fb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6P9yyQ",
          "commit": {
            "abbreviatedOid": "f3057dc"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-05T11:17:28Z",
          "updatedAt": "2024-11-05T11:18:12Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nThere have been a number of documents in which similar Happy Eyeballs-like racing\r\n```",
              "createdAt": "2024-11-05T11:17:28Z",
              "updatedAt": "2024-11-05T11:18:12Z"
            },
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nconcepts are also in scope, which can be included as part of the Happy Eyeballs Version 3 main deliverable.\r\n```",
              "createdAt": "2024-11-05T11:18:09Z",
              "updatedAt": "2024-11-05T11:18:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6P-sOp",
          "commit": {
            "abbreviatedOid": "2d7b1ae"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-05T13:08:07Z",
          "updatedAt": "2024-11-05T13:08:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM6P-5mq",
          "commit": {
            "abbreviatedOid": "2d7b1ae"
          },
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-05T13:27:24Z",
          "updatedAt": "2024-11-05T13:27:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM6P-83z",
          "commit": {
            "abbreviatedOid": "2d7b1ae"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-05T13:32:47Z",
          "updatedAt": "2024-11-05T13:32:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 57,
      "id": "PR_kwDOKH7CuM6BB4Rm",
      "title": "Nit: Clients can be misconfigured",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/57",
      "state": "MERGED",
      "author": "furry13",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "",
      "createdAt": "2024-11-06T09:42:43Z",
      "updatedAt": "2024-11-06T17:24:46Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "de5d6e4f75451f1f89847487792708d7153629fb",
      "headRepository": "furry13/draft-happy-eyeballs-v3",
      "headRefName": "nov2024",
      "headRefOid": "f305bbd9fa49b476c0765eb3c9dd775f915154a6",
      "closedAt": "2024-11-06T17:24:46Z",
      "mergedAt": "2024-11-06T17:24:46Z",
      "mergedBy": "nidhijaju",
      "mergeCommit": {
        "oid": "801290ed0f4eef3fda72d055ffa958ff9a915068"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6QHBJ7",
          "commit": {
            "abbreviatedOid": "f305bbd"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-06T10:00:51Z",
          "updatedAt": "2024-11-06T10:00:51Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM6QHBof",
          "commit": {
            "abbreviatedOid": "f305bbd"
          },
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-06T10:01:41Z",
          "updatedAt": "2024-11-06T10:01:41Z",
          "comments": []
        }
      ]
    },
    {
      "number": 60,
      "id": "PR_kwDOKH7CuM6BCQSE",
      "title": "Clarify target type of reporting errors document",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/60",
      "state": "MERGED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "Fixes #58.",
      "createdAt": "2024-11-06T10:29:20Z",
      "updatedAt": "2024-11-07T09:53:20Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "de5d6e4f75451f1f89847487792708d7153629fb",
      "headRepository": "nidhijaju/draft-happy-eyeballs-v3",
      "headRefName": "impact-document-type",
      "headRefOid": "abb3e77f7fa597d569c392c968af53b3e0865dc0",
      "closedAt": "2024-11-07T09:53:20Z",
      "mergedAt": "2024-11-07T09:53:20Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "157ba865376d01fd74ab1d2e972f312175f0a842"
      },
      "comments": [
        {
          "author": "bashi",
          "authorAssociation": "COLLABORATOR",
          "body": "Oh sorry I didn't mean to approve this one. Please ignore this.",
          "createdAt": "2024-11-06T10:45:12Z",
          "updatedAt": "2024-11-06T10:45:12Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6QHpl_",
          "commit": {
            "abbreviatedOid": "abb3e77"
          },
          "author": "bashi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-06T10:43:35Z",
          "updatedAt": "2024-11-06T10:43:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM6QH4BX",
          "commit": {
            "abbreviatedOid": "abb3e77"
          },
          "author": "zaheduzzaman",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "LGTM",
          "createdAt": "2024-11-06T11:10:47Z",
          "updatedAt": "2024-11-06T11:10:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM6QJhZ5",
          "commit": {
            "abbreviatedOid": "abb3e77"
          },
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-06T14:21:39Z",
          "updatedAt": "2024-11-06T14:21:39Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM6QRVWK",
          "commit": {
            "abbreviatedOid": "abb3e77"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-07T09:52:43Z",
          "updatedAt": "2024-11-07T09:52:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 65,
      "id": "PR_kwDOKH7CuM6BEhUm",
      "title": "Remove deliverable for documenting effectiveness",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/65",
      "state": "MERGED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "Fixes https://github.com/tfpauly/draft-happy-eyeballs-v3/issues/59.",
      "createdAt": "2024-11-06T15:15:58Z",
      "updatedAt": "2024-11-07T09:54:43Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "157ba865376d01fd74ab1d2e972f312175f0a842",
      "headRepository": "nidhijaju/draft-happy-eyeballs-v3",
      "headRefName": "move-effectiveness-text",
      "headRefOid": "4ef211e123c78a9bdb486c1c8992b14a00487cb4",
      "closedAt": "2024-11-07T09:54:42Z",
      "mergedAt": "2024-11-07T09:54:42Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "50dce53b91922f38a9c8e4299641d6e3cdfb2e6c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6QKVTo",
          "commit": {
            "abbreviatedOid": "4f4a418"
          },
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-06T15:16:51Z",
          "updatedAt": "2024-11-06T15:16:51Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM6QLtO7",
          "commit": {
            "abbreviatedOid": "4f4a418"
          },
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-06T17:24:40Z",
          "updatedAt": "2024-11-06T17:24:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM6QRWyr",
          "commit": {
            "abbreviatedOid": "4ef211e"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-07T09:54:24Z",
          "updatedAt": "2024-11-07T09:54:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 66,
      "id": "PR_kwDOKH7CuM6BE9Ui",
      "title": "Specify section 4.3 for RFC 9132 reference",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/66",
      "state": "MERGED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "Fixes https://github.com/tfpauly/draft-happy-eyeballs-v3/issues/61.",
      "createdAt": "2024-11-06T16:03:44Z",
      "updatedAt": "2024-11-07T09:55:16Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "de5d6e4f75451f1f89847487792708d7153629fb",
      "headRepository": "nidhijaju/draft-happy-eyeballs-v3",
      "headRefName": "clarify-rfc9132",
      "headRefOid": "c7fa509909d7a94d8c89281fa683c43eb54d4407",
      "closedAt": "2024-11-07T09:55:15Z",
      "mergedAt": "2024-11-07T09:55:15Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "633625d2a5c120e176188d9353780c105771fb63"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6QLt7N",
          "commit": {
            "abbreviatedOid": "e79a320"
          },
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-06T17:26:08Z",
          "updatedAt": "2024-11-06T17:26:12Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Perhaps:\r\n```suggestion\r\nstrategies have been specified, including in Section 4.3 of RFC 9132. An inventory\r\n```",
              "createdAt": "2024-11-06T17:26:08Z",
              "updatedAt": "2024-11-06T17:26:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6QRXNU",
          "commit": {
            "abbreviatedOid": "c7fa509"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-07T09:55:08Z",
          "updatedAt": "2024-11-07T09:55:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 67,
      "id": "PR_kwDOKH7CuM6BFwSU",
      "title": "Expand on error reporting section in the charter.",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/67",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "Expand on error reporting section in the charter.\n\nFixes #63",
      "createdAt": "2024-11-06T17:48:39Z",
      "updatedAt": "2024-11-07T16:47:18Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "801290ed0f4eef3fda72d055ffa958ff9a915068",
      "headRepository": "ekinnear/draft-happy-eyeballs-v3",
      "headRefName": "ek/charter_error_reporting",
      "headRefOid": "268c59b5b2ba483d0a2b450ec8dc6a54fbf1f76f",
      "closedAt": "2024-11-07T09:57:28Z",
      "mergedAt": "2024-11-07T09:57:28Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "f8685eac684f5a76fdec41f725061a1785757860"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6QRYBZ",
          "commit": {
            "abbreviatedOid": "0251ea6"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-07T09:56:33Z",
          "updatedAt": "2024-11-07T09:56:40Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\non the detection of misconfigured deployments, such as networks with configured\r\n(but non-functional) IPv6 connectivity. It may provide recommendations for methods\r\n```",
              "createdAt": "2024-11-07T09:56:33Z",
              "updatedAt": "2024-11-07T09:56:40Z"
            }
          ]
        }
      ]
    },
    {
      "number": 68,
      "id": "PR_kwDOKH7CuM6BF1I0",
      "title": "Clarify \"multiple networks to choose between\"",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/68",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "Clarify \"multiple networks to choose between\"\n\nFixes #62",
      "createdAt": "2024-11-06T17:59:15Z",
      "updatedAt": "2025-02-17T01:27:58Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "801290ed0f4eef3fda72d055ffa958ff9a915068",
      "headRepository": "ekinnear/draft-happy-eyeballs-v3",
      "headRefName": "ek/charter_multiple_networks",
      "headRefOid": "d0c6733994fb51c38b0aa199a60aab84a33fc542",
      "closedAt": "2025-02-17T01:27:57Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "body": "I guess since the charter has been published, we don't need this anymore.",
          "createdAt": "2025-02-17T01:27:57Z",
          "updatedAt": "2025-02-17T01:27:57Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6QRZXG",
          "commit": {
            "abbreviatedOid": "d0c6733"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I'm fine with this change, but let's see if it matches what @furry13 is getting at",
          "createdAt": "2024-11-07T09:58:48Z",
          "updatedAt": "2024-11-07T09:58:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 72,
      "id": "PR_kwDOKH7CuM6IhWLk",
      "title": "Charter review from IAB",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/72",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "Updates based on Matthew Bocci's charter review, for the IAB review",
      "createdAt": "2025-01-21T16:54:53Z",
      "updatedAt": "2025-01-23T01:09:04Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "f8685eac684f5a76fdec41f725061a1785757860",
      "headRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "headRefName": "tfpauly-patch-4",
      "headRefOid": "b1e602cfc0d1fd5f03f8099d3362b10c978e8cba",
      "closedAt": "2025-01-23T01:09:04Z",
      "mergedAt": "2025-01-23T01:09:04Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "7ee6052e18118a85a6382f0ef73a935490a5a42b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6Y7aGv",
          "commit": {
            "abbreviatedOid": "b1e602c"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-21T21:17:22Z",
          "updatedAt": "2025-01-21T21:17:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM6Y8hNm",
          "commit": {
            "abbreviatedOid": "b1e602c"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-22T01:25:38Z",
          "updatedAt": "2025-01-22T01:25:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM6Y_kDD",
          "commit": {
            "abbreviatedOid": "b1e602c"
          },
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-22T10:25:52Z",
          "updatedAt": "2025-01-22T10:25:52Z",
          "comments": []
        }
      ]
    },
    {
      "number": 73,
      "id": "PR_kwDOKH7CuM6ItBri",
      "title": "Make charter more concise",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/73",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "Pass at making the charter more concise, without modifying content.",
      "createdAt": "2025-01-23T03:17:34Z",
      "updatedAt": "2025-01-23T22:35:33Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "7ee6052e18118a85a6382f0ef73a935490a5a42b",
      "headRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "headRefName": "tfpauly-patch-5",
      "headRefOid": "588437cc1ecdeabe0e876b0c4d35d9f567e3cab1",
      "closedAt": "2025-01-23T15:26:20Z",
      "mergedAt": "2025-01-23T15:26:20Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "12792a8c60fc482501d24da095d83b10a1ae2377"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah, I thought about that, but figured it was okay to drop the line. We mention later that we need to update to not just handle TCP, so it is still in there in another form. ",
          "createdAt": "2025-01-23T05:46:47Z",
          "updatedAt": "2025-01-23T05:46:47Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6ZHMlR",
          "commit": {
            "abbreviatedOid": "d606771"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Lgtm! Not sure if we want to still mention that v2 focused on TCP, but no strong opinions. I guess people already know that.",
          "createdAt": "2025-01-23T03:46:18Z",
          "updatedAt": "2025-01-23T03:46:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM6ZIyK3",
          "commit": {
            "abbreviatedOid": "d606771"
          },
          "author": "zaheduzzaman",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-23T08:50:07Z",
          "updatedAt": "2025-01-23T08:50:08Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "If this is not a separate algorithm, then I would suggest to move this paragraph up and combine with the part where we talk about V3 algorithm.",
              "createdAt": "2025-01-23T08:50:08Z",
              "updatedAt": "2025-01-23T08:50:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6ZI0-B",
          "commit": {
            "abbreviatedOid": "d606771"
          },
          "author": "zaheduzzaman",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-23T08:54:50Z",
          "updatedAt": "2025-01-23T08:54:51Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "This I think we can ommit this paragraph from the charter. Review of such algorithms should be a natural process while we are developing new algorithms and may or may not be considered for the new algorihm or can be part of motivations. We don't need this part of the charter as it is natural to do that.",
              "createdAt": "2025-01-23T08:54:51Z",
              "updatedAt": "2025-01-23T08:54:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6ZMSjX",
          "commit": {
            "abbreviatedOid": "d606771"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-23T15:06:29Z",
          "updatedAt": "2025-01-23T15:06:30Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "Sure, we can remove this",
              "createdAt": "2025-01-23T15:06:29Z",
              "updatedAt": "2025-01-23T15:06:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6ZMUuO",
          "commit": {
            "abbreviatedOid": "b7e433d"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-23T15:09:34Z",
          "updatedAt": "2025-01-23T15:09:34Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "It is the same algorithm, but the point here is about scoping. I'll rephrase.",
              "createdAt": "2025-01-23T15:09:34Z",
              "updatedAt": "2025-01-23T15:09:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6ZMV6n",
          "commit": {
            "abbreviatedOid": "d606771"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-23T15:11:03Z",
          "updatedAt": "2025-01-23T15:11:03Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "Done!",
              "createdAt": "2025-01-23T15:11:03Z",
              "updatedAt": "2025-01-23T15:11:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6ZMbEO",
          "commit": {
            "abbreviatedOid": "588437c"
          },
          "author": "zaheduzzaman",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "Looks much better to me.",
          "createdAt": "2025-01-23T15:17:59Z",
          "updatedAt": "2025-01-23T15:17:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM6ZQPnt",
          "commit": {
            "abbreviatedOid": "588437c"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "LGTM",
          "createdAt": "2025-01-23T22:35:33Z",
          "updatedAt": "2025-01-23T22:35:33Z",
          "comments": []
        }
      ]
    },
    {
      "number": 76,
      "id": "PR_kwDOKH7CuM6OQOGh",
      "title": "Mark as standards track",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/76",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Closes #75",
      "createdAt": "2025-03-12T00:31:53Z",
      "updatedAt": "2025-03-12T03:11:30Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "4636712ccebd446800dc6b661328ba392ce92f39",
      "headRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "headRefName": "tfpauly-patch-6",
      "headRefOid": "f8ff5a0a8116517c3056f88ee07174f84b57da30",
      "closedAt": "2025-03-12T03:11:29Z",
      "mergedAt": "2025-03-12T03:11:29Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "008aa317dd85c39895fb0df072968f95fb3496e8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6fiESj",
          "commit": {
            "abbreviatedOid": "f8ff5a0"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-12T00:32:49Z",
          "updatedAt": "2025-03-12T00:32:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM6fiw3M",
          "commit": {
            "abbreviatedOid": "f8ff5a0"
          },
          "author": "bashi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-12T02:36:09Z",
          "updatedAt": "2025-03-12T02:36:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 78,
      "id": "PR_kwDOKH7CuM6cAiR7",
      "title": "Add explicit mention of IPv4 addresses from A records in Section 8.1",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/78",
      "state": "MERGED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/20.",
      "createdAt": "2025-06-25T08:20:52Z",
      "updatedAt": "2025-06-27T00:00:07Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "3275dd8993b89544a7680dd6febce196623b5792",
      "headRepository": "nidhijaju/draft-happy-eyeballs-v3",
      "headRefName": "address-translation",
      "headRefOid": "8ebb5afff8bf63bb7cc7a6eba08d09f14f9f8a12",
      "closedAt": "2025-06-26T14:41:19Z",
      "mergedAt": "2025-06-26T14:41:19Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "3669c5ba926c8cb39f46a13f668dd50d9ce0c22a"
      },
      "comments": [
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "LGTM",
          "createdAt": "2025-06-27T00:00:07Z",
          "updatedAt": "2025-06-27T00:00:07Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6wWGiC",
          "commit": {
            "abbreviatedOid": "f9af05d"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-25T15:06:37Z",
          "updatedAt": "2025-06-25T15:06:37Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I guess it's a bit awkward to have both \"A records\" and \"SVCB RRs\". Can we be consistent?",
              "createdAt": "2025-06-25T15:06:37Z",
              "updatedAt": "2025-06-25T15:06:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6wdSFa",
          "commit": {
            "abbreviatedOid": "f9af05d"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-26T03:58:06Z",
          "updatedAt": "2025-06-26T03:58:06Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Updated, so both say records now.",
              "createdAt": "2025-06-26T03:58:06Z",
              "updatedAt": "2025-06-26T03:58:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6wkolX",
          "commit": {
            "abbreviatedOid": "8ebb5af"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-06-26T14:41:14Z",
          "updatedAt": "2025-06-26T14:41:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 79,
      "id": "PR_kwDOKH7CuM6cN00F",
      "title": "Update language around responses and records",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/79",
      "state": "MERGED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/37.",
      "createdAt": "2025-06-26T11:04:16Z",
      "updatedAt": "2025-07-02T23:42:59Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "bb59f12ad589a890244892e2137a55eed9ccf002",
      "headRepository": "nidhijaju/draft-happy-eyeballs-v3",
      "headRefName": "ambiguous-aaaa",
      "headRefOid": "26480196a113ba2b0632914dad2248d568620cde",
      "closedAt": "2025-07-02T23:42:58Z",
      "mergedAt": "2025-07-02T23:42:58Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "b42cf39ab1f39bb5e7a0952e09c2e97df1944959"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6wrUEx",
          "commit": {
            "abbreviatedOid": "f350712"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-06-26T23:57:11Z",
          "updatedAt": "2025-06-26T23:57:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM6xrX6u",
          "commit": {
            "abbreviatedOid": "2648019"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-02T23:42:52Z",
          "updatedAt": "2025-07-02T23:42:52Z",
          "comments": []
        }
      ]
    },
    {
      "number": 80,
      "id": "PR_kwDOKH7CuM6coJL5",
      "title": "Update reference to RFC6724 for Source Address Selection",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/80",
      "state": "MERGED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/34.",
      "createdAt": "2025-06-30T05:04:17Z",
      "updatedAt": "2025-06-30T23:51:35Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "bb59f12ad589a890244892e2137a55eed9ccf002",
      "headRepository": "nidhijaju/draft-happy-eyeballs-v3",
      "headRefName": "6724-update-ref",
      "headRefOid": "ebe938fb464e201325e404674d976df9023ef40d",
      "closedAt": "2025-06-30T23:51:34Z",
      "mergedAt": "2025-06-30T23:51:34Z",
      "mergedBy": "nidhijaju",
      "mergeCommit": {
        "oid": "a3b71b43b0417e1b8ba45ead6295e07a43236950"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6xMNmP",
          "commit": {
            "abbreviatedOid": "ebe938f"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-06-30T21:19:02Z",
          "updatedAt": "2025-06-30T21:19:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 81,
      "id": "PR_kwDOKH7CuM6czZns",
      "title": "Support IPv6-mostly networks",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/81",
      "state": "MERGED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Took a pass at adding some text to support IPv6-mostly networks, open to any feedback and changes.\r\n\r\nCloses https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/41.",
      "createdAt": "2025-07-01T03:12:05Z",
      "updatedAt": "2025-07-03T18:54:58Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "b42cf39ab1f39bb5e7a0952e09c2e97df1944959",
      "headRepository": "nidhijaju/draft-happy-eyeballs-v3",
      "headRefName": "v6-mostly",
      "headRefOid": "5a056ae865656befc1347f8323a2b2bb69ecedd1",
      "closedAt": "2025-07-03T18:54:58Z",
      "mergedAt": "2025-07-03T18:54:58Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "e4bd8d197e7ea1685cdd338d8402a698200d942d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6xqtjX",
          "commit": {
            "abbreviatedOid": "e2e72fe"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Overall this LGTM",
          "createdAt": "2025-07-02T22:04:00Z",
          "updatedAt": "2025-07-02T22:12:27Z",
          "comments": [
            {
              "originalPosition": 98,
              "body": "Another option is that if PREF64 is not available, then the client should use RFC7050 to find the NAT64 prefix, and then still do local synthesis. That has the advantage of being more aligned with the VPN subsection below",
              "createdAt": "2025-07-02T22:04:00Z",
              "updatedAt": "2025-07-02T22:12:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6xtkDE",
          "commit": {
            "abbreviatedOid": "e2e72fe"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-03T03:43:50Z",
          "updatedAt": "2025-07-03T03:43:50Z",
          "comments": [
            {
              "originalPosition": 98,
              "body": "We already had some text about this above, so I moved it below and restructured it a bit to clarify that we should assume DNS64 when PREF64 is not available and the NAT64 prefix can't be discovered.",
              "createdAt": "2025-07-03T03:43:50Z",
              "updatedAt": "2025-07-03T03:43:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6xyPg6",
          "commit": {
            "abbreviatedOid": "077b64b"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks good with one nit about the reference!",
          "createdAt": "2025-07-03T11:04:10Z",
          "updatedAt": "2025-07-03T11:06:49Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "Let's add a reference for what IPv6-mostly means up here at the first time we use it (I see the reference below too)",
              "createdAt": "2025-07-03T11:04:11Z",
              "updatedAt": "2025-07-03T11:06:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6x4Vg7",
          "commit": {
            "abbreviatedOid": "077b64b"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-03T18:53:54Z",
          "updatedAt": "2025-07-03T18:53:54Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "```suggestion\r\nproperly support IPv6-mostly ({{?V6-MOSTLY=I-D.ietf-v6ops-6mops}}) and IPv6-only networks.\r\n```",
              "createdAt": "2025-07-03T18:53:54Z",
              "updatedAt": "2025-07-03T18:53:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6x4Vm0",
          "commit": {
            "abbreviatedOid": "077b64b"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-03T18:54:02Z",
          "updatedAt": "2025-07-03T18:54:03Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "```suggestion\r\n{{V6-MOSTLY, Section 4.3.4}}). To ensure\r\n```",
              "createdAt": "2025-07-03T18:54:03Z",
              "updatedAt": "2025-07-03T18:54:03Z"
            }
          ]
        }
      ]
    },
    {
      "number": 82,
      "id": "PR_kwDOKH7CuM6czi10",
      "title": "Move rule for preferring past endpoints",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/82",
      "state": "CLOSED",
      "author": "nidhijaju",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This doesn't make clients completely \"unsticky\", but it means that we will only prefer past endpoints if there are no other higher order decision factors.\r\n\r\nCloses https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/77.",
      "createdAt": "2025-07-01T03:42:30Z",
      "updatedAt": "2025-07-04T04:31:11Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "a3b71b43b0417e1b8ba45ead6295e07a43236950",
      "headRepository": "nidhijaju/draft-happy-eyeballs-v3",
      "headRefName": "target-fixation",
      "headRefOid": "c00ebfee3dde80b625012094d3777cade0f47822",
      "closedAt": "2025-07-04T04:31:11Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6xqzgp",
          "commit": {
            "abbreviatedOid": "c00ebfe"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-02T22:15:32Z",
          "updatedAt": "2025-07-02T22:15:33Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Since Rule 9 is \"Use longest matching prefix\", how does moving the sticky rule after rule 9 resolve the issue? ",
              "createdAt": "2025-07-02T22:15:33Z",
              "updatedAt": "2025-07-02T22:15:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6xtqp4",
          "commit": {
            "abbreviatedOid": "c00ebfe"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-03T04:01:36Z",
          "updatedAt": "2025-07-03T04:01:36Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Rule 9 is fairly minor, but the intent was to get as close to making the stickiness the very last decision factor as possible without removing it entirely. Whether or not to remove it is something that could still up for discussion, but the suggestion in the issue was to make sure that we use it as the absolute last decision factor. Happy to adjust if you have other suggestions.",
              "createdAt": "2025-07-03T04:01:36Z",
              "updatedAt": "2025-07-03T04:01:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6x5zf6",
          "commit": {
            "abbreviatedOid": "c00ebfe"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-03T21:21:03Z",
          "updatedAt": "2025-07-03T21:21:04Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I guess the question to me is if having server-provided service priority be in separate groups is enough to resolve this in effect, since the server does have a mechanism there to get clients to move more forcibly.",
              "createdAt": "2025-07-03T21:21:03Z",
              "updatedAt": "2025-07-03T21:21:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6x8pGM",
          "commit": {
            "abbreviatedOid": "c00ebfe"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-04T04:31:08Z",
          "updatedAt": "2025-07-04T04:31:08Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Yeah, it makes sense that servers can use service priority to explicitly shift clients as necessary.\r\nFor longest matching prefix, I don't have particularly strong opinions either way, so let me close this PR for now and we can discuss on the issue if needed.",
              "createdAt": "2025-07-04T04:31:08Z",
              "updatedAt": "2025-07-04T04:31:08Z"
            }
          ]
        }
      ]
    },
    {
      "number": 83,
      "id": "PR_kwDOKH7CuM6dIjJH",
      "title": "Editorial pass on introduction",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/83",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-07-02T18:27:32Z",
      "updatedAt": "2025-07-03T10:59:36Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "b42cf39ab1f39bb5e7a0952e09c2e97df1944959",
      "headRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "headRefName": "tfp/intro-editorial",
      "headRefOid": "cb3237223a85066528e218432eb7c70d8349fe1c",
      "closedAt": "2025-07-03T10:59:36Z",
      "mergedAt": "2025-07-03T10:59:35Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "c10ac02f7f0ef33cb6bf8218e97afd3810f9a825"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah I agree there is more to do there",
          "createdAt": "2025-07-02T23:43:16Z",
          "updatedAt": "2025-07-02T23:43:16Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6xq5rz",
          "commit": {
            "abbreviatedOid": "edc39d5"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This change LGTM. We'll probably want to edit the first paragraph of the intro to focus less on broken address and more on availability of protocols, but we can do that in a follow up",
          "createdAt": "2025-07-02T22:27:33Z",
          "updatedAt": "2025-07-02T22:27:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKH7CuM6xtt3a",
          "commit": {
            "abbreviatedOid": "7317559"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Overall lgtm, just minor nits.",
          "createdAt": "2025-07-03T04:07:08Z",
          "updatedAt": "2025-07-03T04:09:14Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "```suggestion\r\nClient Hello {{ECH}} keys, address hints, and other relevant details\r\n```",
              "createdAt": "2025-07-03T04:07:09Z",
              "updatedAt": "2025-07-03T04:09:15Z"
            },
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nthe use of IPv6 or the availability of protocols like HTTP/3 {{?HTTP3=RFC9114}} and\r\n```",
              "createdAt": "2025-07-03T04:08:35Z",
              "updatedAt": "2025-07-03T04:09:15Z"
            }
          ]
        }
      ]
    },
    {
      "number": 84,
      "id": "PR_kwDOKH7CuM6dKhXz",
      "title": "Rework resolution explantion",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/84",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Rework to resolution to incorporate feedback / issues",
      "createdAt": "2025-07-02T23:02:51Z",
      "updatedAt": "2025-07-05T04:14:34Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "e4bd8d197e7ea1685cdd338d8402a698200d942d",
      "headRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "headRefName": "tfp/resolution",
      "headRefOid": "70ce077e6634bf6b811b649a340e46cfc726e54a",
      "closedAt": "2025-07-05T04:14:34Z",
      "mergedAt": "2025-07-05T04:14:34Z",
      "mergedBy": "nidhijaju",
      "mergeCommit": {
        "oid": "c4bd1046242e626df21dd0145ca5671c37d08597"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed the comments! Please let me know if you want any other changes @nidhijaju!",
          "createdAt": "2025-07-03T19:01:40Z",
          "updatedAt": "2025-07-03T19:01:40Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6xtv9Z",
          "commit": {
            "abbreviatedOid": "55a7f09"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Took a first pass, but I think some of the language may still need some work for clarity, I'll try to give more suggestions later.\r\nOverall looks good though.",
          "createdAt": "2025-07-03T04:11:08Z",
          "updatedAt": "2025-07-03T04:33:47Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n1. Successful establishment of one connection and cancellation of\r\n```",
              "createdAt": "2025-07-03T04:11:08Z",
              "updatedAt": "2025-07-03T04:33:47Z"
            },
            {
              "originalPosition": 5,
              "body": "Is it worth keeping the note that this is asynchronous?",
              "createdAt": "2025-07-03T04:12:00Z",
              "updatedAt": "2025-07-03T04:33:47Z"
            },
            {
              "originalPosition": 47,
              "body": "```suggestion\r\nto reach the host. The client resolves the hostname into IP\r\n```",
              "createdAt": "2025-07-03T04:13:01Z",
              "updatedAt": "2025-07-03T04:33:47Z"
            },
            {
              "originalPosition": 69,
              "body": "```suggestion\r\nIn addition to requesting AAAA and A records, depending on which\r\napplication is establishing the connection, clients can request\r\neither SVCB or HTTPS records {{SVCB}}. For applications using\r\nHTTP or HTTPS (including applications using WebSockets), the\r\nclient SHOULD send a query for HTTPS records.\r\n```",
              "createdAt": "2025-07-03T04:21:11Z",
              "updatedAt": "2025-07-03T04:33:47Z"
            },
            {
              "originalPosition": 76,
              "body": "Just to be consistent about ordering with above:\r\n```suggestion\r\n1. SVCB or HTTPS query\r\n```",
              "createdAt": "2025-07-03T04:22:00Z",
              "updatedAt": "2025-07-03T04:33:48Z"
            },
            {
              "originalPosition": 129,
              "body": "```suggestion\r\nprocessing different record types independently.\r\n```",
              "createdAt": "2025-07-03T04:23:41Z",
              "updatedAt": "2025-07-03T04:33:48Z"
            },
            {
              "originalPosition": 157,
              "body": "```suggestion\r\nconnectivity, that address family should be considered the preferred address\r\n```",
              "createdAt": "2025-07-03T04:28:41Z",
              "updatedAt": "2025-07-03T04:33:48Z"
            },
            {
              "originalPosition": 186,
              "body": "```suggestion\r\nset of responses as new answers (see {{new-answers}}).\r\n```",
              "createdAt": "2025-07-03T04:31:15Z",
              "updatedAt": "2025-07-03T04:33:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6x4bNc",
          "commit": {
            "abbreviatedOid": "55a7f09"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-03T18:59:04Z",
          "updatedAt": "2025-07-03T18:59:04Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n1. Asynchronous resolution of a hostname into destination addresses ({{resolution}})\r\n```",
              "createdAt": "2025-07-03T18:59:04Z",
              "updatedAt": "2025-07-03T18:59:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6x86fq",
          "commit": {
            "abbreviatedOid": "302cd9f"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-04T04:45:55Z",
          "updatedAt": "2025-07-04T05:23:51Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "```suggestion\r\nhandling IPv6-mostly and IPv6-only networks.\r\n```\r\nShould we also mention IPv6-mostly here, since that section now talks about both?",
              "createdAt": "2025-07-04T04:45:55Z",
              "updatedAt": "2025-07-04T05:23:51Z"
            },
            {
              "originalPosition": 82,
              "body": "```suggestion\r\nmove onto the phases of sorting addresses ({{sorting}})\r\n```",
              "createdAt": "2025-07-04T04:48:26Z",
              "updatedAt": "2025-07-04T05:23:51Z"
            },
            {
              "originalPosition": 86,
              "body": "```suggestion\r\nbefore starting the next steps of connection establishment. If one query\r\n```",
              "createdAt": "2025-07-04T04:49:05Z",
              "updatedAt": "2025-07-04T05:23:51Z"
            },
            {
              "originalPosition": 88,
              "body": "```suggestion\r\nfails or takes significantly longer to return, waiting for\r\nthose answers can significantly delay connection\r\n```",
              "createdAt": "2025-07-04T04:58:31Z",
              "updatedAt": "2025-07-04T05:23:51Z"
            },
            {
              "originalPosition": 125,
              "body": "```suggestion\r\nestablishment that could otherwise proceed with already received answers.\r\n```\r\nNot sure that's the best wording, but that's the best I could come up with to clarify what we mean.",
              "createdAt": "2025-07-04T05:00:34Z",
              "updatedAt": "2025-07-04T05:23:51Z"
            },
            {
              "originalPosition": 131,
              "body": "```suggestion\r\nfor each record type in parallel.\r\n```\r\nJust think it's maybe better to keep threads out of it, since it's an implementation detail.",
              "createdAt": "2025-07-04T05:01:49Z",
              "updatedAt": "2025-07-04T05:23:51Z"
            },
            {
              "originalPosition": 134,
              "body": "```suggestion\r\nonce one of the following condition sets is met:\r\n```",
              "createdAt": "2025-07-04T05:03:45Z",
              "updatedAt": "2025-07-04T05:23:51Z"
            },
            {
              "originalPosition": 138,
              "body": "No strong opinions, but should we define what \"address answers\" means? i.e. it includes address hints from SVCB records.",
              "createdAt": "2025-07-04T05:09:38Z",
              "updatedAt": "2025-07-04T05:23:51Z"
            },
            {
              "originalPosition": 155,
              "body": "```suggestion\r\nassumed to be the preferred address family. If only one of IPv6 or IPv4 offers\r\n```",
              "createdAt": "2025-07-04T05:11:54Z",
              "updatedAt": "2025-07-04T05:23:51Z"
            },
            {
              "originalPosition": 160,
              "body": "```suggestion\r\nto receive preferred addresses (via AAAA records) along\r\n```",
              "createdAt": "2025-07-04T05:13:15Z",
              "updatedAt": "2025-07-04T05:23:51Z"
            },
            {
              "originalPosition": 163,
              "body": "```suggestion\r\nfor the case where the AAAA or SVCB/HTTPS records follow the\r\nA records by a few milliseconds. This delay is referred to as\r\n```\r\n\"answers\" is maybe better here? If not, recoreds --> records :)",
              "createdAt": "2025-07-04T05:17:17Z",
              "updatedAt": "2025-07-04T14:17:46Z"
            },
            {
              "originalPosition": 183,
              "body": "This kind of implies that if we get a ipv6hint, we don't need to issue AAAA queries anymore for that TargetName, since we just claimed that it was considered a positive answer. We should still issue AAAA queries, right?\r\n\r\nIs there a way to clarify that we want to use the hints as address answers without confusing people here?",
              "createdAt": "2025-07-04T05:21:24Z",
              "updatedAt": "2025-07-04T05:23:51Z"
            },
            {
              "originalPosition": 174,
              "body": "```suggestion\r\nis \".\", or are associated with another service name (see {{Section 2.5 of SVCB}}).\r\n```",
              "createdAt": "2025-07-04T05:21:58Z",
              "updatedAt": "2025-07-04T05:23:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6yEIu0",
          "commit": {
            "abbreviatedOid": "ae288ae"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-04T14:19:13Z",
          "updatedAt": "2025-07-04T14:19:13Z",
          "comments": [
            {
              "originalPosition": 183,
              "body": "So this sentence you highlight is the one that says \"you still needs to send A and AAAA queries for the target name, even though you start moving forward with the hints if that is all you have\". I think that's the right behavior. ",
              "createdAt": "2025-07-04T14:19:13Z",
              "updatedAt": "2025-07-04T14:19:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6yFa0z",
          "commit": {
            "abbreviatedOid": "302cd9f"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-04T16:06:27Z",
          "updatedAt": "2025-07-04T16:06:27Z",
          "comments": [
            {
              "originalPosition": 183,
              "body": "@nidhijaju I updated the paragraph to be a bit clearer, let me know what you think",
              "createdAt": "2025-07-04T16:06:27Z",
              "updatedAt": "2025-07-04T16:06:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6yFa6d",
          "commit": {
            "abbreviatedOid": "302cd9f"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-04T16:06:45Z",
          "updatedAt": "2025-07-04T16:06:45Z",
          "comments": [
            {
              "originalPosition": 138,
              "body": "I added sentences below now, explaining positive and negative answers more clearly",
              "createdAt": "2025-07-04T16:06:45Z",
              "updatedAt": "2025-07-04T16:06:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6yKF0Q",
          "commit": {
            "abbreviatedOid": "70ce077"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks good, thank you!",
          "createdAt": "2025-07-05T04:13:09Z",
          "updatedAt": "2025-07-05T04:13:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 85,
      "id": "PR_kwDOKH7CuM6dMb-O",
      "title": "Separate out application / service priority / address sorting",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/85",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Rework to sorting section, to update based on discussion and feedback at IETF 122",
      "createdAt": "2025-07-03T04:31:33Z",
      "updatedAt": "2025-07-04T13:59:57Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "b42cf39ab1f39bb5e7a0952e09c2e97df1944959",
      "headRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "headRefName": "tfp/grouping",
      "headRefOid": "1edb943e58320476ea3dee5f8d3b3dc9a0dfa509",
      "closedAt": "2025-07-04T13:59:57Z",
      "mergedAt": "2025-07-04T13:59:57Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "d43651622a864e94bfab5c665bb40c618ba38e8a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM6xuewP",
          "commit": {
            "abbreviatedOid": "3b847cb"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-03T05:30:35Z",
          "updatedAt": "2025-07-03T06:08:52Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Is it possible to make \"goes through\" less colloquial? Maybe something like \"uses\"?",
              "createdAt": "2025-07-03T05:30:35Z",
              "updatedAt": "2025-07-03T06:08:52Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nand sorting of addresses based on the DNS answers received.\r\n```",
              "createdAt": "2025-07-03T05:31:14Z",
              "updatedAt": "2025-07-03T06:08:52Z"
            },
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nClients first group based on which application protocols the\r\ndestination endpoints support, and which security features\r\nthose endpoints offer. These are based on\r\n```",
              "createdAt": "2025-07-03T05:34:58Z",
              "updatedAt": "2025-07-03T06:08:52Z"
            },
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nassumes they support the same protocols and security properties.\r\n```",
              "createdAt": "2025-07-03T05:37:50Z",
              "updatedAt": "2025-07-03T06:08:52Z"
            },
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nHowever, the client is aware of different sets of destination endpoints\r\nthat advertise different capabilities when it receives multiple distinct\r\nSVCB/HTTPS records. The client SHOULD separate these\r\n```",
              "createdAt": "2025-07-03T05:42:54Z",
              "updatedAt": "2025-07-03T06:08:52Z"
            },
            {
              "originalPosition": 46,
              "body": "```suggestion\r\naddresses into different groups, such that all addresses in a\r\n```",
              "createdAt": "2025-07-03T05:43:19Z",
              "updatedAt": "2025-07-03T06:08:52Z"
            },
            {
              "originalPosition": 48,
              "body": "```suggestion\r\nproperties. The specific parameters that are relevant to the client\r\n```",
              "createdAt": "2025-07-03T05:44:24Z",
              "updatedAt": "2025-07-03T06:08:52Z"
            },
            {
              "originalPosition": 73,
              "body": "```suggestion\r\nThe logic for prioritizing and falling back between groups\r\n```",
              "createdAt": "2025-07-03T05:48:22Z",
              "updatedAt": "2025-07-03T06:08:52Z"
            },
            {
              "originalPosition": 75,
              "body": "```suggestion\r\nproperties is implementation-defined.\r\n```",
              "createdAt": "2025-07-03T05:48:43Z",
              "updatedAt": "2025-07-03T06:08:52Z"
            },
            {
              "originalPosition": 76,
              "body": "This section doesn't really talk about what security properties clients should consider. Is there more we need to say here for clarity, perhaps an example?",
              "createdAt": "2025-07-03T05:49:41Z",
              "updatedAt": "2025-07-03T06:08:52Z"
            },
            {
              "originalPosition": 81,
              "body": "Just noting that this doesn't address the operational consideration raised in https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/issues/71 that sometimes the security properties may not be preferred over SVCB priorities. Could be addressed in a follow-up, but thought it was worth mentioning here since we're moving around a lot of text.",
              "createdAt": "2025-07-03T05:55:03Z",
              "updatedAt": "2025-07-03T06:08:52Z"
            },
            {
              "originalPosition": 101,
              "body": "```suggestion\r\nas defined in {{application-group}}), either by an associated AAAA\r\n```",
              "createdAt": "2025-07-03T05:57:30Z",
              "updatedAt": "2025-07-03T06:08:52Z"
            },
            {
              "originalPosition": 125,
              "body": "```suggestion\r\nTargetName), the unassociated addresses SHOULD be put in a group\r\n```",
              "createdAt": "2025-07-03T05:59:18Z",
              "updatedAt": "2025-07-03T06:08:52Z"
            },
            {
              "originalPosition": 123,
              "body": "```suggestion\r\nrecords that do not have an associated service (for example, if no\r\n```",
              "createdAt": "2025-07-03T06:00:36Z",
              "updatedAt": "2025-07-03T06:08:52Z"
            },
            {
              "originalPosition": 225,
              "body": "Are we saying that this is out of scope for the document or implementation-defined? I assume it's the latter.",
              "createdAt": "2025-07-03T06:05:09Z",
              "updatedAt": "2025-07-03T06:08:52Z"
            },
            {
              "originalPosition": 241,
              "body": "Just curious, don't we refer to this above as well? Why do we need to link it here again?",
              "createdAt": "2025-07-03T06:08:41Z",
              "updatedAt": "2025-07-03T06:08:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6x4SpR",
          "commit": {
            "abbreviatedOid": "3b847cb"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-03T18:51:05Z",
          "updatedAt": "2025-07-03T18:51:06Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Yup!\r\n```suggestion\r\nThe client performs three levels of grouping\r\n```",
              "createdAt": "2025-07-03T18:51:06Z",
              "updatedAt": "2025-07-03T18:51:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6x475U",
          "commit": {
            "abbreviatedOid": "3b847cb"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-03T19:53:11Z",
          "updatedAt": "2025-07-03T19:53:11Z",
          "comments": [
            {
              "originalPosition": 225,
              "body": "```suggestion\r\ngroup is up to the client implementation and out of scope for this document.\r\n```",
              "createdAt": "2025-07-03T19:53:11Z",
              "updatedAt": "2025-07-03T19:53:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6x5xUN",
          "commit": {
            "abbreviatedOid": "96e5884"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-03T21:15:08Z",
          "updatedAt": "2025-07-03T21:15:08Z",
          "comments": [
            {
              "originalPosition": 81,
              "body": "Right, this doesn't address that yet, but I think that was something the WG didn't come to agreement on yet.",
              "createdAt": "2025-07-03T21:15:08Z",
              "updatedAt": "2025-07-03T21:15:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6x5x0D",
          "commit": {
            "abbreviatedOid": "96e5884"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-03T21:16:30Z",
          "updatedAt": "2025-07-03T21:16:30Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nconfiguration (\"ech\" values, see {{!SVCB-ECH=I-D.ietf-tls-svcb-ech}}).\r\n```",
              "createdAt": "2025-07-03T21:16:30Z",
              "updatedAt": "2025-07-03T21:16:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6x5x6s",
          "commit": {
            "abbreviatedOid": "96e5884"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-03T21:16:49Z",
          "updatedAt": "2025-07-03T21:16:49Z",
          "comments": [
            {
              "originalPosition": 241,
              "body": "```suggestion\r\ncontain the \"ech\" SvcParamKey {{SVCB-ECH}}. If the\r\n```",
              "createdAt": "2025-07-03T21:16:49Z",
              "updatedAt": "2025-07-03T21:16:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6x5yYm",
          "commit": {
            "abbreviatedOid": "aa65b4e"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-03T21:18:02Z",
          "updatedAt": "2025-07-03T21:18:02Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "What do you mean? We do mention ECH, and that the client can group by that support, and thus prioritize based on that. Is there another concrete example you were thinking of?",
              "createdAt": "2025-07-03T21:18:02Z",
              "updatedAt": "2025-07-03T21:18:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM6x9Tt2",
          "commit": {
            "abbreviatedOid": "aa65b4e"
          },
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-04T05:25:42Z",
          "updatedAt": "2025-07-04T05:38:11Z",
          "comments": [
            {
              "originalPosition": 133,
              "body": "```suggestion\r\n## Sorting Destination Addresses Within Groups {#address-sorting}\r\n```",
              "createdAt": "2025-07-04T05:25:42Z",
              "updatedAt": "2025-07-04T05:38:11Z"
            },
            {
              "originalPosition": 27,
              "body": "```suggestion\r\n1. Grouping and sorting by application protocol and security requirements ({{application-group}})\r\n1. Grouping and sorting by service priorities ({{service-group}})\r\n1. Sorting by destination address preferences ({{address-sorting}})\r\n```",
              "createdAt": "2025-07-04T05:26:02Z",
              "updatedAt": "2025-07-04T05:38:11Z"
            },
            {
              "originalPosition": 32,
              "body": "```suggestion\r\ndestination endpoints support and which security features\r\n```",
              "createdAt": "2025-07-04T05:26:32Z",
              "updatedAt": "2025-07-04T05:38:11Z"
            },
            {
              "originalPosition": 76,
              "body": "We kind of mentioned ECH in the first paragraph, but it seems to be in passing. I was wondering if we could add some more of the considerations around how to incorporate ECH into sorting in this group, which will also help make it more clear how to tell when security properties are the same.\r\n\r\nI know we have an issue open specifically for discussing the impact of ECH though, so we can punt it to that, if preferred.",
              "createdAt": "2025-07-04T05:29:40Z",
              "updatedAt": "2025-07-04T05:38:11Z"
            }
          ]
        }
      ]
    },
    {
      "number": 86,
      "id": "PR_kwDOKH7CuM6fAfJx",
      "title": "fix: minor typo clide-side client-side",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/86",
      "state": "MERGED",
      "author": "mxinden",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-07-15T14:54:56Z",
      "updatedAt": "2025-07-15T16:37:48Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "c4bd1046242e626df21dd0145ca5671c37d08597",
      "headRepository": "mxinden/draft-happy-eyeballs-v3",
      "headRefName": "patch-1",
      "headRefOid": "0b02d358351fe150e6e16b232c1d978baac05716",
      "closedAt": "2025-07-15T16:37:48Z",
      "mergedAt": "2025-07-15T16:37:47Z",
      "mergedBy": "DavidSchinazi",
      "mergeCommit": {
        "oid": "7698dca45c2bf50c5e0b46f23424d789ae33fbbc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM60FA8x",
          "commit": {
            "abbreviatedOid": "0b02d35"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-15T16:37:40Z",
          "updatedAt": "2025-07-15T16:37:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 93,
      "id": "PR_kwDOKH7CuM6go6LF",
      "title": "Try of minor rewrite of Transition Technology section",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/93",
      "state": "OPEN",
      "author": "philsbln",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "This tries to address issues #42 #87 #91\r\n\r\nIt is merely meant as a discussion starter and my open more questions than it answers,\r\nbut should reflect the discussions @oskar456 and I had.\r\n\r\nBasic assumptions:\r\n - We want to treat synthesized NAT64 address as IPv4\r\n - NAT64 address synthesis makes sense when knowing the NAT64 prefix\r\n - If we have PREF64 and DNS64, that's kind of double and we want to adjust for that\r\n ",
      "createdAt": "2025-07-25T14:10:03Z",
      "updatedAt": "2025-07-29T21:47:45Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "7698dca45c2bf50c5e0b46f23424d789ae33fbbc",
      "headRepository": "philsbln/draft-happy-eyeballs-v3",
      "headRefName": "philsbln-trans46-minor-rewrite",
      "headRefOid": "84cd60845856fddad2951faa2733c4bc0c2a4573",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "oskar456",
          "authorAssociation": "NONE",
          "body": "Hey @philsbln, thank you for this PR. I think it goes in the right direction but it still keep some issues mentioned in #91 open. I am trying now to rephrase section 8 in a more dramatic way. I will come back soon with a competing PR.",
          "createdAt": "2025-07-26T10:23:34Z",
          "updatedAt": "2025-07-26T10:23:34Z"
        },
        {
          "author": "oskar456",
          "authorAssociation": "NONE",
          "body": "> Hey @philsbln, thank you for this PR. I think it goes in the right direction but it still keep some issues mentioned in #91 open. I am trying now to rephrase section 8 in a more dramatic way. I will come back soon with a competing PR.\r\n\r\nThe competing PR is #94. ",
          "createdAt": "2025-07-29T21:47:45Z",
          "updatedAt": "2025-07-29T21:47:45Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 94,
      "id": "PR_kwDOKH7CuM6hQQbS",
      "title": "Rewrite Supporting IPv6-only networks section",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/94",
      "state": "OPEN",
      "author": "oskar456",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "This simplifies the section about IPv6-only networks while hopefully addressing comments from #91:\r\n\r\n - Remove mentions of IPv6-mostly, since the host where Happy Eyeballs runs will never be IPv6-mostly, it would be either Dual-stack or IPv6-only.\r\n - Use the presence of PREF64 as the only detection mechanism of NAT64\r\n - Note that RFC 7050 should be used, but only when RFC 8781 failed\r\n - Prescribe handling of IPv4 addresses by first looking up the routing table (needed for VPNs) and then synthesizing IPv6. This already covers the former text on IPv4 literals, broken AAAA records and VPN case\r\n - Add section on dealing with DNS64: basically detect and undo since it is not needed for HE.\r\n - Removed the `Last Resort Local Synthesis Delay` configurable variable. If we want HE to function properly without DNS64, every IPv4-only destination looks exactly like \"Broken AAAA record\" case and we definitely don't want 2 second delay every single time.",
      "createdAt": "2025-07-29T21:43:48Z",
      "updatedAt": "2025-10-14T04:10:42Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "7698dca45c2bf50c5e0b46f23424d789ae33fbbc",
      "headRepository": "oskar456/draft-happy-eyeballs-v3",
      "headRefName": "oc-fix-section8",
      "headRefOid": "e7512aa5f77f2476d581287caecf9b0d9585ac7b",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "nidhijaju",
          "authorAssociation": "COLLABORATOR",
          "body": "@furry13 @lcolitti Could you please take a look at this as well?",
          "createdAt": "2025-10-14T04:10:42Z",
          "updatedAt": "2025-10-14T04:10:42Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM62_u64",
          "commit": {
            "abbreviatedOid": "d7a9b63"
          },
          "author": "philsbln",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "I like the rewrite, but it still needs refining. \r\n\r\nWe let's have the editors take a look at this one and #93 and have them decide which one would be the better starting point. Either one works for me.",
          "createdAt": "2025-07-30T07:04:46Z",
          "updatedAt": "2025-07-30T07:16:51Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "Too complicated\u2026\r\n```suggestion\r\nWhen PREF64 is discovered, dual-stack connectivity can be assumed and the Happy Eyeballs engine should query DNS for AAAA and A records.\r\n```",
              "createdAt": "2025-07-30T07:04:47Z",
              "updatedAt": "2025-07-30T07:16:51Z"
            },
            {
              "originalPosition": 75,
              "body": "```suggestion\r\nAll IPv4 based candidates, independent whether they came from an IPv4 address literal,\r\nhint in SVCB record, or were result of a query for A records, should be pre-processed in the following way:\r\n```",
              "createdAt": "2025-07-30T07:08:50Z",
              "updatedAt": "2025-07-30T07:16:51Z"
            },
            {
              "originalPosition": 78,
              "body": "```suggestion\r\n  1. Consult IPv4 routing table. If there is a valid route towards requested\r\n     destination, that is not a CLAT device, send native IPv4 data.\r\n```",
              "createdAt": "2025-07-30T07:13:21Z",
              "updatedAt": "2025-07-30T07:16:51Z"
            },
            {
              "originalPosition": 175,
              "body": "```suggestion\r\nThe IPv6 addresses created\r\n```",
              "createdAt": "2025-07-30T07:13:57Z",
              "updatedAt": "2025-07-30T07:16:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM63AnLG",
          "commit": {
            "abbreviatedOid": "d7a9b63"
          },
          "author": "oskar456",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-30T08:21:50Z",
          "updatedAt": "2025-07-30T08:21:51Z",
          "comments": [
            {
              "originalPosition": 78,
              "body": "I don't agree here. Figuring out whether a device is CLAT is not something that can be easily done in a portable way.  Hence the MAY in my text. It can be easily done in HE implementation inside the operating system which also takes care of the CLAT, but it might be virtually impossible to detect that the device is CLAT if this is a HE library embedded in something like Firefox or Chrome.",
              "createdAt": "2025-07-30T08:21:50Z",
              "updatedAt": "2025-07-30T08:21:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKH7CuM63A2Jc",
          "commit": {
            "abbreviatedOid": "d7a9b63"
          },
          "author": "philsbln",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-30T08:40:04Z",
          "updatedAt": "2025-07-30T08:40:04Z",
          "comments": [
            {
              "originalPosition": 78,
              "body": "I am less pessimistic here\u2026 All host based CLAT Implementations i know use a source address from 192.0.0.0/29, as recommended by [draft-ietf-v6ops-claton/](https://datatracker.ietf.org/doc/draft-ietf-v6ops-claton/), so you can check the source address (which is the only way to query the routing table anyway) and have a clear signal. ",
              "createdAt": "2025-07-30T08:40:04Z",
              "updatedAt": "2025-07-30T08:40:04Z"
            }
          ]
        }
      ]
    },
    {
      "number": 96,
      "id": "PR_kwDOKH7CuM6tycZL",
      "title": "Generalize connection establishment, explain extending timer",
      "url": "https://github.com/ietf-wg-happy/draft-happy-eyeballs-v3/pull/96",
      "state": "OPEN",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Closes #88",
      "createdAt": "2025-10-15T03:32:27Z",
      "updatedAt": "2025-10-16T00:39:03Z",
      "baseRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "baseRefName": "main",
      "baseRefOid": "7698dca45c2bf50c5e0b46f23424d789ae33fbbc",
      "headRepository": "ietf-wg-happy/draft-happy-eyeballs-v3",
      "headRefName": "tfpauly-patch-7",
      "headRefOid": "889e16474a777e883b392cd7693fa0d745f734e4",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKH7CuM7HPdQL",
          "commit": {
            "abbreviatedOid": "889e164"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Overall I like this direction, but see comment about \"the timer\"",
          "createdAt": "2025-10-16T00:34:34Z",
          "updatedAt": "2025-10-16T00:39:03Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "```suggestion\nestablishment was successful. For example, clients generally validate that\nthe server's certificate provided via TLS is trusted, and that operation can\nbe asynchronous.\n```",
              "createdAt": "2025-10-16T00:34:34Z",
              "updatedAt": "2025-10-16T00:39:04Z"
            },
            {
              "originalPosition": 30,
              "body": "This is the first mention of \"the timer\" in the spec. The previous section talks about connection attempts, and mentions timers at other levels (like the TCP retransmission timer) - but this sentence seems to indicate that there exists a timer to start the connection attempt. Obviously, that timer does exist, but I think we need to properly define it, otherwise it's confusing. I would recommend giving it a name (maybe \"next connection attempt timer\") and defining it in the `{{connections}}` section above. Then we can reference it here, and then talk about how that timer sometimes needs to be extended.",
              "createdAt": "2025-10-16T00:38:32Z",
              "updatedAt": "2025-10-16T00:39:04Z"
            }
          ]
        }
      ]
    }
  ]
}